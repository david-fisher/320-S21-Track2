# Generated by Django 2.2.12 on 2021-04-19 18:25

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='COURSES',
            fields=[
                ('COURSE', models.AutoField(default=None, primary_key=True, serialize=False)),
                ('NAME', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='PAGES',
            fields=[
                ('PAGE', models.AutoField(primary_key=True, serialize=False)),
                ('PAGE_TYPE', models.CharField(choices=[('I', 'INTRO'), ('G', 'GENERIC'), ('R', 'REFLECTION'), ('S', 'STAKEHOLDER'), ('A', 'ACTION')], max_length=2)),
                ('PAGE_TITLE', models.CharField(max_length=1000)),
                ('BODY', models.TextField(default='default')),
                ('VERSION', models.IntegerField(default=1, unique=True)),
                ('X_COORDINATE', models.IntegerField()),
                ('Y_COORDINATE', models.IntegerField()),
                ('NEXT_PAGE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages2', to='tables.PAGES', unique=True)),
                ('NEXT_PAGE_VERSION', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages3', to='tables.PAGES', to_field='VERSION', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PROFESSORS',
            fields=[
                ('PROFESSOR', models.IntegerField(primary_key=True, serialize=False)),
                ('FNAME', models.CharField(default='default', max_length=1000)),
                ('LNAME', models.CharField(default='default', max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='SCENARIOS',
            fields=[
                ('SCENARIO', models.IntegerField(unique=True)),
                ('VERSION', models.IntegerField(default=1, unique=True)),
                ('NAME', models.CharField(max_length=1000)),
                ('PUBLIC', models.BooleanField(default=False)),
                ('NUM_CONVERSATION', models.IntegerField(default=0)),
                ('IS_FINISHED', models.BooleanField(default=False)),
                ('DATE_CREATED', models.DateField(auto_now_add=True)),
                ('SCENARIO_ID', models.AutoField(primary_key=True, serialize=False)),
                ('PROFESSOR', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='scenario_creator2', to='tables.PROFESSORS')),
            ],
            options={
                'unique_together': {('SCENARIO', 'VERSION')},
            },
        ),
        migrations.CreateModel(
            name='STAKEHOLDERS',
            fields=[
                ('STAKEHOLDER', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('VERSION', models.IntegerField(default=1, unique=True)),
                ('NAME', models.CharField(default='default', max_length=1000)),
                ('DESCRIPTION', models.TextField(default='default')),
                ('JOB', models.TextField(default='default')),
                ('INTRODUCTION', models.TextField(default='default')),
                ('ENABLE_MULTI_CONVO', models.BooleanField(default=False)),
                ('SCENARIO', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='stakeholders1', to='tables.SCENARIOS')),
            ],
            options={
                'unique_together': {('STAKEHOLDER', 'VERSION')},
            },
        ),
        migrations.CreateModel(
            name='STUDENTS',
            fields=[
                ('STUDENT', models.IntegerField(primary_key=True, serialize=False)),
                ('FNAME', models.CharField(default='default', max_length=100)),
                ('LNAME', models.CharField(default='default', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='DEMOGRAPHICS',
            fields=[
                ('STUDENT', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='demographics', serialize=False, to='tables.STUDENTS')),
                ('AGE', models.SmallIntegerField()),
                ('GRADE', models.CharField(default='default', max_length=10)),
                ('GENDER', models.CharField(choices=[('M', 'MALE'), ('F', 'FEMALE'), ('OT', 'OTHER')], max_length=2)),
                ('RACE', models.CharField(max_length=50)),
                ('MAJOR', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='RESPONSES',
            fields=[
                ('RESPONSE_ID', models.AutoField(default=None, editable=False, primary_key=True, serialize=False)),
                ('RESPONSE', models.IntegerField()),
                ('VERSION', models.IntegerField(default=1)),
                ('DATE_TAKEN', models.DateField(auto_now_add=True)),
                ('CHOICE', models.TextField()),
                ('COURSE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses4', to='tables.COURSES')),
                ('PAGE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses3', to='tables.PAGES')),
                ('PAGE_VERSION', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses69', to='tables.PAGES', to_field='VERSION')),
                ('SCENARIO', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses2', to='tables.SCENARIOS')),
                ('STUDENT', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses1', to='tables.STUDENTS')),
            ],
            options={
                'unique_together': {('RESPONSE', 'STUDENT', 'SCENARIO', 'PAGE', 'COURSE', 'DATE_TAKEN')},
            },
        ),
        migrations.CreateModel(
            name='REFLECTIONS_TAKEN',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('REFLECTIONS', models.TextField(default='default')),
                ('RESPONSE_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations_had5', to='tables.RESPONSES')),
            ],
        ),
        migrations.CreateModel(
            name='REFLECTION_QUESTIONS',
            fields=[
                ('REFLECTION_QUESTION', models.TextField(unique=True)),
                ('ID', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('VERSION', models.IntegerField(default=1)),
            ],
            options={
                'unique_together': {('VERSION', 'ID')},
            },
        ),
        migrations.CreateModel(
            name='QUESTIONS',
            fields=[
                ('QUESTION', models.AutoField(primary_key=True, serialize=False)),
                ('VERSION', models.IntegerField(default=1)),
                ('POINTS', models.IntegerField(default=1)),
                ('QUESTION_TEXT', models.TextField(default='default')),
                ('QUESTION_SUMMARY', models.TextField(default='default')),
            ],
            options={
                'unique_together': {('QUESTION', 'VERSION')},
            },
        ),
        migrations.AddField(
            model_name='pages',
            name='SCENARIO',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages1', to='tables.SCENARIOS'),
        ),
        migrations.CreateModel(
            name='ISSUES',
            fields=[
                ('ISSUE', models.AutoField(default=None, editable=False, primary_key=True, serialize=False)),
                ('NAME', models.CharField(max_length=1000)),
                ('IMPORTANCE_SCORE', models.IntegerField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('SCENARIO_ID', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='scenario_id1', to='tables.SCENARIOS')),
            ],
        ),
        migrations.CreateModel(
            name='CONVERSATIONS',
            fields=[
                ('CONVERSATION', models.AutoField(default=None, primary_key=True, serialize=False)),
                ('QUESTION', models.TextField(default='default')),
                ('RESPONSE', models.TextField(default='default')),
                ('STAKEHOLDER', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations1', to='tables.STAKEHOLDERS')),
                ('STAKEHOLDER_VERSION', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations2', to='tables.STAKEHOLDERS', to_field='VERSION')),
            ],
        ),
        migrations.CreateModel(
            name='STUDENT_TIMES',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DATE_TAKEN', models.DateField(auto_now_add=True)),
                ('PAGE', models.IntegerField()),
                ('START_TIME', models.DateField(null=True)),
                ('END_TIME', models.DateField(null=True)),
                ('COURSE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_times3', to='tables.COURSES')),
                ('SCENARIO_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_times2', to='tables.SCENARIOS')),
                ('STUDENT', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_times1', to='tables.STUDENTS')),
            ],
            options={
                'unique_together': {('STUDENT', 'SCENARIO_ID', 'COURSE', 'DATE_TAKEN', 'PAGE')},
            },
        ),
        migrations.CreateModel(
            name='STAKEHOLDER_TO_PAGE',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PAGE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stakeholder_page5', to='tables.PAGES')),
                ('PAGE_VERSION', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stakeholder_page7', to='tables.PAGES', to_field='VERSION')),
                ('STAKEHOLDER', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stakeholder_page6', to='tables.STAKEHOLDERS')),
                ('STAKEHOLDER_VERSION', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stakeholder_page8', to='tables.STAKEHOLDERS', to_field='VERSION')),
            ],
            options={
                'unique_together': {('PAGE', 'PAGE_VERSION', 'STAKEHOLDER', 'STAKEHOLDER_VERSION')},
            },
        ),
        migrations.CreateModel(
            name='RESPONSES_TO_CONVERSATIONS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SCORE', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('CONVERSATION', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responsesTC3', to='tables.CONVERSATIONS')),
                ('RESPONSE_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responsesTC1', to='tables.RESPONSES')),
                ('STAKEHOLDER', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responsesTC2', to='tables.STAKEHOLDERS')),
                ('STAKEHOLDER_VERSION', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responsesTC69', to='tables.STAKEHOLDERS', to_field='VERSION')),
            ],
            options={
                'unique_together': {('RESPONSE_ID', 'CONVERSATION')},
            },
        ),
        migrations.CreateModel(
            name='REFLECTION_QUESTION_TO_PAGE',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PAGE_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reflection_questions_to_page1', to='tables.PAGES')),
                ('PAGE_VERSION', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reflection_questions_to_page4', to='tables.PAGES', to_field='VERSION')),
                ('REFLECTION_QUESTION_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reflection_questions_to_page3', to='tables.REFLECTION_QUESTIONS')),
                ('REFLECTION_QUESTION_VERSION', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reflection_questions_to_page2', to='tables.REFLECTION_QUESTIONS', to_field='REFLECTION_QUESTION')),
            ],
            options={
                'unique_together': {('PAGE_ID', 'REFLECTION_QUESTION_VERSION', 'REFLECTION_QUESTION_ID', 'PAGE_VERSION')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='pages',
            unique_together={('PAGE', 'VERSION')},
        ),
        migrations.CreateModel(
            name='GENERIC_PAGE',
            fields=[
                ('BODY', models.TextField(default=True)),
                ('ID', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('PAGE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generic_page1', to='tables.PAGES', unique=True)),
                ('VERSION', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generic_page2', to='tables.PAGES', to_field='VERSION', unique=True)),
            ],
            options={
                'unique_together': {('ID', 'VERSION')},
            },
        ),
        migrations.CreateModel(
            name='STUDENTS_TO_COURSE',
            fields=[
                ('STUDENT', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='students_to_course1', serialize=False, to='tables.STUDENTS')),
                ('COURSE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students_to_couse2', to='tables.COURSES')),
            ],
            options={
                'unique_together': {('STUDENT', 'COURSE')},
            },
        ),
        migrations.CreateModel(
            name='SCENARIOS_FOR',
            fields=[
                ('SCENARIO_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='scenarios_for1', serialize=False, to='tables.SCENARIOS')),
                ('VERSION', models.IntegerField(default=1)),
                ('COURSE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scenarios_for2', to='tables.COURSES')),
            ],
            options={
                'unique_together': {('SCENARIO_ID', 'COURSE')},
            },
        ),
        migrations.CreateModel(
            name='PROFESSORS_TO_SCENARIO',
            fields=[
                ('PROFESSOR', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='professors_to_scenario1', serialize=False, to='tables.PROFESSORS')),
                ('PERMISSION', models.IntegerField()),
                ('SCENARIO', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='professors_to_scenario2', to='tables.SCENARIOS')),
            ],
            options={
                'unique_together': {('PROFESSOR', 'SCENARIO')},
            },
        ),
        migrations.CreateModel(
            name='PROFESSORS_TO_COURSES',
            fields=[
                ('PROFESSOR', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='professors_to_courses1', serialize=False, to='tables.PROFESSORS')),
                ('COURSE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='professors_to_courses2', to='tables.COURSES')),
            ],
            options={
                'unique_together': {('PROFESSOR', 'COURSE')},
            },
        ),
        migrations.CreateModel(
            name='PAGES_TO_SCENARIO',
            fields=[
                ('PAGE_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='stakeholder_page1', serialize=False, to='tables.PAGES')),
                ('PAGE_VERSION', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stakeholder_page3', to='tables.PAGES', to_field='VERSION')),
                ('SCENARIO_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stakeholder_page2', to='tables.SCENARIOS')),
                ('SCENARIO_VERSION', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stakeholder_page4', to='tables.SCENARIOS', to_field='VERSION')),
            ],
            options={
                'unique_together': {('PAGE_ID', 'SCENARIO_ID', 'PAGE_VERSION')},
            },
        ),
        migrations.CreateModel(
            name='COVERAGE',
            fields=[
                ('STAKEHOLDER', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='coverage2', serialize=False, to='tables.STAKEHOLDERS')),
                ('COVERAGE_SCORE', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('ISSUE', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='coverage1', to='tables.ISSUES')),
                ('STAKEHOLDER_VERSION', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coverage4', to='tables.STAKEHOLDERS', to_field='VERSION')),
            ],
            options={
                'unique_together': {('STAKEHOLDER', 'ISSUE')},
            },
        ),
        migrations.CreateModel(
            name='COURSES_TO_SCENARIO',
            fields=[
                ('COURSE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='reflections_taken1', serialize=False, to='tables.COURSES')),
                ('PERMISSION', models.IntegerField()),
                ('SCENARIO', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reflections_taken2', to='tables.SCENARIOS')),
            ],
            options={
                'unique_together': {('COURSE', 'SCENARIO')},
            },
        ),
    ]
