# Generated by Django 3.1.7 on 2021-03-18 16:45

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Conversations',
            fields=[
                ('CONVERSATION', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('question', models.CharField(max_length=100)),
                ('response', models.TextField(max_length=100)),
            ],
            options={
                'db_table': 'CONVERSATIONS',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course', models.AutoField(db_column='course_id', editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'COURSES',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='pages',
            fields=[
                ('PAGE', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('PAGE_TYPE', models.CharField(choices=[('I', 'INTRO'), ('G', 'GENERIC'), ('R', 'REFLECTION'), ('S', 'STAKEHOLDER'), ('A', 'ACTION')], max_length=2)),
                ('PAGE_TITLE', models.CharField(max_length=1000)),
                ('VERSION', models.IntegerField(default=1, editable=False)),
                ('BODY', models.TextField()),
                ('NEXT_PAGE', models.IntegerField(null=True)),
                ('X_COORDINATE', models.IntegerField()),
                ('Y_COORDINATE', models.IntegerField()),
            ],
            options={
                'db_table': 'pages',
            },
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('professor', models.AutoField(db_column='professor', editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(db_column='fname', max_length=50)),
                ('last_name', models.CharField(db_column='lname', max_length=50)),
            ],
            options={
                'db_table': 'PROFESSORS',
            },
        ),
        migrations.CreateModel(
            name='Scenario',
            fields=[
                ('SCENARIO', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('VERSION', models.IntegerField(default=1, editable=False)),
                ('name', models.CharField(max_length=50)),
                ('public', models.BooleanField(default=False)),
                ('NUM_CONVERSATION', models.IntegerField(default=0)),
                ('IS_FINISHED', models.BooleanField(default=False)),
                ('date_created', models.DateField(auto_now_add=True)),
            ],
            options={
                'db_table': 'SCENARIOS',
                'ordering': ['date_created', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('student', models.AutoField(db_column='student', editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(db_column='fname', max_length=50)),
                ('last_name', models.CharField(db_column='lname', max_length=50)),
            ],
            options={
                'db_table': 'STUDENTS',
            },
        ),
        migrations.CreateModel(
            name='Demographic',
            fields=[
                ('student', models.OneToOneField(db_column='student', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='demographics', serialize=False, to='api.student')),
                ('age', models.IntegerField(db_column='age', validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('grade', models.CharField(choices=[('0', 'Other'), ('1', 'Freshmen'), ('2', 'Sophomore'), ('3', 'Junior'), ('4', 'Senior')], db_column='grade', max_length=1)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('OT', 'Other')], db_column='gender', max_length=2)),
                ('race', models.CharField(db_column='race', max_length=30)),
                ('major', models.CharField(db_column='major', max_length=30)),
            ],
            options={
                'db_table': 'DEMOGRAPHICS',
            },
        ),
        migrations.CreateModel(
            name='Student_to_Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(db_column='course', on_delete=django.db.models.deletion.CASCADE, to='api.course')),
                ('student', models.ForeignKey(db_column='student', on_delete=django.db.models.deletion.CASCADE, to='api.student')),
            ],
            options={
                'db_table': 'STUDENT_TO_COURSE',
                'unique_together': {('student', 'course')},
            },
        ),
        migrations.CreateModel(
            name='Stakeholders',
            fields=[
                ('STAKEHOLDER', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('VERSION', models.IntegerField(default=1, editable=False)),
                ('NAME', models.CharField(default='default', max_length=1000)),
                ('DESCRIPTION', models.TextField(default='default')),
                ('JOB', models.TextField(default='default')),
                ('INTRODUCTION', models.TextField(default='default')),
                ('SCENARIO', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='api.scenario')),
            ],
            options={
                'db_table': 'STAKEHOLDERS',
            },
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.IntegerField(default=1, editable=False)),
                ('date_taken', models.DateField(auto_now_add=True)),
                ('choice', models.CharField(max_length=300)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.course')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.pages')),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.scenario')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.student')),
            ],
            options={
                'db_table': 'RESPONSES',
                'ordering': ['scenario', 'page', 'student'],
            },
        ),
        migrations.CreateModel(
            name='Professor_to_Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(db_column='course', on_delete=django.db.models.deletion.CASCADE, to='api.course')),
                ('professor', models.ForeignKey(db_column='professor', on_delete=django.db.models.deletion.CASCADE, to='api.professor')),
            ],
            options={
                'db_table': 'PROFESSOR_TO_COURSE',
                'unique_together': {('professor', 'course')},
            },
        ),
        migrations.AddField(
            model_name='pages',
            name='SCENARIO',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.scenario'),
        ),
        migrations.CreateModel(
            name='Issues',
            fields=[
                ('ISSUE', models.AutoField(default=None, editable=False, primary_key=True, serialize=False)),
                ('VERSION', models.IntegerField(default=1, editable=False)),
                ('name', models.CharField(max_length=100)),
                ('importance_score', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('scenario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.scenario')),
            ],
            options={
                'db_table': 'ISSUES',
            },
        ),
        migrations.AddField(
            model_name='course',
            name='professors',
            field=models.ManyToManyField(related_name='courses', through='api.Professor_to_Course', to='api.Professor'),
        ),
        migrations.AddField(
            model_name='course',
            name='students',
            field=models.ManyToManyField(related_name='courses', through='api.Student_to_Course', to='api.Student'),
        ),
        migrations.CreateModel(
            name='conversations_had',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('VERSION', models.IntegerField(default=1, editable=False)),
                ('DATE_TAKEN', models.DateField(auto_now_add=True)),
                ('SCORE', models.DecimalField(decimal_places=2, max_digits=5)),
                ('CONVERSATION', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.conversations')),
                ('COURSE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.course')),
                ('SCENARIO', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.scenario')),
                ('STAKEHOLDER', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.stakeholders')),
                ('STUDENT', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.student')),
            ],
            options={
                'db_table': 'conversations_had',
            },
        ),
        migrations.AddField(
            model_name='conversations',
            name='STAKEHOLDER',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.stakeholders'),
        ),
        migrations.CreateModel(
            name='action_page',
            fields=[
                ('CHOICE', models.TextField()),
                ('RESULT_PAGE', models.IntegerField(null=True)),
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('PAGE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.pages')),
            ],
            options={
                'db_table': 'action_page',
                'unique_together': {('PAGE', 'CHOICE')},
            },
        ),
        migrations.CreateModel(
            name='student_times',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('VERSION', models.IntegerField(default=1, editable=False)),
                ('DATE_TAKEN', models.DateField(auto_now_add=True)),
                ('START_TIME', models.DateField(null=True)),
                ('END_TIME', models.DateField(null=True)),
                ('COURSE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.course')),
                ('PAGE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.pages')),
                ('SCENARIO', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.scenario')),
                ('STUDENT', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.student')),
            ],
            options={
                'db_table': 'student_times',
                'unique_together': {('STUDENT', 'SCENARIO', 'VERSION', 'PAGE')},
            },
        ),
        migrations.CreateModel(
            name='stakeholder_page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PAGE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.pages')),
                ('STAKEHOLDER', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.stakeholders')),
            ],
            options={
                'db_table': 'stakeholder_page',
                'unique_together': {('PAGE', 'STAKEHOLDER')},
            },
        ),
        migrations.CreateModel(
            name='Scenarios_for',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('VERSION', models.IntegerField(default=1, editable=False)),
                ('COURSE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.course')),
                ('SCENARIO', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.scenario')),
            ],
            options={
                'db_table': 'SCENARIO_FOR',
                'unique_together': {('SCENARIO', 'COURSE')},
            },
        ),
        migrations.CreateModel(
            name='response_to_action_page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ACTION_PAGE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.action_page')),
                ('RESPONSE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.response')),
            ],
            options={
                'db_table': 'response_to_action_page',
                'unique_together': {('RESPONSE', 'ACTION_PAGE')},
            },
        ),
        migrations.CreateModel(
            name='reflections_taken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('REFLECTIONS', models.TextField(max_length=100)),
                ('VERSION', models.IntegerField(default=1, editable=False)),
                ('DATE_TAKEN', models.DateField(auto_now_add=True)),
                ('COURSE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.course')),
                ('SCENARIO', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.scenario')),
                ('STUDENT', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.student')),
            ],
            options={
                'db_table': 'reflections_taken',
                'unique_together': {('SCENARIO', 'VERSION', 'COURSE', 'STUDENT')},
            },
        ),
        migrations.CreateModel(
            name='reflection_questions',
            fields=[
                ('REFLECTION_QUESTION', models.TextField()),
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('PAGE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.pages')),
            ],
            options={
                'db_table': 'reflection_questions',
                'unique_together': {('PAGE', 'REFLECTION_QUESTION')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='pages',
            unique_together={('PAGE', 'SCENARIO', 'VERSION')},
        ),
        migrations.CreateModel(
            name='generic_page',
            fields=[
                ('BODY', models.TextField()),
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('PAGE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.pages')),
            ],
            options={
                'db_table': 'generic_page',
                'unique_together': {('PAGE', 'BODY')},
            },
        ),
        migrations.CreateModel(
            name='Coverage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('COVERAGE_SCORE', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('ISSUE', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='coverage1', to='api.issues')),
                ('STAKEHOLDER', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='coverage2', to='api.stakeholders')),
            ],
            options={
                'db_table': 'COVERAGE',
                'unique_together': {('STAKEHOLDER', 'ISSUE')},
            },
        ),
    ]
