{"version":3,"sources":["shared/RedLogo.png","components/EditorComponents/ConversationEditorComponents/StakeHoldersComponent/shemptylogo.png","shared/WhiteLogo.png","components/Copyright.js","pages/signup.js","pages/login.js","components/DeleteWarnings/DeleteEntireScenarioWarning.js","components/DashboardComponents/ShareButton.js","components/DashboardComponents/ScenarioCard.js","components/DashboardComponents/AddNewScenarioCard.js","Constants/Config.js","universalHTTPRequests/delete.js","universalHTTPRequests/post.js","universalHTTPRequests/get.js","components/LoadingSpinner.js","components/Banners/SuccessBanner.js","components/Banners/ErrorBanner.js","components/DashboardComponents/DropDown.js","components/DashboardComponents/DropdownMenu.js","components/DashboardComponents/DashboardNavbar.js","pages/dashboard.js","universalHTTPRequests/put.js","components/EditorComponents/LogisticsPageComponents/DropDown.js","components/EditorComponents/LogisticsPageComponents/Logistics.js","components/EditorComponents/GeneralPageComponents/Body.js","components/EditorComponents/GeneralPageComponents/Title.js","components/EditorComponents/GenericPageComponents/Generic.js","components/DeleteWarnings/GenericDeleteWarning.js","components/EditorComponents/ConfigureIssuesComponents/IssueEntryField.js","components/EditorComponents/ConfigureIssuesComponents/IssueEntryFieldList.js","components/EditorComponents/ConfigureIssuesComponents/ConfigureIssues.js","components/EditorComponents/ConversationEditorComponents/StakeHoldersComponent/IssueRow.js","components/EditorComponents/ConversationEditorComponents/StakeHoldersComponent/table.js","components/EditorComponents/ConversationEditorComponents/StakeHoldersComponent/StakeHolderQuestions/question.js","components/EditorComponents/ConversationEditorComponents/StakeHoldersComponent/StakeHolderQuestions/questions.js","components/EditorComponents/ConversationEditorComponents/StakeHoldersComponent/stakeHolder.js","components/EditorComponents/ConversationEditorComponents/StakeHoldersComponent/stakeHolders.js","components/EditorComponents/ConversationEditorComponents/ConversationEditor.js","components/EditorComponents/ReflectionPageComponents/QuestionComponent/question.js","components/EditorComponents/ReflectionPageComponents/QuestionComponent/questions.js","components/EditorComponents/ReflectionPageComponents/Reflection.js","components/EditorComponents/ActionPageComponents/Action.js","components/EditorComponents/GenericPageComponents/Introduction.js","components/EditorComponents/FlowDiagramComponents/HelperFunctions/node.js","components/EditorComponents/FlowDiagramComponents/HelperFunctions/addEdge.js","components/EditorComponents/FlowDiagramComponents/FlowDiagram.js","components/EditorComponents/FlowDiagramComponents/HelperFunctions/initializeElements.js","components/EditedSunEditor.js","components/EditorComponents/AddNewScenarioPageDialogBody.js","components/EditorComponents/AddNewSimulationScenarioPageDialog.js","components/ConfigurationSideBarComponents/NavSideBarNode.js","components/ConfigurationSideBarComponents/NavSideBarList.js","pages/editor.js","components/StudentResponsesComponents/ReflectionResponseComponent/QuestionResponseField.js","components/StudentResponsesComponents/ReflectionResponseComponent/ReflectionResponse.js","components/StudentResponsesComponents/ActionResponseComponent/ActionResponse.js","components/StudentResponsesComponents/SideBar/NavSideBarListNode.js","components/StudentResponsesComponents/SideBar/NavSideBarList.js","shared/mockScenarioData.js","components/StudentResponsesComponents/StudentResposeDialog.js","pages/data.js","components/HomepageComponents/HomepageNavBar.js","pages/homepage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Copyright","Typography","align","Date","getFullYear","useStyles","makeStyles","theme","container","marginTop","spacing","display","flexDirection","alignItems","logo","width","form","submit","backgroundColor","palette","primary","main","color","copyright","margin","opacity","Signup","classes","Container","component","maxWidth","className","src","RedLogo","alt","variant","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","Button","Link","to","type","Box","Login","Grid","direction","item","RouterLink","FormControlLabel","control","Checkbox","value","Transition","React","forwardRef","props","ref","Slide","DeleteEntireScenarioWarning","data","remove","open","setOpen","handleClose","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","onClick","root","padding","textAlign","closeButton","position","right","top","grey","shareInfo","borderBottom","paddingBottom","marginBottom","saveButton","float","textTransform","buttonText","UserRole","title","disableTypography","IconButton","aria-label","ShareDialog","useState","email","setEmail","dividers","Autocomplete","options","getOptionLabel","option","style","renderInput","params","onChange","event","target","scenarioContainer","minHeight","minWidth","light","borderStyle","borderColor","border","buttonContainer","button","withStyles","children","other","noWrap","MuiDialogContent","ScenarioCard","scenarioID","scenarioName","isFinished","dateCreated","courses","onDelete","openDeletePopup","setOpenDeletePopup","dataButton","pathname","xs","buttons","key","Card","CardContent","map","COURSE","NAME","addNewScenarioContainer","height","borderRadius","addNewScenarioButton","addIcon","fontSize","addNewScenarioText","AddNewScenarioCard","fixed","justify","baseURL","process","REACT_APP_ENDPOINT_URL","universalDelete","setResponse","endpoint","onError","onSuccess","requestBody","loading","error","axios","delete","then","resp","catch","err","universalPost","post","universalFetch","get","circularProgress","LoadingSpinner","CircularProgress","size","bottom","zIndex","success","dark","justifyContent","icon","paddingRight","SuccessBanner","successMessage","fade","Fade","timeout","appear","exit","in","ErrorBanner","errorMessage","checkedIcon","Tags","multiple","disableCloseOnSelect","values","update","noOptionsText","renderOption","selected","inputValue","Fragment","marginRight","checked","placeholder","SimpleMenu","anchorEl","setAnchorEl","aria-controls","aria-haspopup","currentTarget","shemptylogo","Menu","Boolean","MenuItem","DashboardNavbar","CssBaseline","AppBar","Toolbar","flexGrow","issue","errorContainer","iconError","iconRefreshLarge","iconRefreshSmall","MuiDialogActions","Dashboard","finishedScenarios","setFinishedScenarios","unfinishedScenarios","setUnfinishedScenarios","menuCourseItems","setMenuCourseItems","fetchScenariosResponse","setFetchScenariosResponse","setFetchCourseResponse","setDeleteReq","successBannerMessage","setSuccessBannerMessage","successBannerFade","setSuccessBannerFade","errorBannerMessage","setErrorBannerMessage","errorBannerFade","setErrorBannerFade","errorName","setErrorName","errorNameText","setErrorNameText","errorCourses","setErrorCourses","shouldFetch","setShouldFetch","setPost","IS_FINISHED","PUBLIC","NUM_CONVERSATIONS","PROFESSOR","COURSES","NewScenario","setNewScenario","useEffect","setTimeout","clearTimeout","handleOnChangeName","deleteScenario","deleteReq","filter","entry","SCENARIO","getData","response","DATE_CREATED","finished","getCourses","helperText","rows","selectedClasses","sel","element","push","marginLeft","Divider","info","labelPlacement","validInput","trim","length","universalPut","put","getOptionSelected","current","textfields","authorButtons","subdiv","bannerContainer","Logistics","scenario_ID","fetchCourseResponse","authors","initialAuthorsWithID","author","Math","floor","random","setAuthorsWithID","authorsWithID","shouldRender","setShouldRender","fetchLogisticsResponse","setFetchLogisticsResponse","setResponseSave","errorNumConvos","setErrorNumConvos","errorNumConvosText","setErrorNumConvosText","currentCourses","setCurrentCourses","setScenarioName","numConvos","setNumConvos","isPublic","setIsPublic","setIsFinished","handleOnChangeNumConvo","NUM_CONVERSATION","setEdit","VERSION","DATA_CREATED","i","j","makeNewCourses","handleOnChange","noValidate","isNaN","Body","body","setBody","setContents","setOptions","buttonList","content","Title","setTitle","handleChange","Generic","scenarioComponents","setScenarioComponents","setCurrentPageID","page_id","page_type","page_title","next_page_id","bodies","xCoord","yCoord","postValues","setPostValues","setDeleteValues","pageID","setPageID","bodyText","setBodyText","bodiesText","errorTitle","setErrorTitle","errorTitleText","setErrorTitleText","errorBody","setErrorBody","postReqBody","PAGE_TYPE","PAGE_TITLE","PAGE_BODY","NEXT_PAGE","BODIES","X_COORDINATE","Y_COORDINATE","s_id","first_time","deleteEndPoint","newScenarioComponents","find","x","PAGE","handlePost","GenericDeleteWarning","IssueEntryField","score","isNewIssue","setIssueEntryFieldList","issueEntryFieldList","setPut","issueID","setIssueID","toString","issueScore","setIssueScore","issueName","setIssueName","newIssue","setNewIssue","unsaved","setUnsaved","handleChangeScore","handleChangeName","errorScore","setErrorScore","errorScoreText","setErrorScoreText","p","m","multiline","Number","indexOf","ISSUE","onFailure","IMPORTANCE_SCORE","saveIssue","newData","deleteIssue","IssueEntryFieldList","setNewIssueID","newID","collision","checkNewID","entryCur","setEntryCur","e","preventDefault","newEntry","concat","ConfigureIssues","IssueRow","issue_number","issues","setIssues","TableRow","TableCell","scope","defaultValue","val","updatedIssues","COVERAGE_SCORE","updateIssueScore","table","BasicTable","stakeholder_id","passed_issues","isLoading","setLoading","getCurrentTimeInt","currentTime","setCurrentTime","d","substring","setTime","t","ret","checkTime","require","method","url","headers","TableContainer","Paper","Table","TableHead","TableBody","QuestionField","removeQuestion","question","QRs","setQRs","questionValue","setQuestionValue","responseValue","setResponseValue","updateQRs","shq","shr","updatedQRs","qr","CONVERSATION","QUESTION","RESPONSE","bgcolor","QuestionFields","qrs","questionID","leftQuestions","q","JSON","stringify","STAKEHOLDER","newQRs","input","StakeHolder","bio","mainConvo","removeStakeHolder","job","stakeHolders","setStakeHolders","openBio","setOpenBio","openMainConvo","setOpenMainConvo","openPointSelection","setOpenPointSelection","openQuestions","setOpenQuestions","stakeHolderName","setStakeHolderName","stakeHolderJob","setStakeHolderJob","stakeHolderBiography","setStakeHolderBiography","stakeHolderConversation","setStakeHolderConversation","qRData","setQRData","handleCloseBio","updateBasicText","handleCloseMainConvo","handleClosePointSelection","handleCloseQuestions","shname","shjob","shbio","shconvo","updatedStakeHolders","sh","JOB","DESCRIPTION","INTRODUCTION","htmlFor","accept","ISSUES","getIssues","editor","StakeHolderFields","scenario","didGetSHs","setDidGetSHs","stakeHolderID","leftStakeHolders","s","stakeHolder","ConversationEditor","listOfQuestions","setListOfQuestions","setReqBodyNew","listOfQuestions2","REFLECTION_QUESTION","reqBody","obj","questions","setQuestions","newQuestions","newQuestionsList","Reflection","version_ID","reflection_questions","a","questionsForReqBody","setQuestionsForReqBody","errorQuestions","setErrorQuestions","errorQuestionsMessage","setErrorQuestionsMessage","REFLECTION_QUESTIONS","qs","qsrb","trimmedQuestions","questionSet","Set","Action","choice1","choice2","option1","setOption1","option2","setOption2","errorOption1","setErrorOption1","errorOption1Text","setErrorOption1Text","errorOption2","setErrorOption2","errorOption2Text","setErrorOption2Text","CHOICES","CHOICE","RESULT_PAGE","onChangeOption1","onChangeOption2","Introduction","actionNode","onConnect","console","log","left","introNode","reflectionNode","genericNode","conversationNode","addEdge","elements","source","newEdge","arrowHeadType","strokeWidth","arrowWidth","FlowDiagram","fetchedElements","setFetchedElements","elementsPUT","setElementsPUT","setElements","errorText","setErrorText","positionElements","introductionElement","componentData","genericElements","reflectionElements","actionElements","stakeholderConversationElement","edges","isEdge","initialElements","y","initializeElements","reduce","acc","currentValue","forEach","currentElement","ACTION","addEdges","isRemoveButtonDisabled","setIsRemoveButtonDisabled","currentEdgeSelected","setCurrentEdgeSelected","nodeTypes","openReset","setOpenReset","openRefresh","setOpenRefresh","ConfirmationDialog","disableBackdropClick","disableEscapeKeyDown","refresh","reset","resetElements","array","isNode","onElementClick","onNodeDragStop","index","findIndex","ele","elementsCopy","updatedElements","nodeElement","SCENARIO_id","actionData","PAGE_id","currElement","some","disabled","removeElements","EditedSunEditor","setText","text","menuButton","addButton","selectMenu","magin","AddNewScenarioPageDialogBody","addPage","setOpenPopup","pageType","setPageType","pageName","setPageName","pageBody","setPageBody","Select","labelId","dialogWrapper","exitOutButton","AddNewSimulationScenarioPageDialog","openPopup","paper","pageButton","overflowWrap","deleteButton","deleteButtonContainer","NavSideBarNode","deleteByID","scenarioPages","isIntroPage","handleClickOpen","handleDisplayComponent","NavSideBarList","scenarioPage","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","easeOut","enteringScreen","exitButton","hide","drawer","flexShrink","drawerPaper","addPageButton","drawerHeader","mixins","toolbar","content1","contentShift","Editor","showComponent","setShowComponent","scenarioIDFromURL","useLocation","split","pop","location","getValues","setGetValues","scenarioComponent","setScenarioComponent","showEditor","setShowEditor","addNewPageIndex","setAddNewPageIndex","currentPageID","handleLogisticsGet","initialComponents","logistics_and_pages","is_finished","public_scenario","num_convos","professors","pages","PAGES","splice","handlePageGet","g_id","scenarioComponentsArray","c","currPageInfo","created","r1","r2","useTheme","handleDrawerClose","WhiteTextTypography","BlackTextTypography","d_id","handleDelete","Sidebar","Drawer","anchor","NavBar","clsx","edge","ReflectionResponse","studentReflections","questionResponsesWithID","questionResponses","ActionStudentResponse","choice","page","studentResponsePages","studentResponsePage","mockFinishedScenarioStudentResponse","getTime","actions","reflections","closeDialogButton","componentType","Data","selectedResponseData","openDrawer","setOpenDrawer","reflectionResponses","actionResponses","result","setStudentResponsePage","fullScreen","tableIcons","Add","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","RateReview","setSelectedResponseData","studentList","setStudentList","icons","exportButton","tooltip","rowData","columns","field","signupButton","paddingTop","loginButton","signupButtonText","loginButtonText","HomepageNavBar","WhiteLogo","studentAccessContainer","ethisimIntroContainer","textField","accessButton","ValidationTextField","borderWidth","borderLeftWidth","StudentAccess","EthisimIntro","Homepage","App","exact","path","render","window","hostname","match","createMuiTheme","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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,OACPwI,OAAQ,IACRgE,YACI,wCACJwI,WAAY,CACR,CAAC,OAAQ,WAAY,eACrB,CAAC,iBAAkB,cACnB,CACI,OACA,YACA,SACA,SACA,YACA,eAEJ,CAAC,YAAa,cAAe,aAC7B,IACA,CAAC,OAAQ,QACT,CAAC,gBACD,CAAC,UAAW,UACZ,CACI,QACA,iBACA,OACA,cAEJ,CACI,QACA,OACA,QACA,QACA,SAEJ,CAAC,aAAc,aAAc,YAC7B,CAAC,WACD,CACI,QACA,CACI,CAAC,OAAQ,QACT,CACI,2CACA,OACA,WACA,cACA,iBACA,cAEJ,CACI,OACA,YACA,SACA,UAEJ,CACI,iCACA,YACA,cACA,YACA,cACA,aAEJ,CAAC,gBACD,CAAC,UAAW,UACZ,CACI,uCACA,QACA,iBACA,OACA,cAEJ,CACI,SACA,qCACA,aACA,aACA,WACA,WAEJ,CACI,SACA,iCACA,QACA,OACA,QACA,QACA,WAIZ,CACI,OACA,CACI,CAAC,OAAQ,QACT,CACI,2CACA,OACA,WACA,cACA,iBACA,cAEJ,CACI,iCACA,OACA,YACA,SACA,SACA,YACA,cACA,YACA,cACA,YACA,gBAEJ,CACI,uCACA,UACA,SACA,QACA,iBACA,OACA,cAEJ,CACI,iCACA,QACA,OACA,QACA,QACA,SAEJ,CACI,SACA,qCACA,aACA,aACA,WACA,eAMpB7O,SArWI,SAAC8O,EAASuM,GAClCvB,EAAwBhL,SA0WpB,kBAAC1R,EAAA,EAAD,CACIG,QAAS8c,GACT7c,kBAAgB,0BAChB5C,UAAU,EACVqC,KAAMkc,GAEN,yBAAKtZ,MAAO,CAAEhG,MAAO,MACjB,kBAAC,GAAD,CACIwB,GAAG,0BACHkC,QAAS8c,IAFb,oBAMA,kBAAC,GAAD,KACI,kBAAC,KAAD,CACI1L,YAAaiK,EACbhK,WAAY,CACRvM,OAAQ,IACRgE,YACI,wCACJwI,WAAY,CACR,CAAC,OAAQ,WAAY,eACrB,CAAC,iBAAkB,cACnB,CACI,OACA,YACA,SACA,SACA,YACA,eAEJ,CAAC,YAAa,cAAe,aAC7B,IACA,CAAC,OAAQ,QACT,CAAC,gBAC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","file":"static/js/main.a52d7905.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/RedLogo.7b5edd0c.png\";","module.exports = __webpack_public_path__ + \"static/media/shemptylogo.577a3a75.png\";","module.exports = __webpack_public_path__ + \"static/media/WhiteLogo.9f51d9c8.png\";","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Copyright() {\r\n    return (\r\n        <Typography align=\"center\">\r\n            Copyright © Ethisim {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    Button,\r\n    TextField,\r\n    Box,\r\n    Typography,\r\n    Container,\r\n} from '@material-ui/core';\r\nimport Copyright from '../components/Copyright';\r\nimport RedLogo from '../shared/RedLogo.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    logo: {\r\n        width: '100px',\r\n    },\r\n    form: {\r\n        marginTop: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n    submit: {\r\n        marginTop: theme.spacing(2),\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: 'white',\r\n    },\r\n    copyright: {\r\n        margin: theme.spacing(2),\r\n        opacity: 0.5,\r\n    },\r\n}));\r\n\r\nexport default function Signup() {\r\n    const classes = useStyles();\r\n\r\n    //TODO add functionality to signup account button\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <div className={classes.container}>\r\n                <img src={RedLogo} alt=\"EthismLogo\" className={classes.logo} />\r\n                <Typography variant=\"h4\">Sign up</Typography>\r\n                <form className={classes.form}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"first_name\"\r\n                        label=\"First Name\"\r\n                        name=\"first_name\"\r\n                        autoComplete=\"first_name\"\r\n                        autoFocus\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"last_name\"\r\n                        label=\"Last Name\"\r\n                        name=\"last_name\"\r\n                        autoComplete=\"last_name\"\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email_address\"\r\n                        label=\"Email Address\"\r\n                        name=\"email_address\"\r\n                        autoComplete=\"email_address\"\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"username\"\r\n                        label=\"Username\"\r\n                        name=\"username\"\r\n                        autoComplete=\"username\"\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"password\"\r\n                        label=\"Password\"\r\n                        name=\"password\"\r\n                        autoComplete=\"password\"\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"confirm_password\"\r\n                        label=\"Confirm Password\"\r\n                        name=\"confirm_password\"\r\n                        autoComplete=\"confirm_password\"\r\n                    />\r\n                    <Button\r\n                        component={Link}\r\n                        to={'/login'}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign up\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n            <Box className={classes.copyright}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Button,\r\n    TextField,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    Box,\r\n    Typography,\r\n    Container,\r\n    Link,\r\n    Grid,\r\n} from '@material-ui/core';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport Copyright from '../components/Copyright';\r\nimport RedLogo from '../shared/RedLogo.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    logo: {\r\n        width: '100px',\r\n    },\r\n    form: {\r\n        marginTop: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n    submit: {\r\n        marginTop: theme.spacing(2),\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: 'white',\r\n    },\r\n    copyright: {\r\n        margin: theme.spacing(2),\r\n        opacity: 0.5,\r\n    },\r\n}));\r\n\r\nexport default function Login() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <div className={classes.container}>\r\n                <img src={RedLogo} alt=\"EthismLogo\" className={classes.logo} />\r\n                <Typography variant=\"h4\">Login</Typography>\r\n                <form className={classes.form}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                    <Grid container direction=\"column\">\r\n                        <Grid item>\r\n                            <Link component={RouterLink} to={'/signup'}>\r\n                                Need to create an account?\r\n                            </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        value=\"remember\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                label=\"Remember me\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        className={classes.submit}\r\n                        component={RouterLink}\r\n                        to={'/dashboard'}\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                    >\r\n                        Login\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n            <Box className={classes.copyright}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nDeleteEntireScenarioWarning.propTypes = {\r\n    remove: PropTypes.any.isRequired,\r\n    open: PropTypes.any.isRequired,\r\n    setOpen: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default function DeleteEntireScenarioWarning(props) {\r\n    DeleteEntireScenarioWarning.propTypes = props.data;\r\n    const data = props;\r\n    const { remove, open, setOpen } = data;\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">\r\n                {'Are you sure you want to delete this?'}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    This action will delete the entire scenario and all the work\r\n                    associated with this scenario. Once this action is\r\n                    performed, it cannot be undone!\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={remove} color=\"primary\">\r\n                    Yes\r\n                </Button>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    No\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport {\r\n    Typography,\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    TextField,\r\n    IconButton,\r\n} from '@material-ui/core';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport PropTypes from 'prop-types';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(1),\r\n        textAlign: 'center',\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n    shareInfo: {\r\n        borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\r\n        paddingBottom: '6px',\r\n        marginBottom: '6px',\r\n    },\r\n    saveButton: {\r\n        margin: theme.spacing(2),\r\n        float: 'right',\r\n        textTransform: 'unset',\r\n    },\r\n    buttonText: {\r\n        width: '100%',\r\n        textTransform: 'unset',\r\n    },\r\n}));\r\n\r\nDialogTitle.propTypes = {\r\n    onClose: PropTypes.any.isRequired,\r\n};\r\n\r\nconst UserRole = [\r\n    { title: 'Read Only' },\r\n    { title: 'Edit Only' },\r\n    { title: 'Admin' },\r\n];\r\n\r\nfunction DialogTitle(props) {\r\n    const classes = useStyles();\r\n    const { onClose } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root}>\r\n            <Typography variant=\"h6\">Share with Professor</Typography>\r\n            {onClose ? (\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    className={classes.closeButton}\r\n                    onClick={onClose}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n}\r\n\r\nexport default function ShareDialog(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [email, setEmail] = useState('');\r\n\r\n    const onChangeEmail = (event) => {\r\n        setEmail(event.target.value);\r\n    };\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleClickOpen}\r\n                className={classes.buttonText}\r\n            >\r\n                <ShareIcon />\r\n                <Typography variant=\"subtitle1\">Share</Typography>\r\n            </Button>\r\n            <Dialog\r\n                fullWidth={true}\r\n                maxWidth=\"sm\"\r\n                onClose={handleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={open}\r\n            >\r\n                <DialogTitle onClose={handleClose}></DialogTitle>\r\n                <DialogContent dividers>\r\n                    <Typography align=\"left\" variant=\"h6\">\r\n                        Select User Role\r\n                    </Typography>\r\n                    <Autocomplete\r\n                        id=\"User_Role\"\r\n                        options={UserRole}\r\n                        getOptionLabel={(option) => option.title}\r\n                        style={{ width: 300 }}\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                label=\"User Role Options\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        )}\r\n                    />\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"Enter Email\"\r\n                        label=\"Enter Email\"\r\n                        name=\"Enter Email\"\r\n                        value={email}\r\n                        onChange={onChangeEmail}\r\n                    />\r\n                    <Button\r\n                        className={classes.saveButton}\r\n                        autoFocus\r\n                        color=\"primary\"\r\n                        onClick={handleClose}\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport { Typography, Grid, Card, CardContent, Button } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n//import ShareIcon from '@material-ui/icons/Share';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport DeleteEntireScenarioWarning from '../DeleteWarnings/DeleteEntireScenarioWarning';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ClassIcon from '@material-ui/icons/Class';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport ShareButton from './ShareButton';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    scenarioContainer: {\r\n        minHeight: '100px',\r\n        minWidth: '200px',\r\n        backgroundColor: theme.palette.primary.light,\r\n        borderStyle: 'solid',\r\n        borderColor: theme.palette.primary.light,\r\n        border: 2,\r\n    },\r\n    buttonContainer: {\r\n        borderStyle: 'solid',\r\n        borderColor: theme.palette.primary.light,\r\n        border: 3,\r\n    },\r\n    button: {\r\n        borderStyle: 'solid',\r\n        borderColor: theme.palette.primary.light,\r\n        border: 3,\r\n    },\r\n    buttonText: {\r\n        width: '100%',\r\n        textTransform: 'unset',\r\n    },\r\n}));\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        margin: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\" noWrap={true}>\r\n                Classes for\r\n            </Typography>\r\n            <Typography variant=\"h6\" noWrap={true} color=\"primary\">\r\n                {children}\r\n            </Typography>\r\n            {onClose ? (\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    className={classes.closeButton}\r\n                    onClick={onClose}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiDialogContent);\r\n\r\nScenarioCard.propTypes = {\r\n    data: PropTypes.any,\r\n    scenarioID: PropTypes.number,\r\n    scenarioName: PropTypes.string,\r\n    isFinished: PropTypes.bool,\r\n    dateCreated: PropTypes.string,\r\n    courses: PropTypes.any,\r\n    onDelete: PropTypes.any,\r\n};\r\n\r\nexport default function ScenarioCard({\r\n    data,\r\n    scenarioID,\r\n    scenarioName,\r\n    isFinished,\r\n    dateCreated,\r\n    courses,\r\n    onDelete,\r\n}) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [openDeletePopup, setOpenDeletePopup] = React.useState(false);\r\n    const classes = useStyles();\r\n\r\n    const handleClickOpenDeletePopup = () => {\r\n        setOpenDeletePopup(true);\r\n    };\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    //If scenario is unfinished, we show the buttons \"Edit,\" \"Delete,\" \"View Classes,\" \"Share\"\r\n    //If scenario is finished, we show the button \"Edit,\" \"Delete,\" \"View Classes,\" \"Share,\" \"View Student Data\"\r\n\r\n    const dataButton = isFinished ? (\r\n        <Grid\r\n            component={Link}\r\n            to={{\r\n                pathname: '/data/' + scenarioID,\r\n                data: data,\r\n            }}\r\n            className={classes.button}\r\n            item\r\n            xs={12}\r\n        >\r\n            <Button\r\n                className={classes.buttonText}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n            >\r\n                <AssessmentIcon />\r\n                <Typography variant=\"subtitle1\" noWrap>\r\n                    Data\r\n                </Typography>\r\n            </Button>\r\n        </Grid>\r\n    ) : null;\r\n\r\n    const buttons = (\r\n        <Grid className={classes.buttonContainer} container>\r\n            <Grid className={classes.button} item xs={6}>\r\n                <Button\r\n                    component={Link}\r\n                    to={{\r\n                        pathname: '/editor/' + scenarioID,\r\n                        data: data,\r\n                    }}\r\n                    className={classes.buttonText}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                >\r\n                    <EditIcon />\r\n                    <Typography variant=\"subtitle1\">Edit</Typography>\r\n                </Button>\r\n            </Grid>\r\n            <Grid className={classes.button} item xs={6}>\r\n                <Button\r\n                    className={classes.buttonText}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleClickOpenDeletePopup}\r\n                >\r\n                    <DeleteForeverIcon />\r\n                    <Typography variant=\"subtitle1\" noWrap>\r\n                        Delete\r\n                    </Typography>\r\n                </Button>\r\n                <DeleteEntireScenarioWarning\r\n                    open={openDeletePopup}\r\n                    setOpen={setOpenDeletePopup}\r\n                    remove={function () {\r\n                        onDelete(scenarioID, isFinished);\r\n                    }}\r\n                />\r\n            </Grid>\r\n            <Grid className={classes.button} item xs={6}>\r\n                <Button\r\n                    className={classes.buttonText}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleClickOpen}\r\n                >\r\n                    <ClassIcon />\r\n                    <Typography variant=\"subtitle1\" noWrap>\r\n                        View Classes\r\n                    </Typography>\r\n                </Button>\r\n            </Grid>\r\n            <Grid className={classes.button} item xs={6}>\r\n                <ShareButton />\r\n            </Grid>\r\n\r\n            {dataButton}\r\n        </Grid>\r\n    );\r\n\r\n    return (\r\n        <Grid key={scenarioID} item xs>\r\n            <Card>\r\n                <CardContent className={classes.scenarioContainer}>\r\n                    <Typography variant=\"h6\" display=\"block\" noWrap>\r\n                        {scenarioName}\r\n                    </Typography>\r\n                    <Typography\r\n                        variant=\"subtitle1\"\r\n                        color=\"textSecondary\"\r\n                        display=\"block\"\r\n                        noWrap\r\n                    >\r\n                        Date created: {dateCreated}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n            <Grid className={classes.buttonContainer} container>\r\n                {buttons}\r\n            </Grid>\r\n            <div>\r\n                <Dialog\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"customized-dialog-title\"\r\n                    open={open}\r\n                    maxWidth=\"sm\"\r\n                    fullWidth={true}\r\n                >\r\n                    <div>\r\n                        <DialogTitle\r\n                            id=\"customized-dialog-title\"\r\n                            onClose={handleClose}\r\n                        >\r\n                            {scenarioName}\r\n                        </DialogTitle>\r\n                        <DialogContent dividers>\r\n                            {courses.map((data) => (\r\n                                <form\r\n                                    style={{ marginBottom: 20 }}\r\n                                    key={data.COURSE}\r\n                                >\r\n                                    <Button\r\n                                        className={classes.buttonText}\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        <Typography\r\n                                            display=\"block\"\r\n                                            variant=\"subtitle1\"\r\n                                            noWrap={true}\r\n                                        >\r\n                                            {data.NAME}\r\n                                        </Typography>\r\n                                    </Button>\r\n                                </form>\r\n                            ))}\r\n                        </DialogContent>\r\n                    </div>\r\n                </Dialog>\r\n            </div>\r\n        </Grid>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Typography, Grid, Button } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    addNewScenarioContainer: {\r\n        height: '100%',\r\n        borderStyle: 'dashed',\r\n        borderColor: theme.palette.primary.main,\r\n        border: 3,\r\n        borderRadius: 3,\r\n        padding: 0,\r\n    },\r\n    addNewScenarioButton: {\r\n        width: '100%',\r\n        height: '100%',\r\n        textTransform: 'unset',\r\n    },\r\n    addIcon: {\r\n        color: theme.palette.primary.main,\r\n        fontSize: 70,\r\n    },\r\n    addNewScenarioText: {\r\n        color: theme.palette.primary.main,\r\n    },\r\n}));\r\n\r\nAddNewScenarioCard.propTypes = {\r\n    onClick: PropTypes.any,\r\n};\r\n\r\nexport default function AddNewScenarioCard({ onClick }) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid key=\"createNewScenarioButton\" item xs>\r\n            <Container className={classes.addNewScenarioContainer} fixed={true}>\r\n                <Button\r\n                    className={classes.addNewScenarioButton}\r\n                    onClick={onClick}\r\n                >\r\n                    <Grid\r\n                        container\r\n                        direction=\"column\"\r\n                        justify=\"center\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                        <Grid item>\r\n                            <AddIcon className={classes.addIcon} />\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography\r\n                                className={classes.addNewScenarioText}\r\n                                variant=\"h6\"\r\n                                noWrap\r\n                            >\r\n                                Create New Scenario\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Button>\r\n            </Container>\r\n        </Grid>\r\n    );\r\n}\r\n","const baseURL = process.env.REACT_APP_ENDPOINT_URL || 'http://localhost:8000';\r\n\r\nexport { baseURL };\r\n","import axios from 'axios';\r\nimport { baseURL } from './../Constants/Config';\r\n// Universal delete request using axios\r\nexport default function universalDelete(\r\n    setResponse,\r\n    endpoint,\r\n    onError,\r\n    onSuccess,\r\n    requestBody\r\n) {\r\n    setResponse({\r\n        data: null,\r\n        loading: true,\r\n        error: null,\r\n    });\r\n    axios\r\n        .delete(baseURL + endpoint, requestBody)\r\n        .then((resp) => {\r\n            setResponse({\r\n                data: resp.data,\r\n                loading: false,\r\n                error: null,\r\n            });\r\n            onSuccess && onSuccess(resp);\r\n        })\r\n        .catch((err) => {\r\n            setResponse({\r\n                data: null,\r\n                loading: false,\r\n                error: err,\r\n            });\r\n            onError && onError(err);\r\n        });\r\n}\r\n","import axios from 'axios';\r\n\r\nimport { baseURL } from './../Constants/Config';\r\n\r\n// Universal fetch request using axios\r\nexport default function universalPost(\r\n    setResponse,\r\n    endpoint,\r\n    onError,\r\n    onSuccess,\r\n    requestBody\r\n) {\r\n    setResponse({\r\n        data: null,\r\n        loading: true,\r\n        error: null,\r\n    });\r\n    axios\r\n        .post(baseURL + endpoint, requestBody)\r\n        .then((resp) => {\r\n            setResponse({\r\n                data: resp.data,\r\n                loading: false,\r\n                error: null,\r\n            });\r\n            onSuccess && onSuccess(resp);\r\n        })\r\n        .catch((err) => {\r\n            setResponse({\r\n                data: null,\r\n                loading: false,\r\n                error: err,\r\n            });\r\n            onError && onError(err);\r\n        });\r\n}\r\n","import axios from 'axios';\r\n\r\nimport { baseURL } from './../Constants/Config';\r\n\r\n// Universal fetch request using axios\r\nexport default function universalFetch(\r\n    setResponse,\r\n    endpoint,\r\n    onError,\r\n    onSuccess\r\n) {\r\n    setResponse({\r\n        data: null,\r\n        loading: true,\r\n        error: null,\r\n    });\r\n    axios\r\n        .get(baseURL + endpoint)\r\n        .then((resp) => {\r\n            setResponse({\r\n                data: resp.data,\r\n                loading: false,\r\n                error: null,\r\n            });\r\n            onSuccess && onSuccess(resp);\r\n        })\r\n        .catch((err) => {\r\n            setResponse({\r\n                data: null,\r\n                loading: false,\r\n                error: err,\r\n            });\r\n            onError && onError(err);\r\n        });\r\n}\r\n","import React from 'react';\r\nimport { Typography, CircularProgress } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    circularProgress: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport default function LoadingSpinner() {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.container}>\r\n            <Typography align=\"center\" variant=\"h3\">\r\n                Loading ...\r\n            </Typography>\r\n            <CircularProgress className={classes.circularProgress} size={100} />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Typography, Fade } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'fixed',\r\n        padding: theme.spacing(1),\r\n        bottom: '0px',\r\n        width: '50%',\r\n        border: '5px solid',\r\n        zIndex: '100',\r\n        borderColor: theme.palette.success.dark,\r\n        backgroundColor: theme.palette.success.main,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: 'white',\r\n    },\r\n    icon: {\r\n        paddingRight: theme.spacing(1),\r\n        fontSize: '40px',\r\n        color: 'white',\r\n    },\r\n}));\r\n\r\nSuccessBanner.propTypes = {\r\n    fade: PropTypes.any,\r\n    successMessage: PropTypes.string,\r\n};\r\n\r\n/* To use fade correctly:\r\n\r\n    1. Set state of fade variable\r\n    const [successBannerFade, setSuccessBannerFade] = useState(false);\r\n    \r\n    2. Use useEffect to switch \"fade\" from true to false, fading out the success banner.\r\n\r\n        useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setSuccessBannerFade(false);\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [successBannerFade]);\r\n\r\n    When \"Success\" (successful GET/POST/PUT/DELETE request):\r\n    2. setSuccessBannerFade(true);\r\n       setSuccessBannerMessage('Success!');\r\n\r\n    useEffect will detect the change, and in setSuccessBannerFade(false), after 1 second, the banner will fade away.\r\n*/\r\n\r\nexport default function SuccessBanner({ successMessage, fade }) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Fade timeout={{ appear: 0, exit: 3000 }} in={fade}>\r\n            <div className={classes.container}>\r\n                <ThumbUpIcon className={classes.icon} />\r\n                <Typography align=\"center\" variant=\"h6\">\r\n                    {successMessage}\r\n                </Typography>\r\n            </div>\r\n        </Fade>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Typography, Fade } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        position: 'fixed',\r\n        padding: theme.spacing(1),\r\n        bottom: '0px',\r\n        width: '50%',\r\n        border: '5px solid',\r\n        zIndex: '100',\r\n        borderColor: theme.palette.error.dark,\r\n        backgroundColor: theme.palette.error.main,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: 'white',\r\n    },\r\n    icon: {\r\n        paddingRight: theme.spacing(2),\r\n        fontSize: '40px',\r\n        color: 'white',\r\n    },\r\n}));\r\n\r\nErrorBanner.propTypes = {\r\n    fade: PropTypes.any,\r\n    errorMessage: PropTypes.string,\r\n};\r\n\r\n/* To use fade correctly:\r\n\r\n    1. Set state of fade variable\r\n    const [successBannerFade, setErrorBannerFade] = useState(false);\r\n    \r\n    2. Use useEffect to switch \"fade\" from true to false, fading out the success banner.\r\n\r\n        useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setErrorBannerFade(false);\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [successBannerFade]);\r\n\r\n    When \"Error\" (successful GET/POST/PUT/DELETE request):\r\n    2. setErrorBannerFade(true);\r\n       setErrorBannerMessage('Error!');\r\n\r\n    useEffect will detect the change, and in setErrorBannerFade(false), after 1 second, the banner will fade away.\r\n*/\r\n\r\nexport default function ErrorBanner({ errorMessage, fade }) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Fade timeout={{ appear: 0, exit: 3000 }} in={fade}>\r\n            <div className={classes.container}>\r\n                <ErrorIcon className={classes.icon} />\r\n                <Typography align=\"center\" variant=\"h6\">\r\n                    {errorMessage}\r\n                </Typography>\r\n            </div>\r\n        </Fade>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" color=\"primary\" />;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 500,\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n}));\r\n\r\nTags.propTypes = {\r\n    update: PropTypes.func,\r\n    courses: PropTypes.array,\r\n};\r\n\r\nexport default function Tags(props) {\r\n    const classes = useStyles();\r\n\r\n    const onTagsChange = (event, values) => {\r\n        props.update(values);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Autocomplete\r\n                multiple\r\n                id=\"checkboxes-tags-demo\"\r\n                options={props.courses}\r\n                disableCloseOnSelect\r\n                getOptionLabel={(option) => option.NAME}\r\n                onChange={onTagsChange}\r\n                noOptionsText={'Loading courses...'}\r\n                renderOption={(option, { selected, inputValue }) => {\r\n                    return (\r\n                        <React.Fragment>\r\n                            <Checkbox\r\n                                icon={icon}\r\n                                checkedIcon={checkedIcon}\r\n                                style={{ marginRight: 8 }}\r\n                                checked={selected}\r\n                            />\r\n                            {option.NAME}\r\n                        </React.Fragment>\r\n                    );\r\n                }}\r\n                style={{ width: 500 }}\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        variant=\"outlined\"\r\n                        label=\"Courses\"\r\n                        placeholder=\"Courses\"\r\n                        fullWidth\r\n                    />\r\n                )}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Link } from 'react-router-dom';\r\nimport shemptylogo from '../EditorComponents/ConversationEditorComponents/StakeHoldersComponent/shemptylogo.png';\r\n\r\nexport default function SimpleMenu() {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <IconButton\r\n                aria-controls=\"simple-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClick}\r\n            >\r\n                <img src={shemptylogo} height={50} width={50} alt=\"\"></img>\r\n            </IconButton>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <MenuItem\r\n                    onClick={handleClose}\r\n                    component={Link}\r\n                    to={{\r\n                        pathname: '/home',\r\n                    }}\r\n                >\r\n                    Logout\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose}>Settings</MenuItem>\r\n                <MenuItem onClick={handleClose}>Help</MenuItem>\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport SimpleMenu from './DropdownMenu';\r\n\r\nexport default function DashboardNavbar() {\r\n    return (\r\n        <div>\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\">\r\n                <Toolbar>\r\n                    <Box display=\"flex\" flexGrow={1}>\r\n                        <Typography variant=\"h4\" noWrap>\r\n                            Ethisim Dashboard\r\n                        </Typography>\r\n                    </Box>\r\n                    <SimpleMenu />\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Box, Typography, Grid, Divider } from '@material-ui/core';\r\nimport ScenarioCard from '../components/DashboardComponents/ScenarioCard';\r\nimport AddNewScenarioCard from '../components/DashboardComponents/AddNewScenarioCard';\r\nimport Copyright from '../components/Copyright';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\nimport deleteReq from '../universalHTTPRequests/delete';\r\nimport post from '../universalHTTPRequests/post';\r\nimport get from '../universalHTTPRequests/get';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport SuccessBanner from '../components/Banners/SuccessBanner';\r\nimport ErrorBanner from '../components/Banners/ErrorBanner';\r\nimport Tags from '../components/DashboardComponents/DropDown';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport DashboardNavBar from '../components/DashboardComponents/DashboardNavbar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        marginTop: theme.spacing(11),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    copyright: {\r\n        margin: theme.spacing(2),\r\n    },\r\n    issue: {\r\n        marginTop: theme.spacing(10),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    errorContainer: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    iconError: {\r\n        paddingRight: theme.spacing(2),\r\n        fontSize: '75px',\r\n    },\r\n    iconRefreshLarge: {\r\n        fontSize: '75px',\r\n    },\r\n    iconRefreshSmall: {\r\n        fontSize: '30px',\r\n    },\r\n    border: {\r\n        borderStyle: 'none none solid none',\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n}));\r\n\r\n//TODO when Shibboleth gets implemented\r\nconst endpointGet = '/dashboard?professor_id=1';\r\nconst endpointGetCourses = '/api/courses/';\r\nconst endpointPost = '/dashboard';\r\nconst endpointDelete = '/api/scenarios/';\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        margin: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    className={classes.closeButton}\r\n                    onClick={onClose}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(1),\r\n    },\r\n}))(MuiDialogActions);\r\n\r\n//Passing props with React Router in Material UI: https://stackoverflow.com/questions/30115324/pass-props-in-link-react-router\r\nexport default function Dashboard() {\r\n    const classes = useStyles();\r\n\r\n    // post on success, concatenating a scenario card to array\r\n    //delete on success, concatenating a scenario card to array\r\n\r\n    //when posting a new scenario setting fake id, now deleting that scenario, have to replace id with id in database\r\n\r\n    //post returns new id of scenario, when you concatenating to array set the id to that\r\n    const [finishedScenarios, setFinishedScenarios] = useState(null);\r\n    const [unfinishedScenarios, setUnfinishedScenarios] = useState(null);\r\n    const [menuCourseItems, setMenuCourseItems] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [fetchScenariosResponse, setFetchScenariosResponse] = useState({\r\n        data: null,\r\n        loading: false,\r\n        error: null,\r\n    });\r\n    // eslint-disable-next-line\r\n    const [fetchCourseResponse, setFetchCourseResponse] = useState({\r\n        data: null,\r\n        loading: false,\r\n        error: null,\r\n    });\r\n    // eslint-disable-next-line\r\n    const [deleteReqValue, setDeleteReq] = useState({\r\n        data: null,\r\n        loading: false,\r\n        error: null,\r\n    });\r\n    const [successBannerMessage, setSuccessBannerMessage] = useState('');\r\n    const [successBannerFade, setSuccessBannerFade] = useState(false);\r\n    const [errorBannerMessage, setErrorBannerMessage] = useState('');\r\n    const [errorBannerFade, setErrorBannerFade] = useState(false);\r\n    const [errorName, setErrorName] = useState(false);\r\n    const [errorNameText, setErrorNameText] = useState('');\r\n    const [errorCourses, setErrorCourses] = useState(false);\r\n    const [shouldFetch, setShouldFetch] = useState(0);\r\n    // eslint-disable-next-line\r\n    const [postValue, setPost] = useState({\r\n        data: null,\r\n        loading: false,\r\n        error: null,\r\n    });\r\n    const [NewScenario, setNewScenario] = useState({\r\n        NAME: ' ',\r\n        IS_FINISHED: false,\r\n        PUBLIC: false,\r\n        NUM_CONVERSATIONS: 0,\r\n        PROFESSOR: 1,\r\n        COURSES: [],\r\n    });\r\n\r\n    //For Banners\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setSuccessBannerFade(false);\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [successBannerFade]);\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setErrorBannerFade(false);\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [errorBannerFade]);\r\n\r\n    //For create new scenario dialogue box\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n        NewScenario.PUBLIC = false;\r\n        setNewScenario(NewScenario);\r\n        getCourses();\r\n    };\r\n\r\n    const handleCloseSave = () => {\r\n        function onSuccessPost(resp) {\r\n            setShouldFetch(shouldFetch + 1);\r\n            setSuccessBannerMessage('Successfully created Scenario!');\r\n            setSuccessBannerFade(true);\r\n        }\r\n        function onFailurePost() {\r\n            setErrorBannerMessage(\r\n                'Failed to create Scenario! Please try again.'\r\n            );\r\n            setErrorBannerFade(true);\r\n            //Post failed, loading animation should end\r\n            setFetchScenariosResponse({\r\n                data: null,\r\n                loading: false,\r\n                error: null,\r\n            });\r\n        }\r\n\r\n        let validInput = true;\r\n\r\n        if (!NewScenario.NAME || !NewScenario.NAME.trim()) {\r\n            setErrorName(true);\r\n            setErrorNameText('Scenario name cannot be empty');\r\n            validInput = false;\r\n        } else if (NewScenario.NAME.length >= 1000) {\r\n            setErrorName(true);\r\n            setErrorNameText(\r\n                'Scenario name must have less than 1000 characters'\r\n            );\r\n            validInput = false;\r\n        } else {\r\n            setErrorName(false);\r\n        }\r\n\r\n        if (NewScenario.COURSES.length === 0) {\r\n            setErrorCourses(true);\r\n            validInput = false;\r\n        } else {\r\n            setErrorCourses(false);\r\n        }\r\n\r\n        if (validInput) {\r\n            setNewScenario({\r\n                NAME: ' ',\r\n                IS_FINISHED: false,\r\n                PUBLIC: false,\r\n                NUM_CONVERSATIONS: 0,\r\n                PROFESSOR: 1,\r\n                COURSES: [],\r\n            });\r\n            //Smooth loading animation, loading animation will not reset during POST and GET Request\r\n            setFetchScenariosResponse({\r\n                data: null,\r\n                loading: true,\r\n                error: null,\r\n            });\r\n            post(\r\n                setPost,\r\n                endpointPost,\r\n                onFailurePost,\r\n                onSuccessPost,\r\n                NewScenario\r\n            );\r\n            setOpen(false);\r\n        }\r\n    };\r\n\r\n    //X button on dialog for creating new scenario\r\n    const handleClose = () => {\r\n        setNewScenario({\r\n            NAME: ' ',\r\n            IS_FINISHED: false,\r\n            PUBLIC: false,\r\n            NUM_CONVERSATIONS: 0,\r\n            PROFESSOR: 1,\r\n            COURSES: [],\r\n        });\r\n        setErrorName(false);\r\n        setErrorCourses(false);\r\n        setErrorNameText('');\r\n        setOpen(false);\r\n    };\r\n\r\n    //For new Scenario Post\r\n    const handleOnChangeName = (event) => {\r\n        NewScenario.NAME = event.target.value;\r\n        setNewScenario(NewScenario);\r\n    };\r\n\r\n    const handleOnChangePublic = (info) => {\r\n        NewScenario.PUBLIC = !NewScenario.PUBLIC;\r\n        setNewScenario(NewScenario);\r\n    };\r\n\r\n    //Update Classes\r\n    const updateSelectedClasses = (selectedClasses) => {\r\n        //set new scenario courses to selected classes\r\n        let sel = [];\r\n        selectedClasses.map((element) => sel.push({ COURSE: element.COURSE }));\r\n        NewScenario.COURSES = sel;\r\n        setNewScenario(NewScenario);\r\n    };\r\n\r\n    //Delete Scenario\r\n    const deleteScenario = (scenarioID, isFinished) => {\r\n        function successfullyDeleted(resp) {\r\n            if (isFinished) {\r\n                setSuccessBannerFade(true);\r\n                setSuccessBannerMessage('Successfully Deleted Scenario!');\r\n                let newData = [];\r\n                finishedScenarios &&\r\n                    finishedScenarios.filter(\r\n                        (entry) => entry.SCENARIO !== scenarioID\r\n                    );\r\n                setFinishedScenarios(newData);\r\n                setShouldFetch(shouldFetch + 1);\r\n            } else {\r\n                setSuccessBannerFade(true);\r\n                setSuccessBannerMessage('Successfully deleted scenario!');\r\n\r\n                let newData = [];\r\n                unfinishedScenarios &&\r\n                    unfinishedScenarios.filter(\r\n                        (entry) => entry.SCENARIO !== scenarioID\r\n                    );\r\n                setUnfinishedScenarios(newData);\r\n                setShouldFetch(shouldFetch + 1);\r\n            }\r\n        }\r\n\r\n        function onFailure() {\r\n            setErrorBannerMessage(\r\n                'Failed to delete scenario! Please try again.'\r\n            );\r\n            setErrorBannerFade(true);\r\n            //Delete req failed, loading animation should end\r\n            setFetchScenariosResponse({\r\n                data: null,\r\n                loading: false,\r\n                error: null,\r\n            });\r\n        }\r\n\r\n        //Smooth loading animation, loading animation will not reset during DELETE and GET Request\r\n        setFetchScenariosResponse({\r\n            data: null,\r\n            loading: true,\r\n            error: null,\r\n        });\r\n\r\n        deleteReq(\r\n            setDeleteReq,\r\n            endpointDelete + scenarioID + '/',\r\n            onFailure,\r\n            successfullyDeleted,\r\n            null\r\n        );\r\n    };\r\n\r\n    //Get Scenario\r\n    let getData = () => {\r\n        function onSuccess(response) {\r\n            let finishedScenarios = response.data.filter(\r\n                (data) => data.IS_FINISHED\r\n            );\r\n            let unfinishedScenarios = response.data.filter(\r\n                (data) => !data.IS_FINISHED\r\n            );\r\n            finishedScenarios = finishedScenarios.map((data) => (\r\n                <ScenarioCard\r\n                    key={data.SCENARIO}\r\n                    data={data}\r\n                    scenarioID={data.SCENARIO}\r\n                    scenarioName={data.NAME}\r\n                    dateCreated={data.DATE_CREATED}\r\n                    isFinished={data.IS_FINISHED}\r\n                    courses={data.COURSES}\r\n                    onDelete={deleteScenario}\r\n                />\r\n            ));\r\n            unfinishedScenarios = unfinishedScenarios.map((data) => (\r\n                <ScenarioCard\r\n                    key={data.SCENARIO}\r\n                    data={data}\r\n                    scenarioID={data.SCENARIO}\r\n                    scenarioName={data.NAME}\r\n                    dateCreated={data.DATE_CREATED}\r\n                    finished={data.IS_FINISHED}\r\n                    courses={data.COURSES}\r\n                    onDelete={deleteScenario}\r\n                />\r\n            ));\r\n            setFinishedScenarios(finishedScenarios);\r\n            setUnfinishedScenarios(unfinishedScenarios);\r\n        }\r\n\r\n        function onFailure() {\r\n            setErrorBannerMessage('Failed to get scenarios! Please try again.');\r\n            setErrorBannerFade(true);\r\n        }\r\n        get(setFetchScenariosResponse, endpointGet, onFailure, onSuccess);\r\n    };\r\n\r\n    //Get Courses\r\n    let getCourses = () => {\r\n        function onSuccessCourse(response) {\r\n            setMenuCourseItems(response.data);\r\n        }\r\n\r\n        function onFailureCourse() {\r\n            setErrorBannerMessage('Failed to get courses! Please try again.');\r\n            setErrorBannerFade(true);\r\n        }\r\n        get(\r\n            setFetchCourseResponse,\r\n            endpointGetCourses,\r\n            onFailureCourse,\r\n            onSuccessCourse\r\n        );\r\n    };\r\n\r\n    //Reload Page\r\n    useEffect(getData, [shouldFetch]);\r\n\r\n    if (fetchScenariosResponse.loading) {\r\n        return (\r\n            <div>\r\n                <DashboardNavBar />\r\n                <div style={{ marginTop: '100px' }}>\r\n                    <LoadingSpinner />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (fetchScenariosResponse.error) {\r\n        return (\r\n            <div>\r\n                <DashboardNavBar />\r\n                <div className={classes.issue}>\r\n                    <div className={classes.errorContainer}>\r\n                        <ErrorBanner\r\n                            fade={errorBannerFade}\r\n                            errorMessage={errorBannerMessage}\r\n                        />\r\n                        <ErrorIcon className={classes.iconError} />\r\n                        <Typography align=\"center\" variant=\"h3\">\r\n                            Error in fetching Scenarios.\r\n                        </Typography>\r\n                    </div>\r\n                    <div className={classes.errorContainer}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={getData}\r\n                        >\r\n                            <RefreshIcon className={classes.iconRefreshLarge} />\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <DashboardNavBar />\r\n            <Container\r\n                className={classes.container}\r\n                component=\"main\"\r\n                maxWidth=\"lg\"\r\n            >\r\n                <SuccessBanner\r\n                    fade={successBannerFade}\r\n                    successMessage={successBannerMessage}\r\n                />\r\n                <ErrorBanner\r\n                    fade={errorBannerFade}\r\n                    errorMessage={errorBannerMessage}\r\n                />\r\n                <div className={classes.border}>\r\n                    <Typography variant=\"h3\">Unfinished Scenarios</Typography>\r\n                </div>\r\n                <Grid\r\n                    container\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"stretch\"\r\n                >\r\n                    {unfinishedScenarios}\r\n                    <AddNewScenarioCard onClick={handleClickOpen} />\r\n                </Grid>\r\n                <div className={classes.border}>\r\n                    <Typography variant=\"h3\">Finished Scenarios</Typography>\r\n                </div>\r\n                <Grid\r\n                    container\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"stretch\"\r\n                >\r\n                    {finishedScenarios}\r\n                </Grid>\r\n                <Box className={classes.copyright}>\r\n                    <Copyright />\r\n                </Box>\r\n            </Container>\r\n\r\n            <Dialog\r\n                onClose={handleClose}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={open}\r\n                maxWidth={false}\r\n            >\r\n                <div style={{ width: 600 }}>\r\n                    <DialogTitle\r\n                        id=\"customized-dialog-title\"\r\n                        onClose={handleClose}\r\n                    >\r\n                        Create New Scenario\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <form style={{ marginBottom: 20 }}>\r\n                            {errorName ? (\r\n                                <TextField\r\n                                    error\r\n                                    label=\"Scenario Name\"\r\n                                    helperText={errorNameText}\r\n                                    style={{ width: 500 }}\r\n                                    rows={1}\r\n                                    variant=\"outlined\"\r\n                                    onChange={handleOnChangeName}\r\n                                />\r\n                            ) : (\r\n                                <TextField\r\n                                    label=\"Scenario Name\"\r\n                                    style={{ width: 500 }}\r\n                                    rows={1}\r\n                                    variant=\"outlined\"\r\n                                    onChange={handleOnChangeName}\r\n                                />\r\n                            )}\r\n                        </form>\r\n\r\n                        <form style={{ marginBottom: 10 }}>\r\n                            <Tags\r\n                                courses={menuCourseItems}\r\n                                update={updateSelectedClasses}\r\n                            />\r\n                            {errorCourses ? (\r\n                                <Typography\r\n                                    style={{ marginLeft: 15 }}\r\n                                    variant=\"caption\"\r\n                                    display=\"block\"\r\n                                    color=\"error\"\r\n                                >\r\n                                    At least one course must be selected\r\n                                </Typography>\r\n                            ) : null}\r\n                        </form>\r\n\r\n                        <Divider style={{ margin: '20px 0' }} />\r\n\r\n                        <form style={{ marginLeft: -13 }}>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        onChange={handleOnChangePublic}\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                label=\"Public\"\r\n                                labelPlacement=\"start\"\r\n                            />\r\n                        </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button\r\n                            autoFocus\r\n                            onClick={handleCloseSave}\r\n                            color=\"primary\"\r\n                        >\r\n                            Save changes\r\n                        </Button>\r\n                    </DialogActions>\r\n                </div>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import axios from 'axios';\r\nimport { baseURL } from './../Constants/Config';\r\n// Universal put request using axios\r\nexport default function universalPut(\r\n    setResponse,\r\n    endpoint,\r\n    onError,\r\n    onSuccess,\r\n    requestBody\r\n) {\r\n    setResponse({\r\n        data: null,\r\n        loading: true,\r\n        error: null,\r\n    });\r\n    axios\r\n        .put(baseURL + endpoint, requestBody)\r\n        .then((resp) => {\r\n            setResponse({\r\n                data: resp.data,\r\n                loading: false,\r\n                error: null,\r\n            });\r\n            onSuccess && onSuccess(resp);\r\n        })\r\n        .catch((err) => {\r\n            setResponse({\r\n                data: null,\r\n                loading: false,\r\n                error: err,\r\n            });\r\n            onError && onError(err);\r\n        });\r\n}\r\n","import React from 'react';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" color=\"primary\" />;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 500,\r\n        '& > * + *': {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    },\r\n}));\r\n\r\nTags.propTypes = {\r\n    update: PropTypes.func,\r\n    courses: PropTypes.array,\r\n    current: PropTypes.array,\r\n};\r\n\r\nexport default function Tags(props) {\r\n    const classes = useStyles();\r\n\r\n    const onTagsChange = (event, values) => {\r\n        props.update(values);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Autocomplete\r\n                multiple\r\n                id=\"checkboxes-tags-demo\"\r\n                options={props.courses}\r\n                disableCloseOnSelect\r\n                getOptionLabel={(option) => option.NAME}\r\n                getOptionSelected={(option, value) => {\r\n                    return option.COURSE === value.COURSE;\r\n                }}\r\n                onChange={onTagsChange}\r\n                value={props.current}\r\n                renderOption={(option, { selected, inputValue }) => {\r\n                    return (\r\n                        <React.Fragment>\r\n                            <Checkbox\r\n                                icon={icon}\r\n                                checkedIcon={checkedIcon}\r\n                                style={{ marginRight: 8 }}\r\n                                checked={selected}\r\n                            />\r\n                            {option.NAME}\r\n                        </React.Fragment>\r\n                    );\r\n                }}\r\n                style={{ width: 500 }}\r\n                renderInput={(params) => (\r\n                    <TextField\r\n                        {...params}\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Courses\"\r\n                        fullWidth\r\n                    />\r\n                )}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n//import Author from './Author';\r\nimport {\r\n    Button,\r\n    TextField,\r\n    Typography,\r\n    Container,\r\n    Divider,\r\n} from '@material-ui/core';\r\nimport put from '../../../universalHTTPRequests/put';\r\nimport get from '../../../universalHTTPRequests/get';\r\nimport LoadingSpinner from '../../LoadingSpinner';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport SuccessBanner from '../../Banners/SuccessBanner';\r\nimport ErrorBanner from '../../Banners/ErrorBanner';\r\nimport Tags from './DropDown';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    textfields: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '100%',\r\n        },\r\n    },\r\n    buttons: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n            width: '100%',\r\n            textTransform: 'unset',\r\n        },\r\n    },\r\n    authorButtons: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        textTransform: 'unset',\r\n    },\r\n    subdiv: {\r\n        marginTop: theme.spacing(1),\r\n        width: '750px',\r\n        '@media (max-width: 1100px)': {\r\n            width: '100%',\r\n        },\r\n    },\r\n    bannerContainer: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    errorContainer: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    container: {\r\n        padding: theme.spacing(1),\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    iconError: {\r\n        paddingRight: theme.spacing(2),\r\n        fontSize: '75px',\r\n    },\r\n    iconRefreshLarge: {\r\n        fontSize: '75px',\r\n    },\r\n    iconRefreshSmall: {\r\n        fontSize: '30px',\r\n    },\r\n}));\r\n\r\nLogistics.propTypes = {\r\n    scenario_ID: PropTypes.any,\r\n};\r\n\r\nexport default function Logistics({ scenario_ID }) {\r\n    //Need scenario id\r\n    const endpointGetLogistics = '/logistics?scenario_id=';\r\n    const endpointGetCourses = '/api/courses/';\r\n    const endPointPut = '/logistics';\r\n\r\n    const classes = useStyles();\r\n    //temporary until backend implements id's\r\n    const [fetchCourseResponse, setFetchCourseResponse] = useState({\r\n        data: null,\r\n        loading: false,\r\n        error: null,\r\n    });\r\n\r\n    //TODO temporary ID\r\n    // eslint-disable-next-line\r\n    const [id, setId] = useState(scenario_ID);\r\n\r\n    //Authors mock implementation\r\n    const [authors, setAuthors] = useState([]);\r\n\r\n    //Set fake ID for list item\r\n    let initialAuthorsWithID = authors.map(function (author) {\r\n        return {\r\n            author: author,\r\n            id: Math.floor(Math.random() * 10000),\r\n        };\r\n    });\r\n\r\n    const [authorsWithID, setAuthorsWithID] = useState(initialAuthorsWithID);\r\n\r\n    let resetAuthorsWithID = (authorsWithID) => {\r\n        let initialAuthorsWithID = authors.map(function (author) {\r\n            return {\r\n                author: author,\r\n                id: Math.floor(Math.random() * 10000),\r\n            };\r\n        });\r\n        setAuthorsWithID(initialAuthorsWithID);\r\n    };\r\n\r\n    useEffect(resetAuthorsWithID, [authors]);\r\n\r\n    // eslint-disable-next-line\r\n    const removeAuthor = (authorID) => {\r\n        const leftAuthors = authorsWithID.filter(\r\n            (author) => author.id !== authorID\r\n        );\r\n        setAuthorsWithID(leftAuthors);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n    const addAuthor = (e) => {\r\n        let newAuthors = authorsWithID.map((data) => data.author);\r\n        newAuthors = [...newAuthors, ''];\r\n        setAuthors(newAuthors);\r\n        const newAuthorsWithID = [\r\n            ...authorsWithID,\r\n            {\r\n                id: Math.floor(Math.random() * 10000),\r\n                author: '',\r\n            },\r\n        ];\r\n        setAuthorsWithID(newAuthorsWithID);\r\n    };\r\n\r\n    // eslint-disable-next-line\r\n    const [shouldFetch, setShouldFetch] = useState(0);\r\n    const [shouldRender, setShouldRender] = useState(false);\r\n    const [fetchLogisticsResponse, setFetchLogisticsResponse] = useState({\r\n        data: null,\r\n        loading: true,\r\n        error: null,\r\n    });\r\n    const [menuCourseItems, setMenuCourseItems] = useState(null);\r\n    // eslint-disable-next-line\r\n    const [responseSave, setResponseSave] = useState({\r\n        data: null,\r\n        loading: false,\r\n        error: null,\r\n    });\r\n    const [successBannerMessage, setSuccessBannerMessage] = useState('');\r\n    const [successBannerFade, setSuccessBannerFade] = useState(false);\r\n    const [errorBannerMessage, setErrorBannerMessage] = useState('');\r\n    const [errorBannerFade, setErrorBannerFade] = useState(false);\r\n    const [errorName, setErrorName] = useState(false);\r\n    const [errorNameText, setErrorNameText] = useState('');\r\n    const [errorNumConvos, setErrorNumConvos] = useState(false);\r\n    const [errorNumConvosText, setErrorNumConvosText] = useState('');\r\n    const [errorCourses, setErrorCourses] = useState(false);\r\n    const [currentCourses, setCurrentCourses] = useState([]);\r\n    const [scenarioName, setScenarioName] = useState('');\r\n    const [numConvos, setNumConvos] = useState(0);\r\n    const [isPublic, setIsPublic] = useState(false);\r\n    const [isFinished, setIsFinished] = useState(false);\r\n\r\n    //For Banners\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setSuccessBannerFade(false);\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [successBannerFade]);\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setErrorBannerFade(false);\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [errorBannerFade]);\r\n\r\n    const handleOnChangePublic = (event) => {\r\n        setIsPublic(event.target.checked);\r\n        setEdit({ ...NewScenario, PUBLIC: event.target.checked });\r\n    };\r\n\r\n    const handleOnChangeFinish = (event) => {\r\n        setIsFinished(event.target.checked);\r\n        setEdit({ ...NewScenario, IS_FINISHED: event.target.checked });\r\n    };\r\n\r\n    const handleOnChangeNumConvo = (event) => {\r\n        NewScenario.NUM_CONVERSATION = event.target.value;\r\n        setNumConvos(event.target.value);\r\n        setEdit(NewScenario);\r\n    };\r\n\r\n    const makeNewCourses = (response) => {\r\n        let sel = [];\r\n\r\n        for (let i = 0; i < response.length; i++) {\r\n            for (let j = 0; j < NewScenario.COURSES.length; j++) {\r\n                if (response[i].NAME === NewScenario.COURSES[j].NAME) {\r\n                    sel.push(response[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        NewScenario.COURSES = sel;\r\n        setCurrentCourses(sel);\r\n        setEdit(NewScenario);\r\n    };\r\n\r\n    const [NewScenario, setEdit] = useState({\r\n        SCENARIO: 0,\r\n        VERSION: 0,\r\n        NAME: '',\r\n        PUBLIC: false,\r\n        NUM_CONVERSATION: 0,\r\n        PROFESSOR: 0,\r\n        IS_FINISHED: false,\r\n        DATE_CREATED: ' ',\r\n        COURSES: [],\r\n    });\r\n\r\n    let getData = () => {\r\n        function onSuccess(response) {\r\n            NewScenario.SCENARIO = response.data.SCENARIO;\r\n            NewScenario.VERSION = response.data.VERSION;\r\n            NewScenario.NAME = response.data.NAME;\r\n            NewScenario.PUBLIC = response.data.PUBLIC;\r\n            NewScenario.NUM_CONVERSATION = response.data.NUM_CONVERSATION;\r\n            NewScenario.PROFESSOR = response.data.PROFESSOR;\r\n            NewScenario.IS_FINISHED = response.data.IS_FINISHED;\r\n            NewScenario.DATE_CREATED = response.data.DATA_CREATED;\r\n            NewScenario.COURSES = response.data.COURSES;\r\n            setScenarioName(response.data.NAME);\r\n            setIsFinished(response.data.IS_FINISHED);\r\n            setIsPublic(response.data.PUBLIC);\r\n            setNumConvos(response.data.NUM_CONVERSATION);\r\n            setEdit(NewScenario);\r\n            getCourses();\r\n        }\r\n\r\n        //code for implementing authors\r\n        /*\r\n     Authors\r\n                </form>\r\n\r\n                {authorsWithID.map((data) => (\r\n                    <Author\r\n                        key={data.id}\r\n                        id={data.id}\r\n                        removeAuthor={removeAuthor}\r\n                        author={data.author}\r\n                        listOfAuthors={authorsWithID}\r\n                        setListOfAuthors={setAuthorsWithID}\r\n                    />\r\n                ))}\r\n                <Button variant=\"contained\" color=\"primary\" onClick={addAuthor}>\r\n                    Add Author\r\n                </Button>\r\n                \r\n        */\r\n\r\n        function onFailure() {\r\n            //GET request failed, loading animation should end\r\n            setFetchCourseResponse({\r\n                data: null,\r\n                loading: false,\r\n                error: null,\r\n            });\r\n        }\r\n\r\n        //Smooth loading animation, loading animation will not reset during both GET requests (GET logistics and GET courses)\r\n        setFetchCourseResponse({\r\n            data: null,\r\n            loading: true,\r\n            error: null,\r\n        });\r\n        get(\r\n            setFetchLogisticsResponse,\r\n            endpointGetLogistics + id,\r\n            onFailure,\r\n            onSuccess\r\n        );\r\n    };\r\n\r\n    let getCourses = () => {\r\n        function onSuccessCourse(response) {\r\n            setMenuCourseItems(response.data);\r\n            makeNewCourses(response.data);\r\n            setShouldRender(true);\r\n        }\r\n\r\n        function onFailureCourse() {\r\n            setErrorBannerMessage('Failed to save! Please try again.');\r\n            setErrorBannerFade(true);\r\n        }\r\n        get(\r\n            setFetchCourseResponse,\r\n            endpointGetCourses,\r\n            onFailureCourse,\r\n            onSuccessCourse\r\n        );\r\n    };\r\n\r\n    useEffect(getData, [shouldFetch]);\r\n\r\n    const handleSave = () => {\r\n        function onSuccessLogistic(response) {\r\n            setSuccessBannerMessage('Successfully Saved!');\r\n            setSuccessBannerFade(true);\r\n        }\r\n\r\n        function onFailureLogistic() {\r\n            setErrorBannerMessage('Failed to save! Please try again.');\r\n            setErrorBannerFade(true);\r\n        }\r\n\r\n        let validInput = true;\r\n\r\n        if (!NewScenario.NAME || !NewScenario.NAME.trim()) {\r\n            setErrorName(true);\r\n            setErrorNameText('Scenario name cannot be empty');\r\n            validInput = false;\r\n        } else if (NewScenario.NAME.length >= 1000) {\r\n            setErrorName(true);\r\n            setErrorNameText(\r\n                'Scenario name must have less than 1000 characters'\r\n            );\r\n            validInput = false;\r\n        } else {\r\n            setErrorName(false);\r\n        }\r\n\r\n        if (\r\n            isNaN(NewScenario.NUM_CONVERSATION) ||\r\n            NewScenario.NUM_CONVERSATION === ''\r\n        ) {\r\n            setErrorNumConvos(true);\r\n            setErrorNumConvosText(\r\n                'Max Number of Conversations Must Be A Number'\r\n            );\r\n            validInput = false;\r\n        } else {\r\n            setErrorNumConvos(false);\r\n        }\r\n\r\n        if (NewScenario.COURSES.length === 0) {\r\n            setErrorCourses(true);\r\n            validInput = false;\r\n        } else {\r\n            setErrorCourses(false);\r\n        }\r\n\r\n        if (validInput) {\r\n            put(\r\n                setResponseSave,\r\n                endPointPut,\r\n                onFailureLogistic,\r\n                onSuccessLogistic,\r\n                NewScenario\r\n            );\r\n        } else {\r\n            setErrorBannerFade(true);\r\n            setErrorBannerMessage(\r\n                'There are currently errors within your page. Please fix all errors in order to save.'\r\n            );\r\n        }\r\n    };\r\n\r\n    const handleOnChange = (event) => {\r\n        NewScenario.NAME = event.target.value;\r\n        setScenarioName(event.target.value);\r\n        setEdit(NewScenario);\r\n    };\r\n\r\n    const updateSelectedClasses = (selectedClasses) => {\r\n        //set new scenario courses to selected classes\r\n        let sel = [];\r\n        selectedClasses.map((element) =>\r\n            sel.push({ COURSE: element.COURSE, NAME: element.NAME })\r\n        );\r\n        NewScenario.COURSES = sel;\r\n        setCurrentCourses(sel);\r\n        setEdit(NewScenario);\r\n    };\r\n\r\n    if (fetchLogisticsResponse.error) {\r\n        return (\r\n            <div className={classes.errorContainer}>\r\n                <ErrorBanner\r\n                    fade={errorBannerFade}\r\n                    errorMessage={errorBannerMessage}\r\n                />\r\n                <div className={classes.container}>\r\n                    <ErrorIcon className={classes.iconError} />\r\n                    <Typography align=\"center\" variant=\"h3\">\r\n                        Error in fetching scenario logistics.\r\n                    </Typography>\r\n                </div>\r\n                <div className={classes.container}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={getData}\r\n                    >\r\n                        <RefreshIcon className={classes.iconRefreshLarge} />\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (fetchCourseResponse.error) {\r\n        return (\r\n            <div className={classes.errorContainer}>\r\n                <ErrorBanner\r\n                    fade={errorBannerFade}\r\n                    errorMessage={errorBannerMessage}\r\n                />\r\n                <div className={classes.container}>\r\n                    <ErrorIcon className={classes.iconError} />\r\n                    <Typography align=\"center\" variant=\"h3\">\r\n                        Error in fetching scenario courses.\r\n                    </Typography>\r\n                </div>\r\n                <div className={classes.container}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={getData}\r\n                    >\r\n                        <RefreshIcon className={classes.iconRefreshLarge} />\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //Loading for both GET requests\r\n    if (fetchLogisticsResponse.loading || fetchCourseResponse.loading) {\r\n        return <LoadingSpinner />;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.bannerContainer}>\r\n                <SuccessBanner\r\n                    fade={successBannerFade}\r\n                    successMessage={successBannerMessage}\r\n                />\r\n                <ErrorBanner\r\n                    fade={errorBannerFade}\r\n                    errorMessage={errorBannerMessage}\r\n                />\r\n            </div>\r\n            <Container component=\"main\">\r\n                <Typography align=\"center\" variant=\"h2\">\r\n                    Logistics\r\n                </Typography>\r\n                <form\r\n                    className={classes.textfields}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                >\r\n                    Simulation Title\r\n                    {errorName ? (\r\n                        <TextField\r\n                            error\r\n                            helperText={errorNameText}\r\n                            value={scenarioName}\r\n                            rows={1}\r\n                            onChange={handleOnChange}\r\n                        />\r\n                    ) : (\r\n                        <TextField\r\n                            value={scenarioName}\r\n                            rows={1}\r\n                            onChange={handleOnChange}\r\n                        />\r\n                    )}\r\n                    Courses\r\n                    {shouldRender ? (\r\n                        <Tags\r\n                            courses={menuCourseItems}\r\n                            current={currentCourses}\r\n                            update={updateSelectedClasses}\r\n                        />\r\n                    ) : null}\r\n                    {errorCourses ? (\r\n                        <Typography\r\n                            style={{ marginLeft: 15 }}\r\n                            variant=\"caption\"\r\n                            display=\"block\"\r\n                            color=\"error\"\r\n                        >\r\n                            At least one course must be selected\r\n                        </Typography>\r\n                    ) : null}\r\n                    Max Number Of Selected Conversations\r\n                    {errorNumConvos ? (\r\n                        <TextField\r\n                            error\r\n                            helperText={errorNumConvosText}\r\n                            value={numConvos}\r\n                            rows={1}\r\n                            onChange={handleOnChangeNumConvo}\r\n                        />\r\n                    ) : (\r\n                        <TextField\r\n                            value={numConvos}\r\n                            rows={1}\r\n                            onChange={handleOnChangeNumConvo}\r\n                        />\r\n                    )}\r\n                    <Divider style={{ margin: '20px 0' }} />\r\n                </form>\r\n\r\n                <form style={{ marginLeft: -15, marginTop: 10 }}>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={isPublic}\r\n                                onChange={handleOnChangePublic}\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Public\"\r\n                        labelPlacement=\"start\"\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={isFinished}\r\n                                onChange={handleOnChangeFinish}\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Is Finished\"\r\n                        labelPlacement=\"start\"\r\n                    />\r\n                </form>\r\n                <div className={classes.subdiv}>\r\n                    <form\r\n                        className={classes.buttons}\r\n                        noValidate\r\n                        autoComplete=\"off\"\r\n                    ></form>\r\n                </div>\r\n\r\n                <div className={classes.subdiv}>\r\n                    <form\r\n                        className={classes.buttons}\r\n                        noValidate\r\n                        autoComplete=\"off\"\r\n                    >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={handleSave}\r\n                        >\r\n                            Save Scenario Info\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SunEditor from 'suneditor-react';\r\nimport 'suneditor/dist/css/suneditor.min.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nBody.propTypes = {\r\n    body: PropTypes.string.isRequired,\r\n    setBody: PropTypes.any.isRequired,\r\n    error: PropTypes.bool,\r\n    errorMessage: PropTypes.string,\r\n};\r\n\r\nexport default function Body(props) {\r\n    const { body, setBody, error, errorMessage } = props;\r\n\r\n    let handleChange = (content) => {\r\n        setBody(content);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h4\">Body</Typography>\r\n            <SunEditor\r\n                setContents={body}\r\n                setOptions={{\r\n                    width: '100%',\r\n                    height: 400,\r\n                    placeholder: 'Enter body of component...',\r\n                    buttonList: [\r\n                        ['font', 'fontSize', 'formatBlock'],\r\n                        ['paragraphStyle', 'blockquote'],\r\n                        [\r\n                            'bold',\r\n                            'underline',\r\n                            'italic',\r\n                            'strike',\r\n                            'subscript',\r\n                            'superscript',\r\n                        ],\r\n                        ['fontColor', 'hiliteColor', 'textStyle'],\r\n                        '/', // Line break\r\n                        ['undo', 'redo'],\r\n                        ['removeFormat'],\r\n                        ['outdent', 'indent'],\r\n                        ['align', 'horizontalRule', 'list', 'lineHeight'],\r\n                        ['table', 'link', 'image', 'video', 'audio'],\r\n                        ['fullScreen', 'showBlocks', 'codeView'],\r\n                        ['preview'],\r\n                        // (min-width: 1000px)\r\n                        [\r\n                            '%1000',\r\n                            [\r\n                                ['undo', 'redo'],\r\n                                [\r\n                                    ':p-More Paragraph-default.more_paragraph',\r\n                                    'font',\r\n                                    'fontSize',\r\n                                    'formatBlock',\r\n                                    'paragraphStyle',\r\n                                    'blockquote',\r\n                                ],\r\n                                ['bold', 'underline', 'italic', 'strike'],\r\n                                [\r\n                                    ':t-More Text-default.more_text',\r\n                                    'subscript',\r\n                                    'superscript',\r\n                                    'fontColor',\r\n                                    'hiliteColor',\r\n                                    'textStyle',\r\n                                ],\r\n                                ['removeFormat'],\r\n                                ['outdent', 'indent'],\r\n                                [\r\n                                    ':e-More Line-default.more_horizontal',\r\n                                    'align',\r\n                                    'horizontalRule',\r\n                                    'list',\r\n                                    'lineHeight',\r\n                                ],\r\n                                [\r\n                                    '-right',\r\n                                    ':i-More Misc-default.more_vertical',\r\n                                    'fullScreen',\r\n                                    'showBlocks',\r\n                                    'codeView',\r\n                                    'preview',\r\n                                ],\r\n                                [\r\n                                    '-right',\r\n                                    ':r-More Rich-default.more_plus',\r\n                                    'table',\r\n                                    'link',\r\n                                    'image',\r\n                                    'video',\r\n                                    'audio',\r\n                                ],\r\n                            ],\r\n                        ],\r\n                        // (min-width: 875px)\r\n                        [\r\n                            '%875',\r\n                            [\r\n                                ['undo', 'redo'],\r\n                                [\r\n                                    ':p-More Paragraph-default.more_paragraph',\r\n                                    'font',\r\n                                    'fontSize',\r\n                                    'formatBlock',\r\n                                    'paragraphStyle',\r\n                                    'blockquote',\r\n                                ],\r\n                                [\r\n                                    ':t-More Text-default.more_text',\r\n                                    'bold',\r\n                                    'underline',\r\n                                    'italic',\r\n                                    'strike',\r\n                                    'subscript',\r\n                                    'superscript',\r\n                                    'fontColor',\r\n                                    'hiliteColor',\r\n                                    'textStyle',\r\n                                    'removeFormat',\r\n                                ],\r\n                                [\r\n                                    ':e-More Line-default.more_horizontal',\r\n                                    'outdent',\r\n                                    'indent',\r\n                                    'align',\r\n                                    'horizontalRule',\r\n                                    'list',\r\n                                    'lineHeight',\r\n                                ],\r\n                                [\r\n                                    ':r-More Rich-default.more_plus',\r\n                                    'table',\r\n                                    'link',\r\n                                    'image',\r\n                                    'video',\r\n                                    'audio',\r\n                                ],\r\n                                [\r\n                                    '-right',\r\n                                    ':i-More Misc-default.more_vertical',\r\n                                    'fullScreen',\r\n                                    'showBlocks',\r\n                                    'codeView',\r\n                                    'preview',\r\n                                ],\r\n                            ],\r\n                        ],\r\n                    ],\r\n                }}\r\n                onChange={handleChange}\r\n            />\r\n            {error ? (\r\n                <Typography\r\n                    style={{ marginLeft: 15 }}\r\n                    variant=\"caption\"\r\n                    display=\"block\"\r\n                    color=\"error\"\r\n                >\r\n                    {errorMessage}\r\n                </Typography>\r\n            ) : null}\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, TextField } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nTitle.propTypes = {\r\n    title: PropTypes.string,\r\n};\r\n\r\nexport default function Title(props) {\r\n    const classes = useStyles();\r\n    Title.propTypes = props.data;\r\n    const title = props.title;\r\n    const setTitle = props.setTitle;\r\n    const error = props.error;\r\n    const errorMessage = props.errorMessage;\r\n\r\n    let handleChange = (content) => {\r\n        setTitle(content.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography variant=\"h4\">Scenario Page Name</Typography>\r\n            {error ? (\r\n                <TextField\r\n                    error\r\n                    helperText={errorMessage}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"title\"\r\n                    label=\"Title of component\"\r\n                    value={title}\r\n                    onChange={handleChange}\r\n                    name=\"title\"\r\n                />\r\n            ) : (\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"title\"\r\n                    label=\"Title of component\"\r\n                    value={title}\r\n                    onChange={handleChange}\r\n                    name=\"title\"\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Body from '../GeneralPageComponents/Body';\r\nimport Title from '../GeneralPageComponents/Title';\r\nimport { Typography, Container, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport universalPost from '../../../universalHTTPRequests/post.js';\r\nimport universalDelete from '../../../universalHTTPRequests/delete.js';\r\nimport SuccessBanner from '../../Banners/SuccessBanner';\r\nimport ErrorBanner from '../../Banners/ErrorBanner';\r\nimport LoadingSpinner from '../../LoadingSpinner';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    saveButton: {\r\n        margin: theme.spacing(2),\r\n        float: 'right',\r\n        textTransform: 'unset',\r\n    },\r\n    bannerContainer: {\r\n        marginTop: theme.spacing(1),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n}));\r\n\r\nGeneric.propTypes = {\r\n    scenarioComponents: PropTypes.any,\r\n    setScenarioComponents: PropTypes.any,\r\n    setCurrentPageID: PropTypes.any,\r\n    page_id: PropTypes.any,\r\n    page_type: PropTypes.any,\r\n    page_title: PropTypes.any,\r\n    scenario_ID: PropTypes.any,\r\n    version_ID: PropTypes.any,\r\n    next_page_id: PropTypes.any,\r\n    body: PropTypes.any,\r\n    bodies: PropTypes.any,\r\n    xCoord: PropTypes.any,\r\n    yCoord: PropTypes.any,\r\n};\r\n\r\nexport default function Generic(props) {\r\n    const {\r\n        scenarioComponents,\r\n        setScenarioComponents,\r\n        setCurrentPageID,\r\n        page_id,\r\n        page_type,\r\n        page_title,\r\n        scenario_ID,\r\n        next_page_id,\r\n        body,\r\n        bodies,\r\n        xCoord,\r\n        yCoord,\r\n    } = props;\r\n\r\n    // eslint-disable-next-line\r\n    const [postValues, setPostValues] = useState({\r\n        data: null,\r\n        loading: false,\r\n        error: null,\r\n    });\r\n    // eslint-disable-next-line\r\n    const [deleteValues, setDeleteValues] = useState({\r\n        data: null,\r\n        loading: false,\r\n        error: null,\r\n    });\r\n\r\n    const classes = useStyles();\r\n    const [pageID, setPageID] = useState(page_id);\r\n    const [title, setTitle] = useState(page_title);\r\n    const [bodyText, setBodyText] = useState(body);\r\n    // eslint-disable-next-line\r\n    const [bodiesText, setBodiesText] = useState(bodies);\r\n    const [errorTitle, setErrorTitle] = useState(false);\r\n    const [errorTitleText, setErrorTitleText] = useState(false);\r\n    const [errorBody, setErrorBody] = useState(false);\r\n\r\n    var postReqBody = {\r\n        PAGE_TYPE: page_type,\r\n        PAGE_TITLE: title,\r\n        PAGE_BODY: bodyText,\r\n        SCENARIO: scenario_ID,\r\n        NEXT_PAGE: next_page_id,\r\n        BODIES: bodiesText,\r\n        X_COORDINATE: xCoord,\r\n        Y_COORDINATE: yCoord,\r\n    };\r\n\r\n    function handlePost(setPostValues, postReqBody, s_id, first_time) {\r\n        const endpoint = '/page?page_id=' + pageID;\r\n\r\n        function onSuccess(resp) {\r\n            const deleteEndPoint = '/page?page_id=' + pageID;\r\n            let newScenarioComponents = [...scenarioComponents];\r\n            let component = newScenarioComponents.find((x) => x.id === pageID);\r\n            component.id = resp.data.PAGE;\r\n            component.title = title;\r\n            setPageID(resp.data.PAGE);\r\n            setCurrentPageID(resp.data.PAGE);\r\n            setScenarioComponents(newScenarioComponents);\r\n            setSuccessBannerFade(true);\r\n            setSuccessBannerMessage('Successfully saved page!');\r\n            universalDelete(setDeleteValues, deleteEndPoint, null, null, {\r\n                PAGE: pageID,\r\n            });\r\n        }\r\n\r\n        function onFailure() {\r\n            setErrorBannerFade(true);\r\n            setErrorBannerMessage('Failed to save page! Please try again.');\r\n        }\r\n\r\n        let validInput = true;\r\n\r\n        if (!title || !title.trim()) {\r\n            setErrorTitle(true);\r\n            setErrorTitleText('Page title cannot be empty');\r\n            validInput = false;\r\n        } else if (title.trim().length >= 1000) {\r\n            setErrorTitle(true);\r\n            setErrorTitleText('Page title must have less than 1000 characters');\r\n            validInput = false;\r\n        } else {\r\n            setErrorTitle(false);\r\n        }\r\n\r\n        if (!bodyText || !bodyText.trim()) {\r\n            setErrorBody(true);\r\n            validInput = false;\r\n        } else {\r\n            setErrorBody(false);\r\n        }\r\n\r\n        if (validInput) {\r\n            universalPost(\r\n                setPostValues,\r\n                endpoint,\r\n                onFailure,\r\n                onSuccess,\r\n                postReqBody\r\n            );\r\n        } else {\r\n            setErrorBannerFade(true);\r\n            setErrorBannerMessage(\r\n                'There are currently errors within your page. Please fix all errors in order to save.'\r\n            );\r\n        }\r\n    }\r\n\r\n    const savePage = () => {\r\n        handlePost(setPostValues, postReqBody, scenario_ID, false);\r\n    };\r\n\r\n    const [successBannerMessage, setSuccessBannerMessage] = useState('');\r\n    const [successBannerFade, setSuccessBannerFade] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setSuccessBannerFade(false);\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [successBannerFade]);\r\n\r\n    const [errorBannerMessage, setErrorBannerMessage] = useState('');\r\n    const [errorBannerFade, setErrorBannerFade] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setErrorBannerFade(false);\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [errorBannerFade]);\r\n\r\n    if (postValues.loading) {\r\n        return <LoadingSpinner />;\r\n    }\r\n\r\n    //TODO information list\r\n    return (\r\n        <Container component=\"main\">\r\n            <div className={classes.bannerContainer}>\r\n                <SuccessBanner\r\n                    successMessage={successBannerMessage}\r\n                    fade={successBannerFade}\r\n                />\r\n                <ErrorBanner\r\n                    errorMessage={errorBannerMessage}\r\n                    fade={errorBannerFade}\r\n                />\r\n            </div>\r\n            <Typography align=\"center\" variant=\"h2\">\r\n                Generic Component\r\n            </Typography>\r\n            <Title\r\n                title={title}\r\n                setTitle={setTitle}\r\n                error={errorTitle}\r\n                errorMessage={errorTitleText}\r\n            />\r\n            <Body\r\n                body={bodyText}\r\n                setBody={setBodyText}\r\n                error={errorBody}\r\n                errorMessage={'Page body cannot be empty.'}\r\n            />\r\n            <Button\r\n                className={classes.saveButton}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={savePage}\r\n            >\r\n                Save\r\n            </Button>\r\n        </Container>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nGenericDeleteWarning.propTypes = {\r\n    remove: PropTypes.func.isRequired,\r\n    open: PropTypes.any.isRequired,\r\n    setOpen: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default function GenericDeleteWarning(props) {\r\n    GenericDeleteWarning.propTypes = props.data;\r\n    const data = props;\r\n    //Remove must be a function that deletes the component\r\n    const { remove, open, setOpen } = data;\r\n\r\n    //Func that closes the popup window\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">\r\n                {'Are you sure you want to delete this?'}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    Once this action is performed, it cannot be undone!\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={remove} color=\"primary\">\r\n                    Yes\r\n                </Button>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    No\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button, Box, Typography } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport GenericDeleteWarning from '../../DeleteWarnings/GenericDeleteWarning';\r\nimport deleteReq from '../../../universalHTTPRequests/delete';\r\nimport post from '../../../universalHTTPRequests/post';\r\nimport put from '../../../universalHTTPRequests/put';\r\nconst endpointPOST = '/api/issues/';\r\n//Need issueID\r\nconst endpointPUT = '/api/issues/';\r\n//Need issueID\r\nconst endpointDELETE = '/api/issues/';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        margin: theme.spacing(0.5),\r\n        marginTop: theme.spacing(0),\r\n        width: '100%',\r\n        textTransform: 'unset',\r\n    },\r\n}));\r\n\r\nIssueEntryField.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    scenarioID: PropTypes.number,\r\n    issue: PropTypes.string,\r\n    score: PropTypes.number,\r\n    isNewIssue: PropTypes.bool,\r\n    issueEntryFieldList: PropTypes.any.isRequired,\r\n    setIssueEntryFieldList: PropTypes.any.isRequired,\r\n    setSuccessBannerFade: PropTypes.any,\r\n    setSuccessBannerMessage: PropTypes.any,\r\n    setErrorBannerMessage: PropTypes.any,\r\n    setErrorBannerFade: PropTypes.any,\r\n};\r\n\r\nexport default function IssueEntryField({\r\n    id,\r\n    scenarioID,\r\n    issue,\r\n    score,\r\n    isNewIssue,\r\n    setIssueEntryFieldList,\r\n    issueEntryFieldList,\r\n    setSuccessBannerMessage,\r\n    setSuccessBannerFade,\r\n    setErrorBannerMessage,\r\n    setErrorBannerFade,\r\n}) {\r\n    const classes = useStyles();\r\n\r\n    //TODO replace once versionID is implemented with backend\r\n    const versionID = 2;\r\n\r\n    // eslint-disable-next-line\r\n    const [postValue, setPost] = useState({\r\n        data: null,\r\n        loading: true,\r\n        error: null,\r\n    });\r\n    // eslint-disable-next-line\r\n    const [putValue, setPut] = useState({\r\n        data: null,\r\n        loading: true,\r\n        error: null,\r\n    });\r\n    // eslint-disable-next-line\r\n    const [deleteReqValue, setDeleteReq] = useState({\r\n        data: null,\r\n        loading: true,\r\n        error: null,\r\n    });\r\n\r\n    const [issueID, setIssueID] = useState(id);\r\n    const [issueScore, setIssueScore] = useState(score ? score.toString() : '');\r\n    const [issueName, setIssueName] = useState(issue ? issue : '');\r\n    const [newIssue, setNewIssue] = useState(isNewIssue);\r\n    const [unsaved, setUnsaved] = useState(isNewIssue);\r\n\r\n    const handleChangeScore = (content) => {\r\n        setUnsaved(true);\r\n        setIssueScore(content.target.value);\r\n    };\r\n\r\n    const handleChangeName = (content) => {\r\n        setUnsaved(true);\r\n        setIssueName(content.target.value);\r\n    };\r\n\r\n    const [errorName, setErrorName] = useState(false);\r\n    const [errorNameText, setErrorNameText] = useState('');\r\n    const [errorScore, setErrorScore] = useState(false);\r\n    const [errorScoreText, setErrorScoreText] = useState('');\r\n\r\n    const saveIssue = () => {\r\n        let validInput = true;\r\n\r\n        //Issue name is null or white space and issue score is null\r\n        if (!issueName || !issueName.trim()) {\r\n            setErrorNameText('Issue score and name is not filled in!');\r\n            setErrorName(true);\r\n            validInput = false;\r\n        } else {\r\n            setErrorName(false);\r\n        }\r\n\r\n        score = Number(issueScore);\r\n        //Issue score is null\r\n        if (!issueScore || !issueScore.trim()) {\r\n            //Issue score is null\r\n            setErrorScoreText('Issue score and name is not filled in!');\r\n            setErrorScore(true);\r\n            validInput = false;\r\n        } else if (\r\n            isNaN(issueScore) ||\r\n            issueScore.toString().indexOf('.') !== -1 ||\r\n            score > 5 ||\r\n            score < 0\r\n        ) {\r\n            //Issue score is not an integer between 0 and 5\r\n            setErrorScoreText(\r\n                'Issue score must be an integer between 0 and 5.'\r\n            );\r\n            setErrorScore(true);\r\n            validInput = false;\r\n        } else {\r\n            setErrorScore(false);\r\n        }\r\n\r\n        if (validInput) {\r\n            if (newIssue) {\r\n                function onSuccess(resp) {\r\n                    //if newly created issue, replace fake ID with new ID\r\n                    if (resp.data) {\r\n                        setUnsaved(false);\r\n                        setIssueID(resp.data.ISSUE);\r\n                        setSuccessBannerFade(true);\r\n                        setSuccessBannerMessage('Successfully created issue!');\r\n                        setNewIssue(false);\r\n                    }\r\n                }\r\n                function onFailure() {\r\n                    setErrorBannerMessage('Failed to save! Please try again.');\r\n                    setErrorBannerFade(true);\r\n                }\r\n                post(setPost, endpointPOST, onFailure, onSuccess, {\r\n                    SCENARIO: scenarioID,\r\n                    VERSION: versionID,\r\n                    IMPORTANCE_SCORE: score,\r\n                    NAME: issueName,\r\n                });\r\n            } else {\r\n                function onSuccess() {\r\n                    setUnsaved(false);\r\n                    setSuccessBannerFade(true);\r\n                    setSuccessBannerMessage('Successfully updated issue!');\r\n                }\r\n                function onFailure() {\r\n                    setErrorBannerMessage('Failed to save! Please try again.');\r\n                    setErrorBannerFade(true);\r\n                }\r\n                put(setPut, endpointPUT + issueID + '/', onFailure, onSuccess, {\r\n                    SCENARIO: scenarioID,\r\n                    VERSION: versionID,\r\n                    IMPORTANCE_SCORE: score,\r\n                    NAME: issueName,\r\n                    ISSUE: id,\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    const deleteIssue = () => {\r\n        //remove issue from array, id represents the id in issueEntryFieldList\r\n        //If issue is a new issue, A POST request will replace the fake ID with the ID in database\r\n        //ID in the array will remain the fake id, so that is why we compare with 'id' rather than 'issueID'\r\n        if (newIssue) {\r\n            let newData = issueEntryFieldList.data.filter(\r\n                (entry) => entry.ISSUE !== id\r\n            );\r\n            setIssueEntryFieldList({ ...issueEntryFieldList, data: newData });\r\n        } else {\r\n            function successfullySaved() {\r\n                setUnsaved(false);\r\n                setSuccessBannerFade(true);\r\n                setSuccessBannerMessage('Successfully deleted issue!');\r\n                let newData = issueEntryFieldList.data.filter(\r\n                    (entry) => entry.ISSUE !== id\r\n                );\r\n                setIssueEntryFieldList({\r\n                    ...issueEntryFieldList,\r\n                    data: newData,\r\n                });\r\n            }\r\n            function onFailure() {\r\n                setErrorBannerMessage('Failed to save! Please try again.');\r\n                setErrorBannerFade(true);\r\n            }\r\n\r\n            deleteReq(\r\n                setDeleteReq,\r\n                endpointDELETE + issueID + '/',\r\n                onFailure,\r\n                successfullySaved,\r\n                {\r\n                    SCENARIO: scenarioID,\r\n                    ISSUE: issueID,\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    //Used for Delete Warning\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {unsaved ? (\r\n                <Typography variant=\"h6\" align=\"center\" color=\"error\">\r\n                    Unsaved\r\n                </Typography>\r\n            ) : null}\r\n            <Box display=\"flex\" flexDirection=\"row\" p={1} m={1}>\r\n                <Box p={2}>\r\n                    {errorName ? (\r\n                        <TextField\r\n                            error\r\n                            helperText={errorNameText}\r\n                            style={{ width: '65%' }}\r\n                            id=\"outlined-text\"\r\n                            label=\"Issue\"\r\n                            value={issueName}\r\n                            onChange={handleChangeName}\r\n                            multiline\r\n                            rows={2}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    ) : (\r\n                        <TextField\r\n                            style={{ width: '65%' }}\r\n                            id=\"outlined-text\"\r\n                            label=\"Issue\"\r\n                            value={issueName}\r\n                            onChange={handleChangeName}\r\n                            multiline\r\n                            rows={2}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    )}\r\n                    {errorScore ? (\r\n                        <TextField\r\n                            error\r\n                            helperText={errorScoreText}\r\n                            style={{ width: '35%' }}\r\n                            margin=\"normal\"\r\n                            id=\"outlined-number\"\r\n                            label=\"Importance Factor\"\r\n                            placeholder=\"0-5\"\r\n                            onChange={handleChangeScore}\r\n                            value={issueScore}\r\n                            rows={1}\r\n                            variant=\"filled\"\r\n                        />\r\n                    ) : (\r\n                        <TextField\r\n                            style={{ width: '35%' }}\r\n                            margin=\"normal\"\r\n                            id=\"outlined-number\"\r\n                            label=\"Importance Factor\"\r\n                            placeholder=\"0-5\"\r\n                            onChange={handleChangeScore}\r\n                            value={issueScore}\r\n                            rows={1}\r\n                            variant=\"filled\"\r\n                        />\r\n                    )}\r\n                </Box>\r\n                <Box p={1}>\r\n                    <div>\r\n                        <Button\r\n                            className={classes.button}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => saveIssue()}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                    </div>\r\n                    <Button\r\n                        className={classes.button}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleClickOpen}\r\n                    >\r\n                        Delete\r\n                    </Button>\r\n                    <GenericDeleteWarning\r\n                        remove={() => deleteIssue()}\r\n                        open={open}\r\n                        setOpen={setOpen}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport EntryField from './IssueEntryField';\r\nimport { Container, Button } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport SuccessBanner from '../../Banners/SuccessBanner';\r\nimport ErrorBanner from '../../Banners/ErrorBanner';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n        textTransform: 'unset',\r\n    },\r\n}));\r\n\r\nIssueEntryFieldList.propTypes = {\r\n    issueEntryFieldList: PropTypes.any.isRequired,\r\n    setIssueEntryFieldList: PropTypes.any.isRequired,\r\n    scenarioID: PropTypes.number,\r\n};\r\n\r\nexport default function IssueEntryFieldList({\r\n    issueEntryFieldList,\r\n    setIssueEntryFieldList,\r\n    scenarioID,\r\n}) {\r\n    const classes = useStyles();\r\n\r\n    //When we select new issue button, we add new issue object into array.\r\n    //We set a temporary unique ID.\r\n    function setNewIssueID() {\r\n        let newID = Math.floor(Math.random() * 10000000);\r\n        let collision =\r\n            issueEntryFieldList.data.filter((data) => data.ISSUE === newID)\r\n                .length !== 0;\r\n        while (collision) {\r\n            newID = Math.floor(Math.random() * 10000000);\r\n            const checkNewID = newID;\r\n            collision =\r\n                issueEntryFieldList.data.filter(\r\n                    (data) => data.ISSUE === checkNewID\r\n                ).length !== 0;\r\n        }\r\n        return newID;\r\n    }\r\n\r\n    const [entryCur, setEntryCur] = useState({\r\n        ISSUE: setNewIssueID(),\r\n        isNewIssue: true,\r\n    });\r\n\r\n    const addIssue = (e) => {\r\n        e.preventDefault();\r\n        const newEntry = entryCur;\r\n        issueEntryFieldList.data = issueEntryFieldList.data.concat(newEntry);\r\n        setIssueEntryFieldList(issueEntryFieldList);\r\n        setEntryCur({\r\n            ISSUE: setNewIssueID(),\r\n            isNewIssue: true,\r\n        });\r\n    };\r\n\r\n    const [successBannerMessage, setSuccessBannerMessage] = useState('');\r\n    const [successBannerFade, setSuccessBannerFade] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setSuccessBannerFade(false);\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [successBannerFade]);\r\n\r\n    const [errorBannerMessage, setErrorBannerMessage] = useState('');\r\n    const [errorBannerFade, setErrorBannerFade] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setErrorBannerFade(false);\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [errorBannerFade]);\r\n\r\n    return (\r\n        <Container component=\"main\" className={classes.container}>\r\n            <SuccessBanner\r\n                successMessage={successBannerMessage}\r\n                fade={successBannerFade}\r\n            />\r\n            <ErrorBanner\r\n                errorMessage={errorBannerMessage}\r\n                fade={errorBannerFade}\r\n            />\r\n            <Button\r\n                className={classes.button}\r\n                id=\"button\"\r\n                onClick={addIssue}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n            >\r\n                Create Issue\r\n            </Button>\r\n\r\n            <form id=\"form\">\r\n                {issueEntryFieldList.data.map((entry) => (\r\n                    <EntryField\r\n                        key={entry.ISSUE}\r\n                        id={entry.ISSUE}\r\n                        scenarioID={scenarioID}\r\n                        isNewIssue={entry.isNewIssue}\r\n                        issue={entry.NAME}\r\n                        score={entry.IMPORTANCE_SCORE}\r\n                        setIssueEntryFieldList={setIssueEntryFieldList}\r\n                        issueEntryFieldList={issueEntryFieldList}\r\n                        entry={entry}\r\n                        setSuccessBannerFade={setSuccessBannerFade}\r\n                        setSuccessBannerMessage={setSuccessBannerMessage}\r\n                        setErrorBannerFade={setErrorBannerFade}\r\n                        setErrorBannerMessage={setErrorBannerMessage}\r\n                    />\r\n                ))}\r\n            </form>\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Typography, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport EntryFields from './IssueEntryFieldList';\r\nimport get from '../../../universalHTTPRequests/get';\r\nimport LoadingSpinner from '../../LoadingSpinner';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Need scenarioID\r\nconst endpointGET = '/api/issues/?SCENARIO=';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    issue: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    spacing: {\r\n        padding: theme.spacing(1),\r\n    },\r\n    saveButton: {\r\n        margin: theme.spacing(2),\r\n        float: 'right',\r\n        textTransform: 'unset',\r\n    },\r\n    container: {\r\n        padding: theme.spacing(1),\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    iconError: {\r\n        paddingRight: theme.spacing(2),\r\n        fontSize: '75px',\r\n    },\r\n    iconRefreshLarge: {\r\n        fontSize: '75px',\r\n    },\r\n    iconRefreshSmall: {\r\n        fontSize: '30px',\r\n    },\r\n}));\r\n\r\nConfigureIssues.propTypes = {\r\n    scenario_ID: PropTypes.number,\r\n};\r\n\r\nexport default function ConfigureIssues({ scenario_ID }) {\r\n    const classes = useStyles();\r\n    const [issueEntryFieldList, setIssueEntryFieldList] = useState({\r\n        data: null,\r\n        loading: true,\r\n        error: null,\r\n    });\r\n\r\n    let getData = () => {\r\n        get(setIssueEntryFieldList, endpointGET + scenario_ID);\r\n    };\r\n\r\n    useEffect(getData, []);\r\n\r\n    if (issueEntryFieldList.loading) {\r\n        return <LoadingSpinner />;\r\n    }\r\n\r\n    if (issueEntryFieldList.error) {\r\n        return (\r\n            <div className={classes.issue}>\r\n                <div className={classes.container}>\r\n                    <ErrorIcon className={classes.iconError} />\r\n                    <Typography align=\"center\" variant=\"h3\">\r\n                        Error in fetching issues.\r\n                    </Typography>\r\n                </div>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={getData}>\r\n                    <RefreshIcon className={classes.iconRefreshLarge} />\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={classes.issue}>\r\n            <Typography align=\"center\" variant=\"h2\">\r\n                Configure Ethical Issues\r\n            </Typography>\r\n            <div className={classes.spacing}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={getData}>\r\n                    <RefreshIcon className={classes.iconRefreshSmall} />\r\n                </Button>\r\n            </div>\r\n            <EntryFields\r\n                issueEntryFieldList={\r\n                    issueEntryFieldList !== null ? issueEntryFieldList : []\r\n                }\r\n                setIssueEntryFieldList={setIssueEntryFieldList}\r\n                scenarioID={scenario_ID}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport PropTypes from 'prop-types';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\n// eslint-disable-next-line\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(0.5),\r\n        marginTop: theme.spacing(0),\r\n        width: 50,\r\n    },\r\n}));\r\n\r\nIssueRow.propTypes = {\r\n    name: PropTypes.string,\r\n    score: PropTypes.number,\r\n    issue_number: PropTypes.number,\r\n    scenario: PropTypes.number,\r\n    issues: PropTypes.any,\r\n    setIssues: PropTypes.any,\r\n};\r\n\r\nexport default function IssueRow({\r\n    name,\r\n    score,\r\n    issue_number,\r\n    issues,\r\n    setIssues,\r\n}) {\r\n    const [issueScore, setIssueScore] = useState(score);\r\n\r\n    function updateIssueScore(val) {\r\n        const updatedIssues = [...issues];\r\n        setIssues(\r\n            updatedIssues.map((i) => {\r\n                if (i.ISSUE === issue_number) {\r\n                    i.COVERAGE_SCORE = val;\r\n                }\r\n                return i;\r\n            })\r\n        );\r\n    }\r\n\r\n    const onChangeScore = (e) => {\r\n        setIssueScore(e.target.value);\r\n        updateIssueScore(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <TableRow key={issue_number}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                    <TextField\r\n                        id=\"filled\"\r\n                        defaultValue={name}\r\n                        variant=\"filled\"\r\n                    />\r\n                </TableCell>\r\n\r\n                <TableCell>\r\n                    <TextField\r\n                        id=\"filled\"\r\n                        defaultValue={issueScore}\r\n                        variant=\"filled\"\r\n                        onChange={onChangeScore}\r\n                    />\r\n                </TableCell>\r\n            </TableRow>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport './table.css';\r\nimport PropTypes from 'prop-types';\r\nimport SuccessBanner from './../../../Banners/SuccessBanner';\r\nimport ErrorBanner from './../../../Banners/ErrorBanner';\r\nimport IssueRow from './IssueRow';\r\nimport LoadingSpinner from './../../../LoadingSpinner';\r\nimport { baseURL } from './../../../../Constants/Config';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 300,\r\n    },\r\n});\r\n\r\nBasicTable.propTypes = {\r\n    stakeholder_id: PropTypes.number,\r\n    passed_issues: PropTypes.any,\r\n};\r\n\r\nexport default function BasicTable({ stakeholder_id, passed_issues }) {\r\n    //used to track if we are waiting on a HTTP GET/POST/PUT request\r\n    //not needed for DELETE\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    //for success and error banners\r\n    const [successBannerMessage, setSuccessBannerMessage] = useState('');\r\n    const [successBannerFade, setSuccessBannerFade] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setSuccessBannerFade(false);\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [successBannerFade]);\r\n\r\n    const [errorBannerMessage, setErrorBannerMessage] = useState('');\r\n    const [errorBannerFade, setErrorBannerFade] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setErrorBannerFade(false);\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [errorBannerFade]);\r\n\r\n    const [issues, setIssues] = useState(passed_issues);\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleSave = (e) => {\r\n        if (!checkTime(setCurrentTime, currentTime)) {\r\n            return;\r\n        }\r\n        setLoading(true);\r\n\r\n        var axios = require('axios');\r\n\r\n        var data = [...issues];\r\n        data = data.map((i) => {\r\n            delete i.NAME;\r\n            return i;\r\n        });\r\n\r\n        var config = {\r\n            method: 'put',\r\n            url: baseURL + '/multi_coverage?STAKEHOLDER=' + stakeholder_id,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        axios(config)\r\n            .then(function (response) {\r\n                setSuccessBannerMessage(\r\n                    'Successfully saved the issues for this stakeholder!'\r\n                );\r\n                setSuccessBannerFade(true);\r\n            })\r\n            .catch(function (error) {\r\n                setErrorBannerMessage(\r\n                    'Failed to save the issues for this stakeholder! Please try again.'\r\n                );\r\n                setErrorBannerFade(true);\r\n            });\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    /*\r\n     * This section is about managing time to prevent sending a combination of multiple\r\n     *    HTTP GET/POST/PUT/DELETE calls before a response is returned\r\n     */\r\n    const [currentTime, setCurrentTime] = useState(getCurrentTimeInt());\r\n    //gets the current time in hms and converts it to an int\r\n    function getCurrentTimeInt() {\r\n        let d = Date();\r\n        var h = d.substring(16, 18);\r\n        var m = d.substring(19, 21);\r\n        var s = d.substring(22, 24);\r\n        return 60 * (60 * h + m) + s;\r\n    }\r\n\r\n    //checks if at least 1 second has elapsed since last action\r\n    //if someone waits a multiple of exactly 24 hours since their last action they will\r\n    //    not be able to take an action for an additional second\r\n    function checkTime(setTime, t) {\r\n        var ret = false;\r\n        //current time difference is at least 1 second, but that SHOULD be ample time for\r\n        //the database to get back to the frontend\r\n        if (getCurrentTimeInt() - t !== 0) {\r\n            ret = true;\r\n        }\r\n        setTime(getCurrentTimeInt());\r\n        return ret;\r\n    }\r\n\r\n    if (isLoading) {\r\n        return <LoadingSpinner />;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                id=\"button-save\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleSave}\r\n            >\r\n                Save Changes\r\n            </Button>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Issue</TableCell>\r\n                            <TableCell>Score</TableCell>\r\n                            <TableCell align=\"right\"></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {issues.map((i) => (\r\n                            <TableRow key={i.ISSUE}>\r\n                                <IssueRow\r\n                                    name={i.NAME}\r\n                                    score={i.COVERAGE_SCORE}\r\n                                    issue_number={i.ISSUE}\r\n                                    issues={issues}\r\n                                    setIssues={setIssues}\r\n                                />\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <SuccessBanner\r\n                successMessage={successBannerMessage}\r\n                fade={successBannerFade}\r\n            />\r\n            <ErrorBanner\r\n                errorMessage={errorBannerMessage}\r\n                fade={errorBannerFade}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\nimport GenericDeleteWarning from '../../../../DeleteWarnings/GenericDeleteWarning';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    margin: {\r\n        margin: theme.spacing(0.5),\r\n        marginTop: theme.spacing(0),\r\n        width: 50,\r\n    },\r\n}));\r\n\r\nQuestionField.propTypes = {\r\n    key: PropTypes.number,\r\n    id: PropTypes.number,\r\n    removeQuestion: PropTypes.any.isRequired,\r\n    question: PropTypes.string,\r\n    response: PropTypes.string,\r\n    QRs: PropTypes.any,\r\n    setQRs: PropTypes.any,\r\n};\r\n\r\nexport default function QuestionField({\r\n    key,\r\n    id,\r\n    removeQuestion,\r\n    question,\r\n    response,\r\n    QRs,\r\n    setQRs,\r\n}) {\r\n    const [questionValue, setQuestionValue] = useState(question);\r\n    const [responseValue, setResponseValue] = useState(response);\r\n\r\n    function updateQRs(shq, shr) {\r\n        const updatedQRs = [...QRs];\r\n        setQRs(\r\n            updatedQRs.map((qr) => {\r\n                if (qr.CONVERSATION === id) {\r\n                    qr.QUESTION = shq;\r\n                    qr.RESPONSE = shr;\r\n                }\r\n                return qr;\r\n            })\r\n        );\r\n    }\r\n\r\n    const onChangeQuestion = (e) => {\r\n        setQuestionValue(e.target.value);\r\n        updateQRs(e.target.value, responseValue);\r\n    };\r\n    //Used for delete Warning Popup window\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const onChangeResponse = (e) => {\r\n        setResponseValue(e.target.value);\r\n        updateQRs(questionValue, e.target.value);\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                p={1}\r\n                m={1}\r\n                bgcolor=\"background.paper\"\r\n            >\r\n                <Box p={1}>\r\n                    <TextField\r\n                        style={{ width: 700 }}\r\n                        id=\"outlined-multiline-static\"\r\n                        label=\"Question\"\r\n                        multiline\r\n                        rows={2}\r\n                        variant=\"outlined\"\r\n                        value={questionValue}\r\n                        onChange={onChangeQuestion}\r\n                    />\r\n                    <TextField\r\n                        style={{ width: 700, marginTop: 20 }}\r\n                        id=\"outlined-multiline-static\"\r\n                        label=\"StakeHolder Response\"\r\n                        multiline\r\n                        rows={2}\r\n                        variant=\"outlined\"\r\n                        value={responseValue}\r\n                        onChange={onChangeResponse}\r\n                    />\r\n                </Box>\r\n                <Box p={1}>\r\n                    <Button\r\n                        className={classes.margin}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleClickOpen}\r\n                    >\r\n                        Delete\r\n                    </Button>\r\n\r\n                    <GenericDeleteWarning\r\n                        remove={() => removeQuestion(id)}\r\n                        open={open}\r\n                        setOpen={setOpen}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport QuestionField from './question';\r\nimport Button from '@material-ui/core/Button';\r\nimport './questions.css';\r\nimport PropTypes from 'prop-types';\r\nimport SuccessBanner from './../../../../Banners/SuccessBanner';\r\nimport ErrorBanner from './../../../../Banners/ErrorBanner';\r\nimport LoadingSpinner from './../../../../LoadingSpinner';\r\nimport { baseURL } from './../../../../../Constants/Config';\r\n\r\nQuestionFields.propTypes = {\r\n    qrs: PropTypes.any,\r\n    stakeholder_id: PropTypes.number,\r\n};\r\n\r\nexport default function QuestionFields({ qrs, stakeholder_id }) {\r\n    //used to track if we are waiting on a HTTP GET/POST/PUT request\r\n    //not needed for DELETE\r\n    const [isLoading, setLoading] = useState(false);\r\n    var axios = require('axios');\r\n\r\n    //for success and error banners\r\n    const [successBannerMessage, setSuccessBannerMessage] = useState('');\r\n    const [successBannerFade, setSuccessBannerFade] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setSuccessBannerFade(false);\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [successBannerFade]);\r\n\r\n    const [errorBannerMessage, setErrorBannerMessage] = useState('');\r\n    const [errorBannerFade, setErrorBannerFade] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setErrorBannerFade(false);\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [errorBannerFade]);\r\n\r\n    const [QRs, setQRs] = useState(qrs);\r\n\r\n    const handleSave = (e) => {\r\n        var axios = require('axios');\r\n        var data = QRs;\r\n\r\n        var config = {\r\n            method: 'put',\r\n            url: baseURL + '/multi_conv?STAKEHOLDER=' + stakeholder_id,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        axios(config)\r\n            .then(function (response) {\r\n                setSuccessBannerMessage(\r\n                    'Successfully saved the conversations for this stakeholder!'\r\n                );\r\n                setSuccessBannerFade(true);\r\n            })\r\n            .catch(function (error) {\r\n                setErrorBannerMessage(\r\n                    'Failed to save the conversations for this stakeholder! Please try again.'\r\n                );\r\n                setErrorBannerFade(true);\r\n            });\r\n    };\r\n\r\n    const addQuestion = (e) => {\r\n        if (!checkTime(setCurrentTime, currentTime)) {\r\n            return;\r\n        }\r\n        setLoading(true);\r\n\r\n        var data = JSON.stringify({ STAKEHOLDER: stakeholder_id });\r\n\r\n        var config = {\r\n            method: 'post',\r\n            url: baseURL + '/api/conversations/',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        axios(config)\r\n            .then(function (response) {\r\n                const newQRs = [...QRs, response.data];\r\n                setQRs(newQRs);\r\n                setSuccessBannerMessage('Successfully created a conversation!');\r\n                setSuccessBannerFade(true);\r\n            })\r\n            .catch(function (error) {\r\n                setErrorBannerMessage(\r\n                    'Failed to create a conversation! Please try again.'\r\n                );\r\n                setErrorBannerFade(true);\r\n            });\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    const removeQuestion = (questionID) => {\r\n        if (!checkTime(setCurrentTime, currentTime)) {\r\n            return;\r\n        }\r\n        setLoading(true);\r\n\r\n        const leftQuestions = QRs.filter((q) => q.CONVERSATION !== questionID);\r\n        setQRs(leftQuestions);\r\n\r\n        var data = JSON.stringify({});\r\n\r\n        var config = {\r\n            method: 'delete',\r\n            url: baseURL + '/api/conversations/' + questionID + '/',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        axios(config)\r\n            .then(function (response) {\r\n                setSuccessBannerMessage(\r\n                    'Successfully deleted the conversation!'\r\n                );\r\n                setSuccessBannerFade(true);\r\n            })\r\n            .catch(function (error) {\r\n                setErrorBannerMessage(\r\n                    'Failed to delete the conversation! Please try again.'\r\n                );\r\n                setErrorBannerFade(true);\r\n            });\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    /*\r\n     * This section is about managing time to prevent sending a combination of multiple\r\n     *    HTTP GET/POST/PUT/DELETE calls before a response is returned\r\n     */\r\n    const [currentTime, setCurrentTime] = useState(getCurrentTimeInt());\r\n    //gets the current time in hms and converts it to an int\r\n    function getCurrentTimeInt() {\r\n        let d = Date();\r\n        var h = d.substring(16, 18);\r\n        var m = d.substring(19, 21);\r\n        var s = d.substring(22, 24);\r\n        return 60 * (60 * h + m) + s;\r\n    }\r\n\r\n    //checks if at least 1 second has elapsed since last action\r\n    //if someone waits a multiple of exactly 24 hours since their last action they will\r\n    //    not be able to take an action for an additional second\r\n    function checkTime(setTime, t) {\r\n        var ret = false;\r\n        //current time difference is at least 1 second, but that SHOULD be ample time for\r\n        //the database to get back to the frontend\r\n        if (getCurrentTimeInt() - t !== 0) {\r\n            ret = true;\r\n        }\r\n        setTime(getCurrentTimeInt());\r\n        return ret;\r\n    }\r\n\r\n    if (isLoading) {\r\n        return <LoadingSpinner />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"questions\">\r\n            <Button\r\n                id=\"button\"\r\n                onClick={addQuestion}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n            >\r\n                Add Question\r\n            </Button>\r\n            <Button\r\n                id=\"button\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleSave}\r\n            >\r\n                Save Changes\r\n            </Button>\r\n            <form id=\"form\">\r\n                {QRs.map((data) => (\r\n                    <QuestionField\r\n                        key={data.STAKEHOLDER}\r\n                        id={data.CONVERSATION}\r\n                        removeQuestion={removeQuestion}\r\n                        question={data.QUESTION}\r\n                        response={data.RESPONSE}\r\n                        QRs={QRs}\r\n                        setQRs={setQRs}\r\n                    />\r\n                ))}\r\n            </form>\r\n            <SuccessBanner\r\n                successMessage={successBannerMessage}\r\n                fade={successBannerFade}\r\n            />\r\n            <ErrorBanner\r\n                errorMessage={errorBannerMessage}\r\n                fade={errorBannerFade}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport BasicTable from './table';\r\nimport './stakeHolder.css';\r\nimport QuestionFields from './StakeHolderQuestions/questions';\r\nimport SunEditor from 'suneditor-react';\r\nimport 'suneditor/dist/css/suneditor.min.css';\r\nimport shemptylogo from './shemptylogo.png';\r\nimport PropTypes from 'prop-types';\r\nimport SuccessBanner from './../../../Banners/SuccessBanner';\r\nimport ErrorBanner from './../../../Banners/ErrorBanner';\r\nimport LoadingSpinner from './../../../LoadingSpinner';\r\nimport GenericDeleteWarning from '../../../DeleteWarnings/GenericDeleteWarning';\r\nimport { baseURL } from './../../../../Constants/Config';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n}));\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        margin: 1,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    className={classes.closeButton}\r\n                    onClick={onClose}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiDialogContent);\r\n\r\nStakeHolder.propTypes = {\r\n    name: PropTypes.string,\r\n    bio: PropTypes.string,\r\n    mainConvo: PropTypes.string,\r\n    id: PropTypes.number,\r\n    removeStakeHolder: PropTypes.any,\r\n    job: PropTypes.string,\r\n    stakeHolders: PropTypes.any,\r\n    setStakeHolders: PropTypes.func,\r\n};\r\n\r\nexport default function StakeHolder({\r\n    name,\r\n    bio,\r\n    mainConvo,\r\n    id,\r\n    removeStakeHolder,\r\n    job,\r\n    stakeHolders,\r\n    setStakeHolders,\r\n}) {\r\n    const classes = useStyles();\r\n\r\n    const [openBio, setOpenBio] = useState(false);\r\n    const [openMainConvo, setOpenMainConvo] = useState(false);\r\n    const [openPointSelection, setOpenPointSelection] = useState(false);\r\n    const [openQuestions, setOpenQuestions] = useState(false);\r\n    const [stakeHolderName, setStakeHolderName] = useState(name);\r\n    const [stakeHolderJob, setStakeHolderJob] = useState(job);\r\n    const [stakeHolderBiography, setStakeHolderBiography] = useState(bio);\r\n    const [stakeHolderConversation, setStakeHolderConversation] = useState(\r\n        mainConvo\r\n    );\r\n    const [issues, setIssues] = useState([]);\r\n    const [qRData, setQRData] = useState([]);\r\n    const [isLoading, setLoading] = useState(false);\r\n\r\n    var axios = require('axios');\r\n\r\n    //Warning for Deleteing a Conversation\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    //for success and error banners\r\n    // eslint-disable-next-line\r\n    const [successBannerMessage, setSuccessBannerMessage] = useState('');\r\n    const [successBannerFade, setSuccessBannerFade] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setSuccessBannerFade(false);\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [successBannerFade]);\r\n\r\n    const [errorBannerMessage, setErrorBannerMessage] = useState('');\r\n    const [errorBannerFade, setErrorBannerFade] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setErrorBannerFade(false);\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [errorBannerFade]);\r\n\r\n    //TABLE\r\n    const handleClickOpenBio = () => {\r\n        setOpenBio(true);\r\n    };\r\n    const handleCloseBio = () => {\r\n        updateBasicText(\r\n            stakeHolderName,\r\n            stakeHolderJob,\r\n            stakeHolderBiography,\r\n            stakeHolderConversation\r\n        );\r\n        setOpenBio(false);\r\n    };\r\n    const handleClickOpenMainConvo = () => {\r\n        setOpenMainConvo(true);\r\n    };\r\n    const handleCloseMainConvo = () => {\r\n        updateBasicText(\r\n            stakeHolderName,\r\n            stakeHolderJob,\r\n            stakeHolderBiography,\r\n            stakeHolderConversation\r\n        );\r\n        setOpenMainConvo(false);\r\n    };\r\n\r\n    const handleClickOpenPointSelection = () => {\r\n        getIssues();\r\n    };\r\n    const handleClosePointSelection = () => {\r\n        setOpenPointSelection(false);\r\n    };\r\n\r\n    const handleClickOpenQuestions = () => {\r\n        getQRs();\r\n    };\r\n    const handleCloseQuestions = () => {\r\n        setOpenQuestions(false);\r\n    };\r\n\r\n    let handleChangeBiography = (content, editor) => {\r\n        setStakeHolderBiography(content);\r\n    };\r\n\r\n    let handleChangeConversation = (content, editor) => {\r\n        setStakeHolderConversation(content);\r\n    };\r\n\r\n    const onChangeName = (e) => {\r\n        setStakeHolderName(e.target.value);\r\n        updateBasicText(\r\n            e.target.value,\r\n            stakeHolderJob,\r\n            stakeHolderBiography,\r\n            stakeHolderConversation\r\n        );\r\n    };\r\n\r\n    const onChangeJob = (e) => {\r\n        setStakeHolderJob(e.target.value);\r\n        updateBasicText(\r\n            stakeHolderName,\r\n            e.target.value,\r\n            stakeHolderBiography,\r\n            stakeHolderConversation\r\n        );\r\n    };\r\n\r\n    function updateBasicText(shname, shjob, shbio, shconvo) {\r\n        const updatedStakeHolders = [...stakeHolders];\r\n        setStakeHolders(\r\n            updatedStakeHolders.map((sh) => {\r\n                if (sh.STAKEHOLDER === id) {\r\n                    sh.NAME = shname;\r\n                    sh.JOB = shjob;\r\n                    sh.DESCRIPTION = shbio;\r\n                    sh.INTRODUCTION = shconvo;\r\n                }\r\n                return sh;\r\n            })\r\n        );\r\n    }\r\n\r\n    function getQRs() {\r\n        var data = {};\r\n        var config = {\r\n            method: 'get',\r\n            url: baseURL + '/api/conversations/?STAKEHOLDER=' + id,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        axios(config)\r\n            .then(function (response) {\r\n                setQRData(response.data);\r\n                setOpenQuestions(true);\r\n            })\r\n            .catch(function (error) {\r\n                setErrorBannerMessage(\r\n                    'Failed to get the conversation(s) for this stakeholder! Please try again.'\r\n                );\r\n                setErrorBannerFade(true);\r\n            });\r\n    }\r\n\r\n    function getIssues() {\r\n        setLoading(true);\r\n        var data = JSON.stringify({});\r\n\r\n        var config = {\r\n            method: 'get',\r\n            url: baseURL + '/coverages?stakeholder_id=' + id,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        axios(config)\r\n            .then(function (response) {\r\n                setIssues(response.data.ISSUES);\r\n                setLoading(false);\r\n                setOpenPointSelection(true);\r\n            })\r\n            .catch(function (error) {\r\n                setErrorBannerMessage(\r\n                    'Failed to get the issue(s) for this stakeholder! Please try again.'\r\n                );\r\n                setErrorBannerFade(true);\r\n            });\r\n    }\r\n\r\n    if (isLoading) {\r\n        return <LoadingSpinner />;\r\n    }\r\n\r\n    return (\r\n        <div id=\"parent\">\r\n            <div id=\"SHname\">\r\n                <TextField\r\n                    label=\"StakeHolder Name\"\r\n                    value={stakeHolderName}\r\n                    onChange={onChangeName}\r\n                />\r\n            </div>\r\n            <div id=\"SHjob\">\r\n                <TextField\r\n                    label=\"StakeHolder Job\"\r\n                    value={stakeHolderJob}\r\n                    onChange={onChangeJob}\r\n                />\r\n            </div>\r\n            <img id=\"stakeimg\" src={shemptylogo} alt=\" \"></img>\r\n            <label id=\"upl\" htmlFor=\"contained-button-file\">\r\n                <input\r\n                    accept=\"image/*\"\r\n                    className={classes.input}\r\n                    id=\"contained-button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                />\r\n                <label htmlFor=\"contained-button-file\">\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        component=\"span\"\r\n                        style={{ textTransform: 'unset' }}\r\n                    >\r\n                        Upload\r\n                    </Button>\r\n                </label>\r\n                <input\r\n                    accept=\"image/*\"\r\n                    className={classes.input}\r\n                    id=\"icon-button-file\"\r\n                    type=\"file\"\r\n                />\r\n            </label>\r\n\r\n            <div id=\"Bio\">\r\n                <TextField\r\n                    label=\"Biography\"\r\n                    style={{ width: 500 }}\r\n                    multiline\r\n                    rows={2}\r\n                    variant=\"outlined\"\r\n                    onClick={handleClickOpenBio}\r\n                />\r\n            </div>\r\n\r\n            <div id=\"MainConversationField\">\r\n                <TextField\r\n                    label=\"Main Conversation\"\r\n                    style={{ width: 500 }}\r\n                    multiline\r\n                    rows={2}\r\n                    variant=\"outlined\"\r\n                    onClick={handleClickOpenMainConvo}\r\n                />\r\n            </div>\r\n            <div id=\"DeleteButton\">\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleClickOpen}\r\n                >\r\n                    Delete\r\n                </Button>\r\n\r\n                <GenericDeleteWarning\r\n                    remove={() => removeStakeHolder(id)}\r\n                    setOpen={setOpen}\r\n                    open={open}\r\n                />\r\n            </div>\r\n            <div id=\"PointButton\">\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleClickOpenPointSelection}\r\n                >\r\n                    Point Selection\r\n                </Button>\r\n            </div>\r\n\r\n            <div id=\"stakequestion\">\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleClickOpenQuestions}\r\n                >\r\n                    View Questions\r\n                </Button>\r\n            </div>\r\n\r\n            <Dialog\r\n                onClose={handleCloseBio}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={openBio}\r\n                maxWidth={false}\r\n            >\r\n                <div style={{ width: 900 }}>\r\n                    <DialogTitle\r\n                        id=\"customized-dialog-title\"\r\n                        onClose={handleCloseBio}\r\n                    >\r\n                        Biography\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <SunEditor\r\n                            setContents={bio}\r\n                            setOptions={{\r\n                                width: '100%',\r\n                                height: 400,\r\n                                placeholder:\r\n                                    'Enter in introduction of component...',\r\n                                buttonList: [\r\n                                    ['font', 'fontSize', 'formatBlock'],\r\n                                    ['paragraphStyle', 'blockquote'],\r\n                                    [\r\n                                        'bold',\r\n                                        'underline',\r\n                                        'italic',\r\n                                        'strike',\r\n                                        'subscript',\r\n                                        'superscript',\r\n                                    ],\r\n                                    ['fontColor', 'hiliteColor', 'textStyle'],\r\n                                    '/',\r\n                                    ['undo', 'redo'],\r\n                                    ['removeFormat'],\r\n                                    ['outdent', 'indent'],\r\n                                    [\r\n                                        'align',\r\n                                        'horizontalRule',\r\n                                        'list',\r\n                                        'lineHeight',\r\n                                    ],\r\n                                    [\r\n                                        'table',\r\n                                        'link',\r\n                                        'image',\r\n                                        'video',\r\n                                        'audio',\r\n                                    ],\r\n                                    ['fullScreen', 'showBlocks', 'codeView'],\r\n                                    ['preview'],\r\n                                    [\r\n                                        '%1000',\r\n                                        [\r\n                                            ['undo', 'redo'],\r\n                                            [\r\n                                                ':p-More Paragraph-default.more_paragraph',\r\n                                                'font',\r\n                                                'fontSize',\r\n                                                'formatBlock',\r\n                                                'paragraphStyle',\r\n                                                'blockquote',\r\n                                            ],\r\n                                            [\r\n                                                'bold',\r\n                                                'underline',\r\n                                                'italic',\r\n                                                'strike',\r\n                                            ],\r\n                                            [\r\n                                                ':t-More Text-default.more_text',\r\n                                                'subscript',\r\n                                                'superscript',\r\n                                                'fontColor',\r\n                                                'hiliteColor',\r\n                                                'textStyle',\r\n                                            ],\r\n                                            ['removeFormat'],\r\n                                            ['outdent', 'indent'],\r\n                                            [\r\n                                                ':e-More Line-default.more_horizontal',\r\n                                                'align',\r\n                                                'horizontalRule',\r\n                                                'list',\r\n                                                'lineHeight',\r\n                                            ],\r\n                                            [\r\n                                                '-right',\r\n                                                ':i-More Misc-default.more_vertical',\r\n                                                'fullScreen',\r\n                                                'showBlocks',\r\n                                                'codeView',\r\n                                                'preview',\r\n                                            ],\r\n                                            [\r\n                                                '-right',\r\n                                                ':r-More Rich-default.more_plus',\r\n                                                'table',\r\n                                                'link',\r\n                                                'image',\r\n                                                'video',\r\n                                                'audio',\r\n                                            ],\r\n                                        ],\r\n                                    ],\r\n                                    [\r\n                                        '%875',\r\n                                        [\r\n                                            ['undo', 'redo'],\r\n                                            [\r\n                                                ':p-More Paragraph-default.more_paragraph',\r\n                                                'font',\r\n                                                'fontSize',\r\n                                                'formatBlock',\r\n                                                'paragraphStyle',\r\n                                                'blockquote',\r\n                                            ],\r\n                                            [\r\n                                                ':t-More Text-default.more_text',\r\n                                                'bold',\r\n                                                'underline',\r\n                                                'italic',\r\n                                                'strike',\r\n                                                'subscript',\r\n                                                'superscript',\r\n                                                'fontColor',\r\n                                                'hiliteColor',\r\n                                                'textStyle',\r\n                                                'removeFormat',\r\n                                            ],\r\n                                            [\r\n                                                ':e-More Line-default.more_horizontal',\r\n                                                'outdent',\r\n                                                'indent',\r\n                                                'align',\r\n                                                'horizontalRule',\r\n                                                'list',\r\n                                                'lineHeight',\r\n                                            ],\r\n                                            [\r\n                                                ':r-More Rich-default.more_plus',\r\n                                                'table',\r\n                                                'link',\r\n                                                'image',\r\n                                                'video',\r\n                                                'audio',\r\n                                            ],\r\n                                            [\r\n                                                '-right',\r\n                                                ':i-More Misc-default.more_vertical',\r\n                                                'fullScreen',\r\n                                                'showBlocks',\r\n                                                'codeView',\r\n                                                'preview',\r\n                                            ],\r\n                                        ],\r\n                                    ],\r\n                                ],\r\n                            }}\r\n                            onChange={handleChangeBiography}\r\n                        />\r\n                    </DialogContent>\r\n                </div>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                onClose={handleCloseMainConvo}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                maxWidth={false}\r\n                open={openMainConvo}\r\n            >\r\n                <div style={{ width: 900 }}>\r\n                    <DialogTitle\r\n                        id=\"customized-dialog-title\"\r\n                        onClose={handleCloseMainConvo}\r\n                    >\r\n                        Main Coversation\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <SunEditor\r\n                            setContents={mainConvo}\r\n                            setOptions={{\r\n                                height: 400,\r\n                                placeholder:\r\n                                    'Enter in introduction of component...',\r\n                                buttonList: [\r\n                                    ['font', 'fontSize', 'formatBlock'],\r\n                                    ['paragraphStyle', 'blockquote'],\r\n                                    [\r\n                                        'bold',\r\n                                        'underline',\r\n                                        'italic',\r\n                                        'strike',\r\n                                        'subscript',\r\n                                        'superscript',\r\n                                    ],\r\n                                    ['fontColor', 'hiliteColor', 'textStyle'],\r\n                                    '/',\r\n                                    ['undo', 'redo'],\r\n                                    ['removeFormat'],\r\n                                    ['outdent', 'indent'],\r\n                                    [\r\n                                        'align',\r\n                                        'horizontalRule',\r\n                                        'list',\r\n                                        'lineHeight',\r\n                                    ],\r\n                                    [\r\n                                        'table',\r\n                                        'link',\r\n                                        'image',\r\n                                        'video',\r\n                                        'audio',\r\n                                    ],\r\n                                    ['fullScreen', 'showBlocks', 'codeView'],\r\n                                    ['preview'],\r\n                                    [\r\n                                        '%1000',\r\n                                        [\r\n                                            ['undo', 'redo'],\r\n                                            [\r\n                                                ':p-More Paragraph-default.more_paragraph',\r\n                                                'font',\r\n                                                'fontSize',\r\n                                                'formatBlock',\r\n                                                'paragraphStyle',\r\n                                                'blockquote',\r\n                                            ],\r\n                                            [\r\n                                                'bold',\r\n                                                'underline',\r\n                                                'italic',\r\n                                                'strike',\r\n                                            ],\r\n                                            [\r\n                                                ':t-More Text-default.more_text',\r\n                                                'subscript',\r\n                                                'superscript',\r\n                                                'fontColor',\r\n                                                'hiliteColor',\r\n                                                'textStyle',\r\n                                            ],\r\n                                            ['removeFormat'],\r\n                                            ['outdent', 'indent'],\r\n                                            [\r\n                                                ':e-More Line-default.more_horizontal',\r\n                                                'align',\r\n                                                'horizontalRule',\r\n                                                'list',\r\n                                                'lineHeight',\r\n                                            ],\r\n                                            [\r\n                                                '-right',\r\n                                                ':i-More Misc-default.more_vertical',\r\n                                                'fullScreen',\r\n                                                'showBlocks',\r\n                                                'codeView',\r\n                                                'preview',\r\n                                            ],\r\n                                            [\r\n                                                '-right',\r\n                                                ':r-More Rich-default.more_plus',\r\n                                                'table',\r\n                                                'link',\r\n                                                'image',\r\n                                                'video',\r\n                                                'audio',\r\n                                            ],\r\n                                        ],\r\n                                    ],\r\n                                    [\r\n                                        '%875',\r\n                                        [\r\n                                            ['undo', 'redo'],\r\n                                            [\r\n                                                ':p-More Paragraph-default.more_paragraph',\r\n                                                'font',\r\n                                                'fontSize',\r\n                                                'formatBlock',\r\n                                                'paragraphStyle',\r\n                                                'blockquote',\r\n                                            ],\r\n                                            [\r\n                                                ':t-More Text-default.more_text',\r\n                                                'bold',\r\n                                                'underline',\r\n                                                'italic',\r\n                                                'strike',\r\n                                                'subscript',\r\n                                                'superscript',\r\n                                                'fontColor',\r\n                                                'hiliteColor',\r\n                                                'textStyle',\r\n                                                'removeFormat',\r\n                                            ],\r\n                                            [\r\n                                                ':e-More Line-default.more_horizontal',\r\n                                                'outdent',\r\n                                                'indent',\r\n                                                'align',\r\n                                                'horizontalRule',\r\n                                                'list',\r\n                                                'lineHeight',\r\n                                            ],\r\n                                            [\r\n                                                ':r-More Rich-default.more_plus',\r\n                                                'table',\r\n                                                'link',\r\n                                                'image',\r\n                                                'video',\r\n                                                'audio',\r\n                                            ],\r\n                                            [\r\n                                                '-right',\r\n                                                ':i-More Misc-default.more_vertical',\r\n                                                'fullScreen',\r\n                                                'showBlocks',\r\n                                                'codeView',\r\n                                                'preview',\r\n                                            ],\r\n                                        ],\r\n                                    ],\r\n                                ],\r\n                            }}\r\n                            onChange={handleChangeConversation}\r\n                        />\r\n                    </DialogContent>\r\n                </div>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                onClose={handleCloseQuestions}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                maxWidth={false}\r\n                open={openQuestions}\r\n            >\r\n                <div style={{ width: 900 }}>\r\n                    <DialogTitle\r\n                        id=\"customized-dialog-title\"\r\n                        onClose={handleCloseQuestions}\r\n                    >\r\n                        <h2 className=\"questions-header\">Questions</h2>\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <QuestionFields qrs={qRData} stakeholder_id={id} />\r\n                    </DialogContent>\r\n                </div>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                onClose={handleClosePointSelection}\r\n                aria-labelledby=\"customized-dialog-title\"\r\n                open={openPointSelection}\r\n            >\r\n                <div className=\"point-selection-body\" style={{ width: 500 }}>\r\n                    <DialogTitle\r\n                        id=\"customized-dialog-title\"\r\n                        onClose={handleClosePointSelection}\r\n                    >\r\n                        <div className=\"point-selection-header\">\r\n                            Point Selection\r\n                        </div>\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <BasicTable\r\n                            stakeholder_id={id}\r\n                            passed_issues={issues}\r\n                        />\r\n                    </DialogContent>\r\n                </div>\r\n            </Dialog>\r\n            <SuccessBanner\r\n                successMessage={successBannerMessage}\r\n                fade={successBannerFade}\r\n            />\r\n            <ErrorBanner\r\n                errorMessage={errorBannerMessage}\r\n                fade={errorBannerFade}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport StakeHolder from './stakeHolder';\r\nimport Button from '@material-ui/core/Button';\r\nimport './stakeHolders.css';\r\nimport PropTypes from 'prop-types';\r\nimport SuccessBanner from './../../../Banners/SuccessBanner';\r\nimport ErrorBanner from './../../../Banners/ErrorBanner';\r\nimport LoadingSpinner from './../../../LoadingSpinner';\r\nimport { baseURL } from './../../../../Constants/Config';\r\n\r\nStakeHolderFields.propTypes = {\r\n    stakeHolders: PropTypes.any,\r\n    setStakeHolders: PropTypes.any,\r\n    scenario: PropTypes.number,\r\n};\r\n\r\nexport default function StakeHolderFields({ scenario }) {\r\n    const [didGetSHs, setDidGetSHs] = useState(false);\r\n\r\n    /*\r\n     * This section is code that is essentially the middleware between the frontend and backend\r\n     * Handles API calls between frontend and backend\r\n     */\r\n\r\n    //tracks current state of stakeholders to be represented on the frontend\r\n    const [stakeHolders, setStakeHolders] = useState([]);\r\n    //used to track if we are waiting on a HTTP GET/POST/PUT request\r\n    //not needed for DELETE\r\n    const [isLoading, setLoading] = useState(false);\r\n    var axios = require('axios');\r\n\r\n    //for success and error banners\r\n    const [successBannerMessage, setSuccessBannerMessage] = useState('');\r\n    const [successBannerFade, setSuccessBannerFade] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setSuccessBannerFade(false);\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [successBannerFade]);\r\n\r\n    const [errorBannerMessage, setErrorBannerMessage] = useState('');\r\n    const [errorBannerFade, setErrorBannerFade] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setErrorBannerFade(false);\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [errorBannerFade]);\r\n\r\n    //handles GETting existing stakeholders from the backend and representing\r\n    //    that information in the frontend\r\n    // will eventually know which scenario to get stakeholders from once scenario_id is passed\r\n    // from baseURL + 'stakeholder?scenario_id=' + scenario_id\r\n    function getExistingStakeHolders() {\r\n        setLoading(true);\r\n\r\n        var data = { SCENARIO: { scenario } };\r\n        var config = {\r\n            method: 'get',\r\n            url: baseURL + '/api/stakeholders/?SCENARIO=' + scenario,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        axios(config)\r\n            .then(function (response) {\r\n                setStakeHolders(response.data);\r\n            })\r\n            .catch(function (error) {\r\n                setErrorBannerMessage(\r\n                    'Failed to get Stakeholders! Please try again.'\r\n                );\r\n                setErrorBannerFade(true);\r\n            });\r\n\r\n        setLoading(false);\r\n    }\r\n\r\n    //handles DELETEing a stakeholder from the backend and removing the corresponding\r\n    //    stakeholder from the frontend\r\n    const removeStakeHolder = (stakeHolderID) => {\r\n        if (!checkTime(setCurrentTime, currentTime)) {\r\n            return;\r\n        }\r\n        setLoading(true);\r\n\r\n        //handling it on the frontend\r\n        const leftStakeHolders = stakeHolders.filter(\r\n            (s) => s.STAKEHOLDER !== stakeHolderID\r\n        );\r\n        setStakeHolders(leftStakeHolders);\r\n\r\n        //calling the DELETE request on the backend\r\n        var data = JSON.stringify({});\r\n\r\n        var config = {\r\n            method: 'delete',\r\n            url: baseURL + '/api/stakeholders/' + stakeHolderID + '/',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        axios(config)\r\n            .then(function (response) {\r\n                setSuccessBannerMessage(\r\n                    'Successfully deleted the stakeholder!'\r\n                );\r\n                setSuccessBannerFade(true);\r\n            })\r\n            .catch(function (error) {\r\n                setErrorBannerMessage(\r\n                    'Failed to delete the stakeholder! Please try again.'\r\n                );\r\n                setErrorBannerFade(true);\r\n            });\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    //handles POSTing a new stakeholder to the backend and adding that stakeholder to the frontend\r\n    const addStakeHolder = (e) => {\r\n        if (!checkTime(setCurrentTime, currentTime)) {\r\n            return;\r\n        }\r\n        setLoading(true);\r\n\r\n        var data = JSON.stringify({\r\n            SCENARIO: scenario,\r\n        });\r\n\r\n        var config = {\r\n            method: 'post',\r\n            url: baseURL + '/stakeholder',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        axios(config)\r\n            .then(function (response) {\r\n                setStakeHolders([...stakeHolders, response.data]);\r\n                setSuccessBannerMessage(\r\n                    'Successfully created a new stakeholder!'\r\n                );\r\n                setSuccessBannerFade(true);\r\n            })\r\n            .catch(function (error) {\r\n                setErrorBannerMessage(\r\n                    'Failed to create a stakeholder! Please try again.'\r\n                );\r\n                setErrorBannerFade(true);\r\n            });\r\n\r\n        setLoading(false);\r\n    };\r\n\r\n    const saveStakeHolders = (e) => {\r\n        var data = [...stakeHolders];\r\n\r\n        var config = {\r\n            method: 'put',\r\n            url: baseURL + '/multi_stake?SCENARIO=' + scenario,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            data: data,\r\n        };\r\n\r\n        axios(config)\r\n            .then(function (response) {\r\n                setSuccessBannerMessage('Successfully saved the stakeholders!');\r\n                setSuccessBannerFade(true);\r\n            })\r\n            .catch(function (error) {\r\n                setErrorBannerMessage(\r\n                    'Failed to save the stakeholders! Please try again.'\r\n                );\r\n                setErrorBannerFade(true);\r\n            });\r\n    };\r\n\r\n    /*\r\n     * This section is about managing time to prevent sending a combination of multiple\r\n     *    HTTP GET/POST/PUT/DELETE calls before a response is returned\r\n     */\r\n    const [currentTime, setCurrentTime] = useState(getCurrentTimeInt());\r\n    //gets the current time in hms and converts it to an int\r\n    function getCurrentTimeInt() {\r\n        let d = Date();\r\n        var h = d.substring(16, 18);\r\n        var m = d.substring(19, 21);\r\n        var s = d.substring(22, 24);\r\n        return 60 * (60 * h + m) + s;\r\n    }\r\n\r\n    //checks if at least 1 second has elapsed since last action\r\n    //if someone waits a multiple of exactly 24 hours since their last action they will\r\n    //    not be able to take an action for an additional second\r\n    function checkTime(setTime, t) {\r\n        var ret = false;\r\n        //current time difference is at least 1 second, but that SHOULD be ample time for\r\n        //the database to get back to the frontend\r\n        if (getCurrentTimeInt() - t !== 0) {\r\n            ret = true;\r\n        }\r\n        setTime(getCurrentTimeInt());\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * This code is the frontend rendering; what the users see\r\n     */\r\n\r\n    if (isLoading) {\r\n        return <LoadingSpinner />;\r\n    }\r\n\r\n    if (!didGetSHs) {\r\n        setDidGetSHs(true);\r\n        getExistingStakeHolders();\r\n    }\r\n\r\n    return (\r\n        <div className=\"stakeHolders\">\r\n            <Button\r\n                id=\"button\"\r\n                onClick={addStakeHolder}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n            >\r\n                Add Stake Holder\r\n            </Button>\r\n\r\n            <form id=\"form\">\r\n                {stakeHolders.map((stakeHolder) => (\r\n                    <StakeHolder\r\n                        key={stakeHolder.STAKEHOLDER}\r\n                        removeStakeHolder={removeStakeHolder}\r\n                        id={stakeHolder.STAKEHOLDER}\r\n                        name={stakeHolder.NAME}\r\n                        job={stakeHolder.JOB}\r\n                        bio={stakeHolder.DESCRIPTION}\r\n                        mainConvo={stakeHolder.INTRODUCTION}\r\n                        stakeHolders={stakeHolders}\r\n                        setStakeHolders={setStakeHolders}\r\n                    />\r\n                ))}\r\n            </form>\r\n\r\n            <div id=\"SaveButton\">\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={saveStakeHolders}\r\n                >\r\n                    Save Stakeholder Changes\r\n                </Button>\r\n            </div>\r\n            <SuccessBanner\r\n                successMessage={successBannerMessage}\r\n                fade={successBannerFade}\r\n            />\r\n            <ErrorBanner\r\n                errorMessage={errorBannerMessage}\r\n                fade={errorBannerFade}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport StakeHolderFields from './StakeHoldersComponent/stakeHolders';\r\nimport PropTypes from 'prop-types';\r\n\r\nConversationEditor.propTypes = {\r\n    scenario_ID: PropTypes.number,\r\n};\r\n\r\nexport default function ConversationEditor({ scenario_ID }) {\r\n    const [stakeHolders, setStakeHolders] = useState([]);\r\n\r\n    return (\r\n        <div>\r\n            <StakeHolderFields\r\n                stakeHolders={stakeHolders}\r\n                setStakeHolders={setStakeHolders}\r\n                scenario={scenario_ID}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\nimport GenericDeleteWarning from '../../../DeleteWarnings/GenericDeleteWarning';\r\n\r\nQuestionField.propTypes = {\r\n    removeQuestion: PropTypes.any,\r\n    question: PropTypes.any,\r\n    id: PropTypes.number,\r\n    listOfQuestions: PropTypes.any,\r\n    setListOfQuestions: PropTypes.any,\r\n    setReqBodyNew: PropTypes.any,\r\n};\r\n\r\nexport default function QuestionField({\r\n    question,\r\n    removeQuestion,\r\n    id,\r\n    listOfQuestions,\r\n    setListOfQuestions,\r\n    setReqBodyNew,\r\n}) {\r\n    const [questionValue, setQuestionValue] = useState(question);\r\n\r\n    const onChangeQuestion = (event) => {\r\n        setQuestionValue(event.target.value);\r\n        let listOfQuestions2 = [...listOfQuestions];\r\n        for (let i = 0; i < listOfQuestions2.length; i++) {\r\n            if (listOfQuestions2[i].id === id) {\r\n                listOfQuestions2[i].REFLECTION_QUESTION = event.target.value;\r\n            }\r\n        }\r\n        setListOfQuestions(listOfQuestions2);\r\n        let reqBody = listOfQuestions2.map((obj) => obj.REFLECTION_QUESTION);\r\n        setReqBodyNew(reqBody);\r\n    };\r\n\r\n    //Warning to Delete a question componet\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Box display=\"flex\" flexDirection=\"row\" p={1} m={1}>\r\n                <Box p={1} style={{ width: '80%' }}>\r\n                    <TextField\r\n                        style={{ width: '100%' }}\r\n                        label=\"Question\"\r\n                        multiline\r\n                        rows={2}\r\n                        variant=\"outlined\"\r\n                        value={questionValue}\r\n                        onChange={onChangeQuestion}\r\n                    />\r\n                </Box>\r\n                <Box p={1} style={{ width: '20%' }}>\r\n                    <div>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={handleClickOpen}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                        <GenericDeleteWarning\r\n                            remove={() => removeQuestion(id)}\r\n                            setOpen={setOpen}\r\n                            open={open}\r\n                        />\r\n                    </div>\r\n                </Box>\r\n            </Box>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport QuestionField from './question';\r\nimport Button from '@material-ui/core/Button';\r\nimport './questions.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nQuestionFields.propTypes = {\r\n    questions: PropTypes.any,\r\n    setQuestions: PropTypes.any,\r\n    setReqBodyNew: PropTypes.any,\r\n};\r\n\r\nexport default function QuestionFields({\r\n    questions,\r\n    setQuestions,\r\n    setReqBodyNew,\r\n}) {\r\n    //When we select new issue button, we add new issue object into array.\r\n    //We set a temporary unique ID.\r\n    function setNewIssueID() {\r\n        let newID = Math.floor(Math.random() * 10000000);\r\n        let collision =\r\n            questions.filter((data) => data.id === newID).length !== 0;\r\n        while (collision) {\r\n            newID = Math.floor(Math.random() * 10000000);\r\n            const checkNewID = newID;\r\n            collision =\r\n                questions.data.filter((data) => data.id === checkNewID)\r\n                    .length !== 0;\r\n        }\r\n        return newID;\r\n    }\r\n\r\n    const removeQuestion = (questionID) => {\r\n        const leftQuestions = questions.filter((q) => q.id !== questionID);\r\n        setQuestions(leftQuestions);\r\n        let reqBody = leftQuestions.map((obj) => obj.REFLECTION_QUESTION);\r\n        setReqBodyNew(reqBody);\r\n    };\r\n\r\n    const addQuestion = (e) => {\r\n        e.preventDefault();\r\n        let newQuestions = questions.map((data) => data.REFLECTION_QUESTION);\r\n        newQuestions = [...newQuestions, ''];\r\n        setReqBodyNew(newQuestions);\r\n        let newQuestionsList = questions.concat({\r\n            id: setNewIssueID(),\r\n            REFLECTION_QUESTION: '',\r\n        });\r\n        setQuestions(newQuestionsList);\r\n    };\r\n\r\n    return (\r\n        <div className=\"questions\">\r\n            <Button\r\n                id=\"button\"\r\n                onClick={addQuestion}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n            >\r\n                Add Question\r\n            </Button>\r\n\r\n            <form id=\"form\">\r\n                {questions.map((data) => (\r\n                    <QuestionField\r\n                        key={data.id}\r\n                        id={data.id}\r\n                        removeQuestion={removeQuestion}\r\n                        question={data.REFLECTION_QUESTION}\r\n                        listOfQuestions={questions}\r\n                        setListOfQuestions={setQuestions}\r\n                        setReqBodyNew={setReqBodyNew}\r\n                    />\r\n                ))}\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Body from '../GeneralPageComponents/Body';\r\nimport Title from '../GeneralPageComponents/Title';\r\nimport { Typography, Container, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport QuestionFields from './QuestionComponent/questions';\r\nimport PropTypes from 'prop-types';\r\nimport universalPost from '../../../universalHTTPRequests/post.js';\r\nimport universalDelete from '../../../universalHTTPRequests/delete.js';\r\nimport SuccessBanner from '../../Banners/SuccessBanner';\r\nimport ErrorBanner from '../../Banners/ErrorBanner';\r\nimport LoadingSpinner from '../../LoadingSpinner';\r\n\r\nReflection.propTypes = {\r\n    scenarioComponents: PropTypes.any,\r\n    setScenarioComponents: PropTypes.any,\r\n    setCurrentPageID: PropTypes.any,\r\n    page_id: PropTypes.any,\r\n    page_type: PropTypes.any,\r\n    page_title: PropTypes.any,\r\n    scenario_ID: PropTypes.any,\r\n    version_ID: PropTypes.any,\r\n    next_page_id: PropTypes.any,\r\n    body: PropTypes.any,\r\n    bodies: PropTypes.any,\r\n    xCoord: PropTypes.any,\r\n    yCoord: PropTypes.any,\r\n    reflection_questions: PropTypes.any,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    saveButton: {\r\n        margin: theme.spacing(2),\r\n        float: 'right',\r\n        textTransform: 'unset',\r\n    },\r\n    bannerContainer: {\r\n        marginTop: theme.spacing(1),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n}));\r\n\r\nexport default function Reflection(props) {\r\n    const {\r\n        scenarioComponents,\r\n        setScenarioComponents,\r\n        setCurrentPageID,\r\n        page_id,\r\n        page_type,\r\n        page_title,\r\n        scenario_ID,\r\n        version_ID,\r\n        next_page_id,\r\n        body,\r\n        reflection_questions,\r\n        xCoord,\r\n        yCoord,\r\n    } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const [postValues, setPostValues] = useState({\r\n        data: null,\r\n        loading: false,\r\n        error: null,\r\n    });\r\n    // eslint-disable-next-line\r\n    const [deleteValues, setDeleteValues] = useState({\r\n        data: null,\r\n        loading: false,\r\n        error: null,\r\n    });\r\n    const [pageID, setPageID] = useState(page_id);\r\n    const [title, setTitle] = useState(page_title);\r\n    const [bodyText, setBodyText] = useState(body);\r\n    const [questions, setQuestions] = useState(reflection_questions);\r\n    const [questionsForReqBody, setQuestionsForReqBody] = useState(\r\n        questions.map(function (a) {\r\n            return { REFLECTION_QUESTION: a.REFLECTION_QUESTION };\r\n        })\r\n    );\r\n\r\n    const [errorTitle, setErrorTitle] = useState(false);\r\n    const [errorTitleText, setErrorTitleText] = useState('');\r\n    const [errorBody, setErrorBody] = useState(false);\r\n    const [errorQuestions, setErrorQuestions] = useState(false);\r\n    const [errorQuestionsMessage, setErrorQuestionsMessage] = useState('');\r\n\r\n    let postReqBody = {\r\n        PAGE: pageID,\r\n        PAGE_TYPE: page_type,\r\n        PAGE_TITLE: title,\r\n        PAGE_BODY: bodyText,\r\n        SCENARIO: scenario_ID,\r\n        VERSION: version_ID,\r\n        NEXT_PAGE: next_page_id,\r\n        REFLECTION_QUESTIONS: questionsForReqBody,\r\n        X_COORDINATE: xCoord,\r\n        Y_COORDINATE: yCoord,\r\n    };\r\n\r\n    function handlePost(setPostValues, postReqBody, s_id, first_time) {\r\n        const endpoint = '/page?page_id=' + pageID;\r\n\r\n        function onSuccess(resp) {\r\n            const deleteEndPoint = '/page?page_id=' + pageID;\r\n            postReqBody.PAGE = resp.data.PAGE;\r\n            let newScenarioComponents = [...scenarioComponents];\r\n            let component = newScenarioComponents.find((x) => x.id === pageID);\r\n            component.id = resp.data.PAGE;\r\n            component.title = title;\r\n\r\n            setPageID(resp.data.PAGE);\r\n            setCurrentPageID(resp.data.PAGE);\r\n            setScenarioComponents(newScenarioComponents);\r\n            setSuccessBannerFade(true);\r\n            setSuccessBannerMessage('Successfully saved page!');\r\n            universalDelete(setDeleteValues, deleteEndPoint, null, null, {\r\n                PAGE: pageID,\r\n            });\r\n        }\r\n\r\n        function onFailure() {\r\n            setErrorBannerFade(true);\r\n            setErrorBannerMessage('Failed to save page! Please try again.');\r\n        }\r\n\r\n        let validInput = true;\r\n\r\n        if (!title || !title.trim()) {\r\n            setErrorTitle(true);\r\n            setErrorTitleText('Page title cannot be empty');\r\n            validInput = false;\r\n        } else if (title.length >= 1000) {\r\n            setErrorTitle(true);\r\n            setErrorTitleText('Page title must have less than 1000 characters');\r\n            validInput = false;\r\n        } else {\r\n            setErrorTitle(false);\r\n        }\r\n\r\n        if (!bodyText || !bodyText.trim()) {\r\n            setErrorBody(true);\r\n            validInput = false;\r\n        } else {\r\n            setErrorBody(false);\r\n        }\r\n\r\n        let error = false;\r\n        for (let i = 0; i < questions.length; i++) {\r\n            if (\r\n                !questions[i].REFLECTION_QUESTION ||\r\n                !questions[i].REFLECTION_QUESTION.trim()\r\n            ) {\r\n                setErrorQuestions(true);\r\n                setErrorQuestionsMessage(\r\n                    'At least one reflection question is blank'\r\n                );\r\n                validInput = false;\r\n                error = true;\r\n            }\r\n        }\r\n        if (!error) {\r\n            setErrorQuestions(false);\r\n        }\r\n\r\n        if (validInput) {\r\n            let trimmedQuestions = questions.map((obj) =>\r\n                obj.REFLECTION_QUESTION.trim()\r\n            );\r\n            let questionSet = new Set(trimmedQuestions);\r\n            if (trimmedQuestions.length > questionSet.size) {\r\n                setErrorQuestions(true);\r\n                setErrorQuestionsMessage(\r\n                    'You cannot have duplicate reflection questions'\r\n                );\r\n                validInput = false;\r\n            }\r\n        }\r\n\r\n        if (validInput) {\r\n            universalPost(\r\n                setPostValues,\r\n                endpoint,\r\n                onFailure,\r\n                onSuccess,\r\n                postReqBody\r\n            );\r\n        } else {\r\n            setErrorBannerFade(true);\r\n            setErrorBannerMessage(\r\n                'There are currently errors within your page. Please fix all errors in order to save.'\r\n            );\r\n        }\r\n    }\r\n\r\n    const setReqBodyNew = (qs) => {\r\n        let qsrb = [];\r\n        for (let i = 0; i < qs.length; i++) {\r\n            qsrb.push({ REFLECTION_QUESTION: qs[i] });\r\n        }\r\n\r\n        setQuestionsForReqBody(qsrb);\r\n    };\r\n\r\n    const savePage = () => {\r\n        handlePost(setPostValues, postReqBody, scenario_ID, false);\r\n    };\r\n\r\n    const [successBannerMessage, setSuccessBannerMessage] = useState('');\r\n    const [successBannerFade, setSuccessBannerFade] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setSuccessBannerFade(false);\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [successBannerFade]);\r\n\r\n    const [errorBannerMessage, setErrorBannerMessage] = useState('');\r\n    const [errorBannerFade, setErrorBannerFade] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setErrorBannerFade(false);\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [errorBannerFade]);\r\n\r\n    if (postValues.loading) {\r\n        return <LoadingSpinner />;\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\">\r\n            <div className={classes.bannerContainer}>\r\n                <SuccessBanner\r\n                    successMessage={successBannerMessage}\r\n                    fade={successBannerFade}\r\n                />\r\n                <ErrorBanner\r\n                    errorMessage={errorBannerMessage}\r\n                    fade={errorBannerFade}\r\n                />\r\n            </div>\r\n            <Typography align=\"center\" variant=\"h2\">\r\n                Reflection Component\r\n            </Typography>\r\n            <Title\r\n                title={title}\r\n                setTitle={setTitle}\r\n                error={errorTitle}\r\n                errorMessage={errorTitleText}\r\n            />\r\n            <Body\r\n                body={bodyText}\r\n                setBody={setBodyText}\r\n                error={errorBody}\r\n                errorMessage={'Page body cannot be empty'}\r\n            />\r\n            <QuestionFields\r\n                questions={questions}\r\n                setQuestions={setQuestions}\r\n                setReqBodyNew={setReqBodyNew}\r\n            />\r\n            {errorQuestions ? (\r\n                <Typography\r\n                    style={{ marginLeft: 50 }}\r\n                    variant=\"body1\"\r\n                    display=\"block\"\r\n                    color=\"error\"\r\n                >\r\n                    {errorQuestionsMessage}\r\n                </Typography>\r\n            ) : null}\r\n            <Button\r\n                className={classes.saveButton}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={savePage}\r\n            >\r\n                Save\r\n            </Button>\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Button, TextField, Typography, Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Body from '../GeneralPageComponents/Body';\r\nimport Title from '../GeneralPageComponents/Title';\r\nimport PropTypes from 'prop-types';\r\nimport universalPost from '../../../universalHTTPRequests/post.js';\r\nimport universalDelete from '../../../universalHTTPRequests/delete.js';\r\nimport SuccessBanner from '../../Banners/SuccessBanner';\r\nimport ErrorBanner from '../../Banners/ErrorBanner';\r\nimport LoadingSpinner from '../../LoadingSpinner';\r\n\r\nAction.propTypes = {\r\n    scenarioComponents: PropTypes.any,\r\n    setScenarioComponents: PropTypes.any,\r\n    setCurrentPageID: PropTypes.any,\r\n    page_id: PropTypes.any,\r\n    page_type: PropTypes.any,\r\n    page_title: PropTypes.any,\r\n    scenario_ID: PropTypes.any,\r\n    version_ID: PropTypes.any,\r\n    next_page_id: PropTypes.any,\r\n    body: PropTypes.any,\r\n    bodies: PropTypes.any,\r\n    xCoord: PropTypes.any,\r\n    yCoord: PropTypes.any,\r\n    choice1: PropTypes.any,\r\n    choice2: PropTypes.any,\r\n    r1: PropTypes.any,\r\n    r2: PropTypes.any,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    form: {\r\n        marginTop: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n    submit: {\r\n        marginTop: theme.spacing(2),\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: 'white',\r\n        textTransform: 'unset',\r\n    },\r\n    saveButton: {\r\n        margin: theme.spacing(2),\r\n        float: 'right',\r\n        textTransform: 'unset',\r\n    },\r\n    bannerContainer: {\r\n        marginTop: theme.spacing(1),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n}));\r\n\r\nexport default function Action(props) {\r\n    const classes = useStyles();\r\n    const {\r\n        scenarioComponents,\r\n        setScenarioComponents,\r\n        setCurrentPageID,\r\n        page_id,\r\n        page_type,\r\n        page_title,\r\n        scenario_ID,\r\n        next_page_id,\r\n        body,\r\n        choice1,\r\n        choice2,\r\n        xCoord,\r\n        yCoord,\r\n    } = props;\r\n\r\n    const [postValues, setPostValues] = useState({\r\n        data: null,\r\n        loading: false,\r\n        error: null,\r\n    });\r\n    // eslint-disable-next-line\r\n    const [deleteValues, setDeleteValues] = useState({\r\n        data: null,\r\n        loading: false,\r\n        error: null,\r\n    });\r\n\r\n    const [pageID, setPageID] = useState(page_id);\r\n    const [title, setTitle] = useState(page_title);\r\n    const [bodyText, setBodyText] = useState(body);\r\n    const [option1, setOption1] = useState(choice1);\r\n    const [option2, setOption2] = useState(choice2);\r\n\r\n    const [errorTitle, setErrorTitle] = useState(false);\r\n    const [errorTitleText, setErrorTitleText] = useState(false);\r\n    const [errorBody, setErrorBody] = useState(false);\r\n    const [errorOption1, setErrorOption1] = useState(false);\r\n    const [errorOption1Text, setErrorOption1Text] = useState(false);\r\n    const [errorOption2, setErrorOption2] = useState(false);\r\n    const [errorOption2Text, setErrorOption2Text] = useState(false);\r\n\r\n    var postReqBody = {\r\n        PAGE: pageID,\r\n        PAGE_TYPE: page_type,\r\n        PAGE_TITLE: title,\r\n        PAGE_BODY: bodyText,\r\n        SCENARIO: scenario_ID,\r\n        NEXT_PAGE: next_page_id,\r\n        CHOICES: [\r\n            { CHOICE: option1, RESULT_PAGE: null },\r\n            { CHOICE: option2, RESULT_PAGE: null },\r\n        ],\r\n        X_COORDINATE: xCoord,\r\n        Y_COORDINATE: yCoord,\r\n    };\r\n\r\n    function handlePost(setPostValues, postReqBody, s_id, first_time) {\r\n        const endpoint = '/page?page_id=' + pageID;\r\n\r\n        function onSuccess(resp) {\r\n            const deleteEndPoint = '/page?page_id=' + pageID;\r\n            let newScenarioComponents = [...scenarioComponents];\r\n            let component = newScenarioComponents.find((x) => x.id === pageID);\r\n            component.id = resp.data.PAGE;\r\n            component.title = title;\r\n            setPageID(resp.data.PAGE);\r\n            setCurrentPageID(resp.data.PAGE);\r\n            setScenarioComponents(newScenarioComponents);\r\n            setSuccessBannerFade(true);\r\n            setSuccessBannerMessage('Successfully saved page!');\r\n            universalDelete(setDeleteValues, deleteEndPoint, null, null, {\r\n                PAGE: pageID,\r\n            });\r\n        }\r\n\r\n        function onFailure() {\r\n            setErrorBannerFade(true);\r\n            setErrorBannerMessage('Failed to save page! Please try again.');\r\n        }\r\n\r\n        let validInput = true;\r\n\r\n        if (!title || !title.trim()) {\r\n            setErrorTitle(true);\r\n            setErrorTitleText('Page title cannot be empty');\r\n            validInput = false;\r\n        } else if (title.length >= 1000) {\r\n            setErrorTitle(true);\r\n            setErrorTitleText('Page title must have less than 1000 characters');\r\n            validInput = false;\r\n        } else {\r\n            setErrorTitle(false);\r\n        }\r\n\r\n        if (!bodyText || !bodyText.trim()) {\r\n            setErrorBody(true);\r\n            validInput = false;\r\n        } else {\r\n            setErrorBody(false);\r\n        }\r\n\r\n        if (!option1 || !option1.trim()) {\r\n            setErrorOption1(true);\r\n            setErrorOption1Text('Option cannot be empty');\r\n            validInput = false;\r\n        } else if (option1.length >= 1000) {\r\n            setErrorOption1(true);\r\n            setErrorOption1Text('Option must have less than 1000 characters');\r\n            validInput = false;\r\n        } else {\r\n            setErrorOption1(false);\r\n        }\r\n\r\n        if (!option2 || !option2.trim()) {\r\n            setErrorOption2(true);\r\n            setErrorOption2Text('Option cannot be empty');\r\n            validInput = false;\r\n        } else if (option2.length >= 1000) {\r\n            setErrorOption2(true);\r\n            setErrorOption2Text('Option must have less than 1000 characters');\r\n            validInput = false;\r\n        } else {\r\n            setErrorOption2(false);\r\n        }\r\n\r\n        if (option1 && option2 && option1.trim() === option2.trim()) {\r\n            setErrorOption1(true);\r\n            setErrorOption1Text('Option1 cannot be the same as Option2');\r\n            setErrorOption2(true);\r\n            setErrorOption2Text('Option1 cannot be the same as Option2');\r\n            validInput = false;\r\n        }\r\n\r\n        if (validInput) {\r\n            universalPost(\r\n                setPostValues,\r\n                endpoint,\r\n                onFailure,\r\n                onSuccess,\r\n                postReqBody\r\n            );\r\n        } else {\r\n            setErrorBannerFade(true);\r\n            setErrorBannerMessage(\r\n                'There are currently errors within your page. Please fix all errors in order to save.'\r\n            );\r\n        }\r\n    }\r\n\r\n    const onChangeOption1 = (event) => {\r\n        setOption1(event.target.value);\r\n    };\r\n\r\n    const onChangeOption2 = (event) => {\r\n        setOption2(event.target.value);\r\n    };\r\n\r\n    const savePage = () => {\r\n        handlePost(setPostValues, postReqBody, scenario_ID, false);\r\n    };\r\n\r\n    const [successBannerMessage, setSuccessBannerMessage] = useState('');\r\n    const [successBannerFade, setSuccessBannerFade] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setSuccessBannerFade(false);\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [successBannerFade]);\r\n\r\n    const [errorBannerMessage, setErrorBannerMessage] = useState('');\r\n    const [errorBannerFade, setErrorBannerFade] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setErrorBannerFade(false);\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [errorBannerFade]);\r\n\r\n    if (postValues.loading) {\r\n        return <LoadingSpinner />;\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\">\r\n            <div className={classes.bannerContainer}>\r\n                <SuccessBanner\r\n                    successMessage={successBannerMessage}\r\n                    fade={successBannerFade}\r\n                />\r\n                <ErrorBanner\r\n                    errorMessage={errorBannerMessage}\r\n                    fade={errorBannerFade}\r\n                />\r\n            </div>\r\n            <Typography align=\"center\" variant=\"h2\">\r\n                Action Component\r\n            </Typography>\r\n            <Title\r\n                title={title}\r\n                setTitle={setTitle}\r\n                error={errorTitle}\r\n                errorMessage={errorTitleText}\r\n            />\r\n            <Body\r\n                body={bodyText}\r\n                setBody={setBodyText}\r\n                error={errorBody}\r\n                errorMessage={'Page body cannot be empty.'}\r\n            />\r\n            <div className={classes.container}>\r\n                <form className={classes.form}>\r\n                    <Typography align=\"center\" variant=\"h6\">\r\n                        Option 1\r\n                    </Typography>\r\n                    {errorOption1 ? (\r\n                        <TextField\r\n                            error\r\n                            helperText={errorOption1Text}\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"option 1\"\r\n                            label=\"Input Option 1 Text\"\r\n                            name=\"option 1\"\r\n                            value={option1}\r\n                            onChange={onChangeOption1}\r\n                        />\r\n                    ) : (\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"option 1\"\r\n                            label=\"Input Option 1 Text\"\r\n                            name=\"option 1\"\r\n                            value={option1}\r\n                            onChange={onChangeOption1}\r\n                        />\r\n                    )}\r\n                    <Typography align=\"center\" variant=\"h6\">\r\n                        Option 2\r\n                    </Typography>\r\n                    {errorOption2 ? (\r\n                        <TextField\r\n                            error\r\n                            helperText={errorOption2Text}\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"option 2\"\r\n                            label=\"Input Option 2 Text\"\r\n                            name=\"option 2\"\r\n                            value={option2}\r\n                            onChange={onChangeOption2}\r\n                        />\r\n                    ) : (\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"option 2\"\r\n                            label=\"Input Option 2 Text\"\r\n                            name=\"option 2\"\r\n                            value={option2}\r\n                            onChange={onChangeOption2}\r\n                        />\r\n                    )}\r\n                    <Button\r\n                        className={classes.saveButton}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={savePage}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Body from '../GeneralPageComponents/Body';\r\nimport Title from '../GeneralPageComponents/Title';\r\nimport { Typography, Container, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport universalPost from '../../../universalHTTPRequests/post.js';\r\nimport universalDelete from '../../../universalHTTPRequests/delete.js';\r\nimport SuccessBanner from '../../Banners/SuccessBanner';\r\nimport ErrorBanner from '../../Banners/ErrorBanner';\r\nimport LoadingSpinner from '../../LoadingSpinner';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    saveButton: {\r\n        margin: theme.spacing(2),\r\n        float: 'right',\r\n        textTransform: 'unset',\r\n    },\r\n    bannerContainer: {\r\n        marginTop: theme.spacing(1),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n}));\r\n\r\nIntroduction.propTypes = {\r\n    scenarioComponents: PropTypes.any,\r\n    setScenarioComponents: PropTypes.any,\r\n    setCurrentPageID: PropTypes.any,\r\n    page_id: PropTypes.any,\r\n    page_type: PropTypes.any,\r\n    page_title: PropTypes.any,\r\n    scenario_ID: PropTypes.any,\r\n    version_ID: PropTypes.any,\r\n    next_page_id: PropTypes.any,\r\n    body: PropTypes.any,\r\n    bodies: PropTypes.any,\r\n    xCoord: PropTypes.any,\r\n    yCoord: PropTypes.any,\r\n};\r\n\r\nexport default function Introduction(props) {\r\n    const {\r\n        scenarioComponents,\r\n        setScenarioComponents,\r\n        setCurrentPageID,\r\n        page_id,\r\n        page_type,\r\n        page_title,\r\n        scenario_ID,\r\n        next_page_id,\r\n        body,\r\n        bodies,\r\n        xCoord,\r\n        yCoord,\r\n    } = props;\r\n\r\n    // eslint-disable-next-line\r\n    const [postValues, setPostValues] = useState({\r\n        data: null,\r\n        loading: false,\r\n        error: null,\r\n    });\r\n    // eslint-disable-next-line\r\n    const [deleteValues, setDeleteValues] = useState({\r\n        data: null,\r\n        loading: false,\r\n        error: null,\r\n    });\r\n\r\n    const classes = useStyles();\r\n    const [pageID, setPageID] = useState(page_id);\r\n    const [title, setTitle] = useState(page_title);\r\n    const [bodyText, setBodyText] = useState(body);\r\n    // eslint-disable-next-line\r\n    const [bodiesText, setBodiesText] = useState(bodies);\r\n    const [errorTitle, setErrorTitle] = useState(false);\r\n    const [errorTitleText, setErrorTitleText] = useState(false);\r\n    const [errorBody, setErrorBody] = useState(false);\r\n\r\n    var postReqBody = {\r\n        PAGE_TYPE: page_type,\r\n        PAGE_TITLE: title,\r\n        PAGE_BODY: bodyText,\r\n        SCENARIO: scenario_ID,\r\n        NEXT_PAGE: next_page_id,\r\n        BODIES: bodiesText,\r\n        X_COORDINATE: xCoord,\r\n        Y_COORDINATE: yCoord,\r\n    };\r\n\r\n    function handlePost(setPostValues, postReqBody, s_id, first_time) {\r\n        const endpoint = '/page?page_id=' + pageID;\r\n\r\n        function onSuccess(resp) {\r\n            const deleteEndPoint = '/page?page_id=' + pageID;\r\n            let newScenarioComponents = [...scenarioComponents];\r\n            let component = newScenarioComponents.find((x) => x.id === pageID);\r\n            component.id = resp.data.PAGE;\r\n            component.title = title;\r\n            setPageID(resp.data.PAGE);\r\n            setCurrentPageID(resp.data.PAGE);\r\n            setScenarioComponents(newScenarioComponents);\r\n            setSuccessBannerFade(true);\r\n            setSuccessBannerMessage('Successfully saved page!');\r\n            universalDelete(setDeleteValues, deleteEndPoint, null, null, {\r\n                PAGE: pageID,\r\n            });\r\n        }\r\n\r\n        function onFailure() {\r\n            setErrorBannerFade(true);\r\n            setErrorBannerMessage('Failed to save page! Please try again.');\r\n        }\r\n\r\n        let validInput = true;\r\n\r\n        if (!title || !title.trim()) {\r\n            setErrorTitle(true);\r\n            setErrorTitleText('Page title cannot be empty');\r\n            validInput = false;\r\n        } else if (title.trim().length >= 1000) {\r\n            setErrorTitle(true);\r\n            setErrorTitleText('Page title must have less than 1000 characters');\r\n            validInput = false;\r\n        } else {\r\n            setErrorTitle(false);\r\n        }\r\n\r\n        if (!bodyText || !bodyText.trim()) {\r\n            setErrorBody(true);\r\n            validInput = false;\r\n        } else {\r\n            setErrorBody(false);\r\n        }\r\n\r\n        if (validInput) {\r\n            universalPost(\r\n                setPostValues,\r\n                endpoint,\r\n                onFailure,\r\n                onSuccess,\r\n                postReqBody\r\n            );\r\n        } else {\r\n            setErrorBannerFade(true);\r\n            setErrorBannerMessage(\r\n                'There are currently errors within your page. Please fix all errors in order to save.'\r\n            );\r\n        }\r\n    }\r\n\r\n    const savePage = () => {\r\n        handlePost(setPostValues, postReqBody, scenario_ID, false);\r\n    };\r\n\r\n    const [successBannerMessage, setSuccessBannerMessage] = useState('');\r\n    const [successBannerFade, setSuccessBannerFade] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setSuccessBannerFade(false);\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [successBannerFade]);\r\n\r\n    const [errorBannerMessage, setErrorBannerMessage] = useState('');\r\n    const [errorBannerFade, setErrorBannerFade] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setErrorBannerFade(false);\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [errorBannerFade]);\r\n\r\n    if (postValues.loading) {\r\n        return <LoadingSpinner />;\r\n    }\r\n\r\n    //TODO information list\r\n    return (\r\n        <Container component=\"main\">\r\n            <div className={classes.bannerContainer}>\r\n                <SuccessBanner\r\n                    successMessage={successBannerMessage}\r\n                    fade={successBannerFade}\r\n                />\r\n                <ErrorBanner\r\n                    errorMessage={errorBannerMessage}\r\n                    fade={errorBannerFade}\r\n                />\r\n            </div>\r\n            <Typography align=\"center\" variant=\"h2\">\r\n                Introduction Page\r\n            </Typography>\r\n            <Title\r\n                title={title}\r\n                setTitle={setTitle}\r\n                error={errorTitle}\r\n                errorMessage={errorTitleText}\r\n            />\r\n            <Body\r\n                body={bodyText}\r\n                setBody={setBodyText}\r\n                error={errorBody}\r\n                errorMessage={'Page body cannot be empty.'}\r\n            />\r\n            <Button\r\n                className={classes.saveButton}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={savePage}\r\n            >\r\n                Save\r\n            </Button>\r\n        </Container>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Handle } from 'react-flow-renderer';\r\n\r\nexport function actionNode({ data }) {\r\n    return (\r\n        <>\r\n            <Handle\r\n                type=\"target\"\r\n                position=\"top\"\r\n                onConnect={(params) => console.log('handle onConnect', params)}\r\n            />\r\n            {data.label}\r\n            <Handle\r\n                type=\"source\"\r\n                position=\"bottom\"\r\n                id=\"a\"\r\n                style={{ left: '20%' }}\r\n            />\r\n            <Handle\r\n                type=\"source\"\r\n                position=\"bottom\"\r\n                id=\"b\"\r\n                style={{ left: '80%' }}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport function introNode({ data }) {\r\n    return (\r\n        <>\r\n            {data.label}\r\n            <Handle type=\"source\" position=\"bottom\" />\r\n        </>\r\n    );\r\n}\r\n\r\nexport function reflectionNode({ data }) {\r\n    return (\r\n        <>\r\n            <Handle type=\"target\" position=\"top\" />\r\n            {data.label}\r\n            <Handle type=\"source\" position=\"bottom\" />\r\n        </>\r\n    );\r\n}\r\n\r\nexport function genericNode({ data }) {\r\n    return (\r\n        <>\r\n            <Handle type=\"target\" position=\"top\" />\r\n            {data.label}\r\n            <Handle type=\"source\" position=\"bottom\" />\r\n        </>\r\n    );\r\n}\r\n\r\nexport function conversationNode({ data }) {\r\n    return (\r\n        <>\r\n            <Handle type=\"target\" position=\"top\" />\r\n            {'Stakeholder Conversations'}\r\n            <Handle type=\"source\" position=\"bottom\" />\r\n        </>\r\n    );\r\n}\r\n","export default function addEdge(params, elements) {\r\n    const { source, target } = params;\r\n    const id = 'edge-' + source + '-' + target;\r\n    //Node path to itself\r\n    if (source === target) {\r\n        return elements;\r\n    }\r\n    //Edge already exists\r\n    if (elements.find((elements) => elements.id === id)) {\r\n        return elements;\r\n    }\r\n    //Source already has an edge (A source node can't link to 2 different pages)\r\n    if (elements.find((elements) => elements.source === source)) {\r\n        return elements;\r\n    }\r\n    const newEdge = {\r\n        id,\r\n        source,\r\n        target,\r\n        arrowHeadType: 'arrowclosed',\r\n        style: { strokeWidth: '5px', arrowWidth: '2px' },\r\n    };\r\n    return elements.concat(newEdge);\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Typography,\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogTitle,\r\n    DialogContent,\r\n} from '@material-ui/core';\r\nimport ReactFlow, {\r\n    removeElements,\r\n    isEdge,\r\n    isNode,\r\n    MiniMap,\r\n    Controls,\r\n    Background,\r\n} from 'react-flow-renderer';\r\nimport initializeElements from './HelperFunctions/initializeElements';\r\nimport {\r\n    actionNode,\r\n    reflectionNode,\r\n    genericNode,\r\n    conversationNode,\r\n    introNode,\r\n} from './HelperFunctions/node';\r\nimport addEdge from './HelperFunctions/addEdge';\r\nimport get from './../../../universalHTTPRequests/get';\r\nimport put from './../../../universalHTTPRequests/put';\r\nimport LoadingSpinner from '../../LoadingSpinner';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport SuccessBanner from '../../Banners/SuccessBanner';\r\nimport ErrorBanner from '../../Banners/ErrorBanner';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    errorContainer: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        height: '90vh',\r\n    },\r\n    margin: {\r\n        marginBottom: '15px',\r\n    },\r\n    title: {\r\n        textAlign: 'center',\r\n    },\r\n    copyright: {\r\n        margin: theme.spacing(2),\r\n    },\r\n    buttonContainer: {\r\n        display: 'flex',\r\n        float: 'right',\r\n        flexDirection: 'column',\r\n    },\r\n    button: {\r\n        zIndex: 5,\r\n        float: 'right',\r\n    },\r\n    iconError: {\r\n        fontSize: '75px',\r\n    },\r\n    iconRefreshLarge: {\r\n        fontSize: '75px',\r\n    },\r\n    iconRefreshSmall: {\r\n        fontSize: '30px',\r\n    },\r\n}));\r\n\r\n//Needs scenario id\r\nconst endpointGET = '/flowchart?scenario_id=';\r\n//Needs scenario id\r\nconst endpointPUT = '/flowchart?scenario_id=';\r\n\r\nFlowDiagram.propTypes = {\r\n    scenario_ID: PropTypes.number,\r\n};\r\n\r\nexport default function FlowDiagram({ scenario_ID }) {\r\n    const scenarioID = scenario_ID;\r\n    const classes = useStyles();\r\n    const [fetchedElements, setFetchedElements] = useState({\r\n        data: null,\r\n        loading: true,\r\n        error: null,\r\n    });\r\n\r\n    const [elementsPUT, setElementsPUT] = useState({\r\n        data: null,\r\n        loading: false,\r\n        error: null,\r\n    });\r\n\r\n    const [elements, setElements] = useState([]);\r\n    const [unsaved, setUnsaved] = useState(false);\r\n    const [errorText, setErrorText] = useState('');\r\n\r\n    function positionElements(elements) {\r\n        let introductionElement = elements.filter((componentData) => {\r\n            return componentData.PAGE_TYPE === 'I';\r\n        });\r\n        let genericElements = elements.filter((componentData) => {\r\n            return componentData.PAGE_TYPE === 'G';\r\n        });\r\n        let reflectionElements = elements.filter((componentData) => {\r\n            return componentData.PAGE_TYPE === 'R';\r\n        });\r\n        let actionElements = elements.filter((componentData) => {\r\n            return componentData.PAGE_TYPE === 'A';\r\n        });\r\n        let stakeholderConversationElement = elements.filter(\r\n            (componentData) => {\r\n                return componentData.PAGE_TYPE === 'S';\r\n            }\r\n        );\r\n\r\n        let edges = elements.filter((componentData) => {\r\n            return isEdge(componentData);\r\n        });\r\n\r\n        let initialElements = introductionElement.concat(\r\n            genericElements,\r\n            reflectionElements,\r\n            actionElements,\r\n            stakeholderConversationElement,\r\n            edges\r\n        );\r\n\r\n        initialElements = initialElements.map((componentData) => {\r\n            return initializeElements(componentData);\r\n        });\r\n\r\n        //Set position of elements if elements are new ({x: 0,y: 0})\r\n        //Height of nodes are 51.2 pixels\r\n        initialElements.reduce((acc, currentValue) => {\r\n            if (\r\n                currentValue.position.x === 0 &&\r\n                currentValue.position.y === 0\r\n            ) {\r\n                currentValue.position.y += acc;\r\n                return acc + 51.2;\r\n            }\r\n            return acc;\r\n        }, 0);\r\n\r\n        return initialElements;\r\n    }\r\n\r\n    function addEdges(elements) {\r\n        //Add edges\r\n        elements.forEach((currentElement) => {\r\n            //TODO\r\n            if (currentElement.type === 'actionNode') {\r\n                if (!currentElement.ACTION[0]) {\r\n                    // eslint-disable-next-line\r\n                    throw 'Action incomplete';\r\n                }\r\n                //Only 2 action options\r\n                if (currentElement.ACTION[0].RESULT_PAGE) {\r\n                    elements = addEdge(\r\n                        {\r\n                            source: currentElement.id.toString() + '__a',\r\n                            target: currentElement.ACTION[0].RESULT_PAGE.toString(),\r\n                        },\r\n                        elements\r\n                    );\r\n                }\r\n                if (currentElement.ACTION[1].RESULT_PAGE) {\r\n                    elements = addEdge(\r\n                        {\r\n                            source: currentElement.id.toString() + '__b',\r\n                            target: currentElement.ACTION[1].RESULT_PAGE.toString(),\r\n                        },\r\n                        elements\r\n                    );\r\n                }\r\n            } else if (currentElement.NEXT_PAGE) {\r\n                elements = addEdge(\r\n                    {\r\n                        source: currentElement.id.toString(),\r\n                        target: currentElement.NEXT_PAGE.toString(),\r\n                    },\r\n                    elements\r\n                );\r\n            }\r\n        });\r\n\r\n        return elements;\r\n    }\r\n\r\n    let getData = () => {\r\n        setUnsaved(false);\r\n        function onSuccess(resp) {\r\n            setElements(addEdges(positionElements(resp.data)));\r\n        }\r\n        function onError(resp) {\r\n            if (resp === 'Action incomplete') {\r\n                setErrorText(\r\n                    'You have at least one Action page that is incomplete (i.e. without options). You must complete all action pages before you can access the Flow Diagram.'\r\n                );\r\n            } else {\r\n                setErrorText('Unable to fetch Flow Diagram! Please try again.');\r\n            }\r\n        }\r\n        get(setFetchedElements, endpointGET + scenarioID, onError, onSuccess);\r\n    };\r\n\r\n    useEffect(getData, []);\r\n\r\n    const [isRemoveButtonDisabled, setIsRemoveButtonDisabled] = useState(true);\r\n    const [currentEdgeSelected, setCurrentEdgeSelected] = useState();\r\n\r\n    const nodeTypes = {\r\n        actionNode: actionNode,\r\n        reflectionNode: reflectionNode,\r\n        genericNode: genericNode,\r\n        introNode: introNode,\r\n        conversationNode: conversationNode,\r\n    };\r\n\r\n    //Height and Width of flow diagram\r\n    const graphStyles = { width: '100%', height: '100%', border: 'solid' };\r\n\r\n    const onConnect = (params) => {\r\n        setUnsaved(true);\r\n        setElements((elements) => addEdge(params, elements));\r\n    };\r\n\r\n    const onRemoveEdge = (params, element) => {\r\n        if (isEdge(element)) {\r\n            setIsRemoveButtonDisabled(false);\r\n            setCurrentEdgeSelected([element]);\r\n        }\r\n    };\r\n\r\n    const deleteEdge = () => {\r\n        setUnsaved(true);\r\n        if (currentEdgeSelected != null) {\r\n            setElements((elements) =>\r\n                removeElements(currentEdgeSelected, elements)\r\n            );\r\n            setCurrentEdgeSelected(null);\r\n            setIsRemoveButtonDisabled(true);\r\n        }\r\n    };\r\n\r\n    //Update of nodes position\r\n    const onNodeDrag = (event, element) => {\r\n        setUnsaved(true);\r\n        //ID's in flow diagram library are stored as strings\r\n        const index = elements.findIndex(\r\n            (ele) => ele.id === Number(element.id)\r\n        );\r\n        // important to create a copy, otherwise you'll modify state outside of setState call\r\n        let elementsCopy = [...elements];\r\n        elementsCopy[index] = {\r\n            ...elementsCopy[index],\r\n            position: element.position,\r\n        };\r\n        setElements(elementsCopy);\r\n    };\r\n\r\n    const save = () => {\r\n        function onSuccess() {\r\n            let resetElements = elements.reduce((array, currentElement) => {\r\n                if (isNode(currentElement) && currentElement.position.x === 0) {\r\n                    return array.concat({\r\n                        ...currentElement,\r\n                        X_COORDINATE: 0,\r\n                        Y_COORDINATE: 0,\r\n                        position: { x: 0, y: 0 },\r\n                    });\r\n                }\r\n                return array.concat(currentElement);\r\n            }, []);\r\n            setElements(positionElements(resetElements));\r\n            setUnsaved(false);\r\n            setSuccessBannerFade(true);\r\n            setSuccessBannerMessage('Successfully Saved!');\r\n        }\r\n\r\n        function onError() {\r\n            setErrorBannerFade(true);\r\n            setErrorBannerMessage('Failed to Save!');\r\n        }\r\n\r\n        const updatedElements = elements.reduce((array, currentElement) => {\r\n            if (isNode(currentElement)) {\r\n                let nodeElement = {\r\n                    PAGE: currentElement.PAGE,\r\n                    PAGE_TYPE: currentElement.PAGE_TYPE,\r\n                    PAGE_TITLE: currentElement.PAGE_TITLE,\r\n                    PAGE_BODY: currentElement.PAGE_BODY,\r\n                    SCENARIO: currentElement.SCENARIO_id,\r\n                    VERSION: currentElement.VERSION,\r\n                    NEXT_PAGE: null,\r\n                    X_COORDINATE: Math.floor(currentElement.position.x),\r\n                    Y_COORDINATE:\r\n                        Math.floor(currentElement.position.x) !== 0\r\n                            ? Math.floor(currentElement.position.y)\r\n                            : 0,\r\n                };\r\n\r\n                if (currentElement.type === 'actionNode') {\r\n                    nodeElement.ACTION = currentElement.ACTION.map(\r\n                        (actionData) => {\r\n                            return {\r\n                                id: actionData.id,\r\n                                PAGE: actionData.PAGE_id,\r\n                                CHOICE: actionData.CHOICE,\r\n                                RESULT_PAGE: null,\r\n                            };\r\n                        }\r\n                    );\r\n\r\n                    elements.forEach((currElement) => {\r\n                        //First option\r\n                        if (\r\n                            isEdge(currElement) &&\r\n                            currElement.source === currentElement.id + '__a'\r\n                        ) {\r\n                            nodeElement.ACTION[0] = {\r\n                                id: currentElement.ACTION[0].id,\r\n                                CHOICE: currentElement.ACTION[0].CHOICE,\r\n                                PAGE: currentElement.id,\r\n                                RESULT_PAGE: Number(currElement.target),\r\n                            };\r\n                            //Second option\r\n                        } else if (\r\n                            isEdge(currElement) &&\r\n                            currElement.source === currentElement.id + '__b'\r\n                        ) {\r\n                            nodeElement.ACTION[1] = {\r\n                                id: currentElement.ACTION[1].id,\r\n                                CHOICE: currentElement.ACTION[1].CHOICE,\r\n                                PAGE: currentElement.id,\r\n                                RESULT_PAGE: Number(currElement.target),\r\n                            };\r\n                        }\r\n                    });\r\n                } else {\r\n                    //Set next page ID for all other node types\r\n                    elements.some((currElement) => {\r\n                        //currElement.source is type string, convert to number\r\n                        if (\r\n                            isEdge(currElement) &&\r\n                            Number(currElement.source) === currentElement.id\r\n                        ) {\r\n                            //Set NEXT_PAGE id to type number\r\n                            nodeElement.NEXT_PAGE = Number(currElement.target);\r\n                            return true;\r\n                        }\r\n                        return false;\r\n                    });\r\n                }\r\n                return array.concat(nodeElement);\r\n            }\r\n            return array;\r\n        }, []);\r\n\r\n        put(\r\n            setElementsPUT,\r\n            endpointPUT + scenarioID,\r\n            onError,\r\n            onSuccess,\r\n            updatedElements\r\n        );\r\n    };\r\n\r\n    const [successBannerFade, setSuccessBannerFade] = useState(false);\r\n    const [successBannerMessage, setSuccessBannerMessage] = useState('');\r\n    const [errorBannerFade, setErrorBannerFade] = useState(false);\r\n    const [errorBannerMessage, setErrorBannerMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setSuccessBannerFade(false);\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [successBannerFade]);\r\n\r\n    //RESET Pop-up Dialog\r\n    const [openReset, setOpenReset] = useState(false);\r\n    const [openRefresh, setOpenRefresh] = useState(false);\r\n\r\n    const refresh = () => {\r\n        if (unsaved) {\r\n            setOpenRefresh(true);\r\n        } else {\r\n            getData();\r\n        }\r\n    };\r\n\r\n    const handleCloseRefresh = (refresh) => {\r\n        setOpenRefresh(false);\r\n        //remove all edges and reset x and y coordinates to 0\r\n        if (refresh) {\r\n            getData();\r\n        }\r\n    };\r\n\r\n    const handleClickOpenReset = () => {\r\n        setOpenReset(true);\r\n    };\r\n\r\n    const handleCloseReset = (reset) => {\r\n        setOpenReset(false);\r\n        //remove all edges and reset x and y coordinates to 0\r\n        if (reset) {\r\n            setUnsaved(true);\r\n            let resetElements = elements.reduce((array, currentElement) => {\r\n                if (isNode(currentElement)) {\r\n                    return array.concat({\r\n                        ...currentElement,\r\n                        NEXT_PAGE: null,\r\n                        X_COORDINATE: 0,\r\n                        Y_COORDINATE: 0,\r\n                        position: { x: 0, y: 0 },\r\n                    });\r\n                }\r\n                return array;\r\n            }, []);\r\n            setElements(positionElements(resetElements));\r\n        }\r\n    };\r\n\r\n    ConfirmationDialog.propTypes = {\r\n        onClose: PropTypes.any,\r\n        open: PropTypes.bool,\r\n        title: PropTypes.string,\r\n        content: PropTypes.string,\r\n    };\r\n\r\n    function ConfirmationDialog({ onClose, open, title, content }) {\r\n        const handleCancel = () => {\r\n            onClose();\r\n        };\r\n\r\n        const handleOk = () => {\r\n            onClose(true);\r\n        };\r\n\r\n        return (\r\n            <Dialog\r\n                disableBackdropClick\r\n                disableEscapeKeyDown\r\n                maxWidth=\"xs\"\r\n                aria-labelledby=\"confirmation-dialog-title\"\r\n                open={open}\r\n            >\r\n                <DialogTitle id=\"confirmation-dialog-title\">\r\n                    {title}\r\n                </DialogTitle>\r\n                <DialogContent dividers>\r\n                    <Typography>{content}</Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={handleCancel} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleOk} color=\"primary\">\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n    if (fetchedElements.loading || elementsPUT.loading) {\r\n        return <LoadingSpinner />;\r\n    }\r\n\r\n    if (fetchedElements.error) {\r\n        return (\r\n            <div className={classes.errorContainer}>\r\n                <div className={classes.container}>\r\n                    <ErrorIcon className={classes.iconError} />\r\n                    <Typography align=\"center\" variant=\"h5\">\r\n                        {errorText}\r\n                    </Typography>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={getData}\r\n                    >\r\n                        <RefreshIcon className={classes.iconRefreshLarge} />\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <Typography variant=\"h3\">Order Scenario Pages</Typography>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={refresh}\r\n                className={classes.margin}\r\n            >\r\n                <RefreshIcon className={classes.iconRefreshSmall} />\r\n            </Button>\r\n            {unsaved ? (\r\n                <Typography variant=\"h6\" align=\"center\" color=\"error\">\r\n                    Unsaved\r\n                </Typography>\r\n            ) : null}\r\n            <SuccessBanner\r\n                successMessage={successBannerMessage}\r\n                fade={successBannerFade}\r\n            />\r\n            <ErrorBanner\r\n                errorMessage={errorBannerMessage}\r\n                fade={errorBannerFade}\r\n            />\r\n            <ConfirmationDialog\r\n                id=\"confirmRefresh\"\r\n                keepMounted\r\n                open={openRefresh}\r\n                onClose={handleCloseRefresh}\r\n                title={'Unsaved Changes'}\r\n                content={\r\n                    'You have unsaved changes. Would you still like to refresh?'\r\n                }\r\n            />\r\n            <ConfirmationDialog\r\n                id=\"confirmReset\"\r\n                keepMounted\r\n                open={openReset}\r\n                onClose={handleCloseReset}\r\n                title={'Reset Flow Diagram'}\r\n                content={'Would you like to reset the flow diagram?'}\r\n            />\r\n            <ReactFlow\r\n                elements={elements}\r\n                style={graphStyles}\r\n                onConnect={onConnect}\r\n                onElementClick={onRemoveEdge}\r\n                onNodeDragStop={onNodeDrag}\r\n                nodeTypes={nodeTypes}\r\n            >\r\n                <div className={classes.buttonContainer}>\r\n                    <Button\r\n                        className={classes.button}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={save}\r\n                    >\r\n                        <Typography variant=\"h6\" display=\"block\" noWrap>\r\n                            Save Changes\r\n                        </Typography>\r\n                    </Button>\r\n                    <Button\r\n                        className={classes.button}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleClickOpenReset}\r\n                    >\r\n                        <Typography variant=\"h6\" display=\"block\" noWrap>\r\n                            Reset\r\n                        </Typography>\r\n                    </Button>\r\n                    <Button\r\n                        className={classes.button}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={isRemoveButtonDisabled}\r\n                        onClick={deleteEdge}\r\n                    >\r\n                        <Typography variant=\"h6\" display=\"block\" noWrap>\r\n                            Remove Edge\r\n                        </Typography>\r\n                    </Button>\r\n                </div>\r\n                <MiniMap />\r\n                <Controls />\r\n                <Background />\r\n            </ReactFlow>\r\n        </div>\r\n    );\r\n}\r\n","export default function initializeElements(componentData) {\r\n    switch (componentData.PAGE_TYPE) {\r\n        case 'I':\r\n            return {\r\n                id: componentData.PAGE,\r\n                type: 'introNode',\r\n                data: { label: componentData.PAGE_TITLE },\r\n                style: {\r\n                    border: '3px solid orange',\r\n                    borderRadius: '5%',\r\n                    padding: 10,\r\n                },\r\n                position: {\r\n                    x: componentData.X_COORDINATE,\r\n                    y: componentData.Y_COORDINATE,\r\n                },\r\n                ...componentData,\r\n            };\r\n        case 'A':\r\n            return {\r\n                id: componentData.PAGE,\r\n                type: 'actionNode',\r\n                data: { label: componentData.PAGE_TITLE },\r\n                style: {\r\n                    border: '3px solid green',\r\n                    borderRadius: '5%',\r\n                    padding: 10,\r\n                },\r\n                position: {\r\n                    x: componentData.X_COORDINATE,\r\n                    y: componentData.Y_COORDINATE,\r\n                },\r\n                ...componentData,\r\n            };\r\n        case 'G':\r\n            return {\r\n                id: componentData.PAGE,\r\n                type: 'genericNode',\r\n                data: { label: componentData.PAGE_TITLE },\r\n                style: {\r\n                    border: '3px solid red',\r\n                    borderRadius: '5%',\r\n                    padding: 10,\r\n                },\r\n                position: {\r\n                    x: componentData.X_COORDINATE,\r\n                    y: componentData.Y_COORDINATE,\r\n                },\r\n                ...componentData,\r\n            };\r\n        case 'R':\r\n            return {\r\n                id: componentData.PAGE,\r\n                type: 'reflectionNode',\r\n                data: { label: componentData.PAGE_TITLE },\r\n                style: {\r\n                    border: '3px solid purple',\r\n                    borderRadius: '5%',\r\n                    padding: 10,\r\n                },\r\n                position: {\r\n                    x: componentData.X_COORDINATE,\r\n                    y: componentData.Y_COORDINATE,\r\n                },\r\n                ...componentData,\r\n            };\r\n        case 'S':\r\n            return {\r\n                id: componentData.PAGE,\r\n                type: 'conversationNode',\r\n                data: { label: componentData.PAGE_TITLE },\r\n                style: {\r\n                    border: '3px solid blue',\r\n                    borderRadius: '5%',\r\n                    padding: 10,\r\n                },\r\n                position: {\r\n                    x: componentData.X_COORDINATE,\r\n                    y: componentData.Y_COORDINATE,\r\n                },\r\n                ...componentData,\r\n            };\r\n        default:\r\n            return {\r\n                id: componentData.PAGE,\r\n                type: 'conversationNode',\r\n                data: { label: componentData.PAGE_TITLE },\r\n                style: {\r\n                    border: '3px solid blue',\r\n                    borderRadius: '5%',\r\n                    padding: 10,\r\n                },\r\n                position: {\r\n                    x: componentData.X_COORDINATE,\r\n                    y: componentData.Y_COORDINATE,\r\n                },\r\n                ...componentData,\r\n            };\r\n    }\r\n}\r\n","import React from 'react';\r\nimport SunEditor from 'suneditor-react';\r\nimport 'suneditor/dist/css/suneditor.min.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nEditedSunEditor.propTypes = {\r\n    setText: PropTypes.any,\r\n    text: PropTypes.string,\r\n};\r\n\r\nexport default function EditedSunEditor({ setText, text }) {\r\n    let handleChange = (content) => {\r\n        setText(content);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <SunEditor\r\n                setContents={text}\r\n                setOptions={{\r\n                    width: '100%',\r\n                    height: 150,\r\n                    placeholder: 'Enter in Introduction for Scenario Page...',\r\n                    buttonList: [\r\n                        ['font', 'fontSize', 'formatBlock'],\r\n                        ['paragraphStyle', 'blockquote'],\r\n                        [\r\n                            'bold',\r\n                            'underline',\r\n                            'italic',\r\n                            'strike',\r\n                            'subscript',\r\n                            'superscript',\r\n                        ],\r\n                        '/', // Line break\r\n                        ['undo', 'redo'],\r\n                        ['removeFormat'],\r\n                        ['outdent', 'indent'],\r\n                        ['align', 'horizontalRule', 'list', 'lineHeight'],\r\n                        ['preview'],\r\n                        // (min-width: 1200px)\r\n                        [\r\n                            '%1200',\r\n                            [\r\n                                ['undo', 'redo'],\r\n                                [\r\n                                    ':p-More Paragraph-default.more_paragraph',\r\n                                    'font',\r\n                                    'fontSize',\r\n                                    'formatBlock',\r\n                                    'paragraphStyle',\r\n                                    'blockquote',\r\n                                ],\r\n                                ['bold', 'underline', 'italic', 'strike'],\r\n                                [\r\n                                    ':t-More Text-default.more_text',\r\n                                    'subscript',\r\n                                    'superscript',\r\n                                    'fontColor',\r\n                                    'hiliteColor',\r\n                                    'textStyle',\r\n                                ],\r\n                                ['removeFormat'],\r\n                                ['outdent', 'indent'],\r\n                                [\r\n                                    ':e-More Line-default.more_horizontal',\r\n                                    'align',\r\n                                    'horizontalRule',\r\n                                    'list',\r\n                                    'lineHeight',\r\n                                ],\r\n                                [\r\n                                    '-right',\r\n                                    ':i-More Misc-default.more_vertical',\r\n                                    'fullScreen',\r\n                                    'showBlocks',\r\n                                    'codeView',\r\n                                    'preview',\r\n                                ],\r\n                                [\r\n                                    '-right',\r\n                                    ':r-More Rich-default.more_plus',\r\n                                    'table',\r\n                                    'link',\r\n                                    'image',\r\n                                    'video',\r\n                                    'audio',\r\n                                ],\r\n                            ],\r\n                        ],\r\n                        // (min-width: 875px)\r\n                        [\r\n                            '%875',\r\n                            [\r\n                                ['undo', 'redo'],\r\n                                [\r\n                                    ':p-More Paragraph-default.more_paragraph',\r\n                                    'font',\r\n                                    'fontSize',\r\n                                    'formatBlock',\r\n                                    'paragraphStyle',\r\n                                    'blockquote',\r\n                                ],\r\n                                [\r\n                                    ':t-More Text-default.more_text',\r\n                                    'bold',\r\n                                    'underline',\r\n                                    'italic',\r\n                                    'strike',\r\n                                    'subscript',\r\n                                    'superscript',\r\n                                    'fontColor',\r\n                                    'hiliteColor',\r\n                                    'textStyle',\r\n                                    'removeFormat',\r\n                                ],\r\n                                [\r\n                                    ':e-More Line-default.more_horizontal',\r\n                                    'outdent',\r\n                                    'indent',\r\n                                    'align',\r\n                                    'horizontalRule',\r\n                                    'list',\r\n                                    'lineHeight',\r\n                                ],\r\n                                [\r\n                                    ':r-More Rich-default.more_plus',\r\n                                    'table',\r\n                                    'link',\r\n                                    'image',\r\n                                    'video',\r\n                                    'audio',\r\n                                ],\r\n                                [\r\n                                    '-right',\r\n                                    ':i-More Misc-default.more_vertical',\r\n                                    'fullScreen',\r\n                                    'showBlocks',\r\n                                    'codeView',\r\n                                    'preview',\r\n                                ],\r\n                            ],\r\n                        ],\r\n                    ],\r\n                }}\r\n                onChange={handleChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport {\r\n    Select,\r\n    MenuItem,\r\n    Grid,\r\n    Button,\r\n    TextField,\r\n    Typography,\r\n    makeStyles,\r\n} from '@material-ui/core';\r\nimport EditedSunEditor from '../../components/EditedSunEditor';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    menuButton: {\r\n        margin: theme.spacing(2),\r\n    },\r\n    addButton: {\r\n        margin: theme.spacing(2),\r\n        float: 'right',\r\n        textTransform: 'unset',\r\n    },\r\n    selectMenu: {\r\n        minWidth: 200,\r\n        magin: theme.spacing(5),\r\n    },\r\n}));\r\n\r\nAddNewScenarioPageDialogBody.propTypes = {\r\n    setOpenPopup: PropTypes.any.isRequired,\r\n    addPage: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default function AddNewScenarioPageDialogBody(props) {\r\n    const classes = useStyles();\r\n    AddNewScenarioPageDialogBody.propTypes = props.data;\r\n    const data = props;\r\n    const { addPage, setOpenPopup } = data;\r\n\r\n    // eslint-disable-next-line\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [pageType, setPageType] = useState('Generic');\r\n    const [pageName, setPageName] = useState('');\r\n    const [pageBody, setPageBody] = useState('');\r\n\r\n    const [errorName, setErrorName] = useState(false);\r\n    const [errorNameText, setErrorNameText] = useState('');\r\n    const [errorBody, setErrorBody] = useState(false);\r\n\r\n    // eslint-disable-next-line\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setPageType(event.target.value);\r\n    };\r\n\r\n    const createNewPage = () => {\r\n        let validInput = true;\r\n\r\n        if (!pageName || !pageName.trim()) {\r\n            setErrorName(true);\r\n            setErrorNameText('Scenario name cannot be empty');\r\n            validInput = false;\r\n        } else if (pageName.length >= 1000) {\r\n            setErrorName(true);\r\n            setErrorNameText(\r\n                'Scenario name must have less than 1000 characters'\r\n            );\r\n            validInput = false;\r\n        } else {\r\n            setErrorName(false);\r\n        }\r\n\r\n        if (!pageBody || !pageBody.trim()) {\r\n            setErrorBody(true);\r\n            validInput = false;\r\n        } else {\r\n            setErrorBody(false);\r\n        }\r\n\r\n        if (validInput) {\r\n            addPage(pageType, pageName, pageBody);\r\n            setOpenPopup(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Grid container direction=\"row\" justify=\"flex-start\">\r\n                <Grid item xs={4}>\r\n                    <Typography variant=\"h6\">Page Type</Typography>\r\n                    <Select\r\n                        className={classes.selectMenu}\r\n                        id=\"Scenario-Page-Type-Menu\"\r\n                        labelId=\"Scenario-Page-Type-Menu\"\r\n                        value={pageType}\r\n                        onChange={handleChange}\r\n                    >\r\n                        <MenuItem value={'Generic'} onClick={handleClose}>\r\n                            Generic Component\r\n                        </MenuItem>\r\n                        <MenuItem value={'Action'} onClick={handleClose}>\r\n                            Action Component\r\n                        </MenuItem>\r\n                        <MenuItem value={'Reflection'} onClick={handleClose}>\r\n                            Reflection Component\r\n                        </MenuItem>\r\n                    </Select>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                    {errorName ? (\r\n                        <TextField\r\n                            error\r\n                            helperText={errorNameText}\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"New Scenario Page Name\"\r\n                            label=\"Scenario Page Name\"\r\n                            id=\"scenariopageAdder\"\r\n                            onChange={(e) => setPageName(e.target.value)}\r\n                        ></TextField>\r\n                    ) : (\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"New Scenario Page Name\"\r\n                            label=\"Scenario Page Name\"\r\n                            id=\"scenariopageAdder\"\r\n                            onChange={(e) => setPageName(e.target.value)}\r\n                        ></TextField>\r\n                    )}\r\n                    <EditedSunEditor\r\n                        text={pageBody}\r\n                        setText={setPageBody}\r\n                    ></EditedSunEditor>\r\n                    {errorBody ? (\r\n                        <Typography\r\n                            style={{ marginLeft: 15 }}\r\n                            variant=\"caption\"\r\n                            display=\"block\"\r\n                            color=\"error\"\r\n                        >\r\n                            Page body cannot be empty.\r\n                        </Typography>\r\n                    ) : null}\r\n                    <Button\r\n                        className={classes.addButton}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={createNewPage}\r\n                    >\r\n                        <AddIcon />\r\n                        Add Scenario Page\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    Button,\r\n    Typography,\r\n    makeStyles,\r\n} from '@material-ui/core';\r\nimport AddNewScenarioPageDialogBody from './AddNewScenarioPageDialogBody';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    dialogWrapper: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(5),\r\n    },\r\n    exitOutButton: {\r\n        margin: theme.spacing(2),\r\n        marginLeft: 'auto',\r\n        float: 'right',\r\n        border: '3px solid',\r\n        borderColor: theme.palette.primary.light,\r\n    },\r\n}));\r\n\r\nAddNewSimulationScenarioPageDialog.propTypes = {\r\n    title: PropTypes.any.isRequired,\r\n    setOpenPopup: PropTypes.any.isRequired,\r\n    addPage: PropTypes.any.isRequired,\r\n    openPopup: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default function AddNewSimulationScenarioPageDialog(props) {\r\n    const classes = useStyles();\r\n    AddNewSimulationScenarioPageDialog.propTypes = props.data;\r\n    const data = props;\r\n    const { title, setOpenPopup, addPage, openPopup } = data;\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={openPopup}\r\n                maxWidth=\"md\"\r\n                classes={{ paper: classes.dialogWrapper }}\r\n            >\r\n                <DialogTitle\r\n                    disableTypography={true}\r\n                    style={{ display: 'flex' }}\r\n                >\r\n                    <Typography\r\n                        variant=\"h3\"\r\n                        align=\"center\"\r\n                        component=\"div\"\r\n                        style={{ display: 'flex' }}\r\n                    >\r\n                        {title}\r\n                    </Typography>\r\n                    <Button\r\n                        className={classes.exitOutButton}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                            setOpenPopup(false);\r\n                        }}\r\n                    >\r\n                        <HighlightOffIcon />\r\n                    </Button>\r\n                </DialogTitle>\r\n\r\n                <DialogContent dividers>\r\n                    <AddNewScenarioPageDialogBody\r\n                        addPage={addPage}\r\n                        setOpenPopup={setOpenPopup}\r\n                    ></AddNewScenarioPageDialogBody>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport GenericDeleteWarning from '../DeleteWarnings/GenericDeleteWarning';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    pageButton: {\r\n        width: '100%',\r\n        minHeight: '50px',\r\n        border: '3px solid',\r\n        borderColor: theme.palette.primary.light,\r\n        textTransform: 'unset',\r\n        overflowWrap: 'anywhere',\r\n    },\r\n    deleteButton: {\r\n        minWidth: '40px',\r\n        border: '3px solid',\r\n        borderColor: theme.palette.primary.main,\r\n        backgroundColor: theme.palette.primary.light,\r\n    },\r\n    deleteButtonContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n}));\r\n\r\nNavSideBarNode.propTypes = {\r\n    onClick: PropTypes.any.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    deleteByID: PropTypes.any.isRequired,\r\n    component: PropTypes.any,\r\n    scenarioPages: PropTypes.any,\r\n    isIntroPage: PropTypes.bool,\r\n};\r\n\r\nexport default function NavSideBarNode(props) {\r\n    const classes = useStyles();\r\n    const {\r\n        onClick,\r\n        deleteByID,\r\n        id,\r\n        title,\r\n        scenarioPages,\r\n        isIntroPage,\r\n    } = props;\r\n\r\n    //Used for the popup delete warning\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    function pageType(title) {\r\n        if (id === -1 || id === -2 || id === -3 || id === -4 || isIntroPage) {\r\n            return (\r\n                <Grid container direction=\"row\" justify=\"flex-start\">\r\n                    <Grid item xs={10}>\r\n                        <Button\r\n                            className={classes.pageButton}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={handleDisplayComponent}\r\n                        >\r\n                            {title}\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            );\r\n        } else {\r\n            return (\r\n                <Grid container direction=\"row\" justify=\"flex-start\">\r\n                    <Grid item xs={10}>\r\n                        <Button\r\n                            className={classes.pageButton}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={handleDisplayComponent}\r\n                        >\r\n                            {title}\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={2} className={classes.deleteButtonContainer}>\r\n                        <Button\r\n                            className={classes.deleteButton}\r\n                            color=\"primary\"\r\n                            onClick={handleClickOpen}\r\n                        >\r\n                            <DeleteForeverIcon />\r\n                        </Button>\r\n                        <GenericDeleteWarning\r\n                            remove={() => deleteByID(id)}\r\n                            open={open}\r\n                            setOpen={setOpen}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            );\r\n        }\r\n    }\r\n\r\n    function handleDisplayComponent() {\r\n        onClick(id, title, scenarioPages);\r\n    }\r\n\r\n    return <div>{pageType(title)}</div>;\r\n}\r\n","import React from 'react';\r\nimport NavSideBarNode from '../ConfigurationSideBarComponents/NavSideBarNode';\r\nimport PropTypes from 'prop-types';\r\n\r\nNavSideBarList.propTypes = {\r\n    onClick: PropTypes.any.isRequired,\r\n    deleteByID: PropTypes.any.isRequired,\r\n    scenarioPages: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default function NavSideBarList(props) {\r\n    const { onClick, deleteByID, scenarioPages } = props;\r\n\r\n    return (\r\n        <div>\r\n            {scenarioPages.map((scenarioPage) => (\r\n                <NavSideBarNode\r\n                    key={scenarioPage.id}\r\n                    onClick={onClick}\r\n                    deleteByID={deleteByID}\r\n                    scenarioPages={scenarioPages}\r\n                    {...scenarioPage}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, useTheme, withStyles } from '@material-ui/core/styles';\r\nimport { Drawer, Box, Button, Typography } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Logistics from '../components/EditorComponents/LogisticsPageComponents/Logistics';\r\nimport Generic from '../components/EditorComponents/GenericPageComponents/Generic';\r\nimport ConfigureIssues from '../components/EditorComponents/ConfigureIssuesComponents/ConfigureIssues';\r\nimport ConversationEditor from '../components/EditorComponents/ConversationEditorComponents/ConversationEditor';\r\nimport Reflection from '../components/EditorComponents/ReflectionPageComponents/Reflection';\r\nimport Action from '../components/EditorComponents/ActionPageComponents/Action';\r\nimport Introduction from '../components/EditorComponents/GenericPageComponents/Introduction';\r\nimport FlowDiagram from '../components/EditorComponents/FlowDiagramComponents/FlowDiagram';\r\nimport AddNewSimulationScenarioPageDialog from '../components//EditorComponents/AddNewSimulationScenarioPageDialog';\r\nimport NavSideBarList from '../components/ConfigurationSideBarComponents/NavSideBarList';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { Link } from 'react-router-dom';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\nimport SuccessBanner from '../components/Banners/SuccessBanner';\r\nimport ErrorBanner from '../components/Banners/ErrorBanner';\r\nimport PropTypes from 'prop-types';\r\nimport { useLocation } from 'react-router-dom';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\n\r\nimport universalPost from '../universalHTTPRequests/post.js';\r\nimport universalFetch from '../universalHTTPRequests/get.js';\r\nimport universalDelete from '../universalHTTPRequests/delete.js';\r\n//  setResponse, endpoint, onError, onSuccess, requestBody\r\n\r\nconst drawerWidth = 250;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    exitButton: {\r\n        margin: theme.spacing(2),\r\n        borderStyle: 'solid',\r\n        borderColor: 'white',\r\n        border: 2,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    container: {\r\n        marginTop: theme.spacing(1),\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    bannerContainer: {\r\n        marginTop: theme.spacing(1),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    title: {\r\n        textAlign: 'center',\r\n    },\r\n    copyright: {\r\n        margin: theme.spacing(2),\r\n        opacity: 0.5,\r\n    },\r\n    addPageButton: {\r\n        margin: theme.spacing(2),\r\n        textTransform: 'unset',\r\n        border: 'solid 3px',\r\n        borderColor: theme.palette.primary.light,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content1: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    issue: {\r\n        marginTop: theme.spacing(10),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    errorContainer: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    iconError: {\r\n        paddingRight: theme.spacing(2),\r\n        fontSize: '75px',\r\n    },\r\n    iconRefreshLarge: {\r\n        fontSize: '75px',\r\n    },\r\n    iconRefreshSmall: {\r\n        fontSize: '30px',\r\n    },\r\n}));\r\n\r\nEditor.propTypes = {\r\n    location: PropTypes.any,\r\n};\r\n\r\nexport default function Editor(props) {\r\n    const [showComponent, setShowComponent] = useState(true);\r\n    const [openPopup, setOpenPopup] = useState(false);\r\n\r\n    const location = useLocation();\r\n    const scenarioIDFromURL = location.pathname.split('/').pop();\r\n    const scenario_ID = props.location.data\r\n        ? props.location.data.SCENARIO\r\n        : scenarioIDFromURL;\r\n\r\n    //TODO when version control is implemented\r\n    const tempVersionID = 1;\r\n\r\n    const [getValues, setGetValues] = useState({\r\n        data: null,\r\n        loading: true,\r\n        error: null,\r\n    });\r\n\r\n    // eslint-disable-next-line\r\n    const [deleteValues, setDeleteValues] = useState({\r\n        data: null,\r\n        loading: true,\r\n        error: null,\r\n    });\r\n\r\n    // eslint-disable-next-line\r\n    const [postValues, setPostValues] = useState({\r\n        data: null,\r\n        loading: true,\r\n        error: null,\r\n    });\r\n\r\n    const [scenarioComponents, setScenarioComponents] = useState([]);\r\n    const [scenarioComponent, setScenarioComponent] = useState(null);\r\n    const [showEditor, setShowEditor] = useState(false);\r\n    const [addNewPageIndex, setAddNewPageIndex] = useState(null);\r\n    const [currentPageID, setCurrentPageID] = useState(-1);\r\n\r\n    let handleLogisticsGet = function handleLogisticsGet() {\r\n        let initialComponents = [\r\n            {\r\n                id: -1,\r\n                title: 'Logistics',\r\n                component: <Logistics />,\r\n            },\r\n            {\r\n                id: -2,\r\n                title: 'Configure Issues',\r\n                component: <ConfigureIssues />,\r\n            },\r\n            {\r\n                id: -3,\r\n                title: 'Conversation Editor',\r\n                component: <ConversationEditor />,\r\n            },\r\n            { id: -4, title: 'Flow Diagram', component: <FlowDiagram /> },\r\n        ];\r\n\r\n        const endpoint = '/logistics?scenario_id=' + scenario_ID;\r\n\r\n        function onSuccess(resp) {\r\n            let p = null;\r\n            let logistics_and_pages = resp.data;\r\n            p = {\r\n                scenario_ID: logistics_and_pages.SCENARIO,\r\n                version_ID: logistics_and_pages.VERSION,\r\n                title: logistics_and_pages.NAME,\r\n                is_finished: logistics_and_pages.IS_FINISHED,\r\n                public_scenario: logistics_and_pages.PUBLIC,\r\n                num_convos: logistics_and_pages.NUM_CONVERSATION,\r\n                professors: [logistics_and_pages.PROFESSOR],\r\n                courses: logistics_and_pages.COURSES,\r\n            };\r\n\r\n            initialComponents[0].component = <Logistics {...p}></Logistics>;\r\n            initialComponents[1].component = (\r\n                <ConfigureIssues scenario_ID={p.scenario_ID}></ConfigureIssues>\r\n            );\r\n            initialComponents[2].component = (\r\n                <ConversationEditor\r\n                    scenario_ID={p.scenario_ID}\r\n                ></ConversationEditor>\r\n            );\r\n            initialComponents[3].component = (\r\n                <FlowDiagram scenario_ID={p.scenario_ID}></FlowDiagram>\r\n            );\r\n\r\n            let pages = logistics_and_pages.PAGES;\r\n\r\n            for (let i = 0; i < pages.length; i++) {\r\n                //Already have component in initial components\r\n                if (pages[i].PAGE_TYPE === 'S') {\r\n                    continue;\r\n                }\r\n                //Intro page is first page on sidebar\r\n                if (pages[i].PAGE_TYPE === 'I') {\r\n                    initialComponents.splice(4, 0, {\r\n                        id: pages[i].PAGE,\r\n                        title: pages[i].PAGE_TITLE,\r\n                        isIntroPage: true,\r\n                        component: null,\r\n                    });\r\n                } else {\r\n                    initialComponents.push({\r\n                        id: pages[i].PAGE,\r\n                        title: pages[i].PAGE_TITLE,\r\n                        component: null,\r\n                    });\r\n                }\r\n            }\r\n            setScenarioComponents(initialComponents);\r\n            if (addNewPageIndex) {\r\n                handlePageGet(\r\n                    setGetValues,\r\n                    initialComponents[addNewPageIndex].id,\r\n                    initialComponents\r\n                );\r\n                setAddNewPageIndex(null);\r\n            } else {\r\n                setScenarioComponent(initialComponents[0].component);\r\n            }\r\n            setShowEditor(true);\r\n        }\r\n\r\n        function onFailure() {\r\n            //console.log('Failed to get logistics info');\r\n        }\r\n\r\n        universalFetch(setGetValues, endpoint, onFailure, onSuccess, {\r\n            SCENARIO: scenario_ID,\r\n        });\r\n    };\r\n\r\n    //TODO implement banner\r\n    function handleDelete(setDeleteValues, d_id) {\r\n        const endpoint = '/page?page_id=' + d_id;\r\n        function onSuccess(resp) {\r\n            setSuccessBannerFade(true);\r\n            setSuccessBannerMessage('Successfully deleted page!');\r\n            setShowEditor(true);\r\n        }\r\n        function onFailure() {\r\n            setErrorBannerFade(true);\r\n            setErrorBannerMessage('Failed to save page! Please try again.');\r\n        }\r\n\r\n        universalDelete(setDeleteValues, endpoint, onFailure, onSuccess, {\r\n            PAGE: d_id,\r\n        });\r\n    }\r\n\r\n    function handlePageGet(setGetValues, g_id, scenarioComponentsArray) {\r\n        const endpoint = '/page?page_id=' + g_id;\r\n\r\n        function onSuccess(resp) {\r\n            let p = null;\r\n            let c = null;\r\n\r\n            let currPageInfo = resp.data;\r\n            if (currPageInfo.PAGE_TYPE === 'I') {\r\n                p = {\r\n                    scenarioComponents: scenarioComponentsArray,\r\n                    setScenarioComponents: setScenarioComponents,\r\n                    setCurrentPageID: setCurrentPageID,\r\n                    page_id: currPageInfo.PAGE,\r\n                    page_type: currPageInfo.PAGE_TYPE,\r\n                    page_title: currPageInfo.PAGE_TITLE,\r\n                    scenario_ID: currPageInfo.SCENARIO,\r\n                    version_ID: tempVersionID,\r\n                    next_page_id: currPageInfo.NEXT_PAGE,\r\n                    body: currPageInfo.PAGE_BODY,\r\n                    bodies: currPageInfo.BODIES,\r\n                    xCoord: currPageInfo.X_COORDINATE,\r\n                    yCoord: currPageInfo.Y_COORDINATE,\r\n                    created: false,\r\n                };\r\n                c = <Introduction {...p}></Introduction>;\r\n            } else if (currPageInfo.PAGE_TYPE === 'G') {\r\n                p = {\r\n                    scenarioComponents: scenarioComponentsArray,\r\n                    setScenarioComponents: setScenarioComponents,\r\n                    setCurrentPageID: setCurrentPageID,\r\n                    page_id: currPageInfo.PAGE,\r\n                    page_type: currPageInfo.PAGE_TYPE,\r\n                    page_title: currPageInfo.PAGE_TITLE,\r\n                    scenario_ID: currPageInfo.SCENARIO,\r\n                    version_ID: tempVersionID,\r\n                    next_page_id: currPageInfo.NEXT_PAGE,\r\n                    body: currPageInfo.PAGE_BODY,\r\n                    bodies: currPageInfo.BODIES,\r\n                    xCoord: currPageInfo.X_COORDINATE,\r\n                    yCoord: currPageInfo.Y_COORDINATE,\r\n                    created: false,\r\n                };\r\n                c = <Generic {...p}></Generic>;\r\n            } else if (currPageInfo.PAGE_TYPE === 'A') {\r\n                p = {\r\n                    scenarioComponents: scenarioComponentsArray,\r\n                    setScenarioComponents: setScenarioComponents,\r\n                    setCurrentPageID: setCurrentPageID,\r\n                    page_id: currPageInfo.PAGE,\r\n                    page_type: currPageInfo.PAGE_TYPE,\r\n                    page_title: currPageInfo.PAGE_TITLE,\r\n                    scenario_ID: currPageInfo.SCENARIO,\r\n                    next_page_id: currPageInfo.NEXT_PAGE,\r\n                    version_ID: tempVersionID,\r\n                    body: currPageInfo.PAGE_BODY,\r\n                    choice1: currPageInfo.CHOICES[0]\r\n                        ? currPageInfo.CHOICES[0].CHOICE\r\n                        : '',\r\n                    r1: currPageInfo.CHOICES[0]\r\n                        ? currPageInfo.CHOICES[0].RESULT_PAGE\r\n                        : null,\r\n                    choice2: currPageInfo.CHOICES[1]\r\n                        ? currPageInfo.CHOICES[1].CHOICE\r\n                        : '',\r\n                    r2: currPageInfo.CHOICES[1]\r\n                        ? currPageInfo.CHOICES[1].RESULT_PAGE\r\n                        : null,\r\n                    xCoord: currPageInfo.X_COORDINATE,\r\n                    yCoord: currPageInfo.Y_COORDINATE,\r\n                    created: false,\r\n                };\r\n                c = <Action {...p}></Action>;\r\n            } else if (currPageInfo.PAGE_TYPE === 'R') {\r\n                p = {\r\n                    scenarioComponents: scenarioComponentsArray,\r\n                    setScenarioComponents: setScenarioComponents,\r\n                    setCurrentPageID: setCurrentPageID,\r\n                    page_id: currPageInfo.PAGE,\r\n                    page_type: currPageInfo.PAGE_TYPE,\r\n                    page_title: currPageInfo.PAGE_TITLE,\r\n                    scenario_ID: currPageInfo.SCENARIO,\r\n                    version_ID: tempVersionID,\r\n                    next_page_id: currPageInfo.NEXT_PAGE,\r\n                    body: currPageInfo.PAGE_BODY,\r\n                    reflection_questions: currPageInfo.REFLECTION_QUESTIONS,\r\n                    xCoord: currPageInfo.X_COORDINATE,\r\n                    yCoord: currPageInfo.Y_COORDINATE,\r\n                    created: false,\r\n                };\r\n                c = <Reflection {...p}></Reflection>;\r\n            }\r\n\r\n            let newScenarioComponents = [...scenarioComponentsArray];\r\n            newScenarioComponents = newScenarioComponents.map((x) =>\r\n                x.id === resp.data.PAGE ? { ...x, component: c } : x\r\n            );\r\n            setCurrentPageID(currPageInfo.PAGE);\r\n            setScenarioComponents(newScenarioComponents);\r\n            setScenarioComponent(c);\r\n            setShowComponent(true);\r\n        }\r\n\r\n        function onFailure() {\r\n            //console.log('Get failed');\r\n        }\r\n\r\n        universalFetch(setGetValues, endpoint, onFailure, onSuccess, {\r\n            PAGE: g_id,\r\n        });\r\n    }\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const WhiteTextTypography = withStyles({\r\n        root: {\r\n            color: '#FFFFFF',\r\n        },\r\n    })(Typography);\r\n\r\n    const BlackTextTypography = withStyles({\r\n        root: {\r\n            color: '#000000',\r\n        },\r\n    })(Typography);\r\n\r\n    const [shouldFetch, setShouldFetch] = useState(0);\r\n    useEffect(handleLogisticsGet, [shouldFetch]);\r\n\r\n    let onClick = (id, title, scenarioPages) => {\r\n        setCurrentPageID(id);\r\n        if (id !== -1 && id !== -2 && id !== -3 && id !== -4) {\r\n            handlePageGet(setGetValues, id, scenarioPages);\r\n        }\r\n        setScenarioComponent(\r\n            scenarioComponents.find((x) => x.id === id).component\r\n        );\r\n    };\r\n\r\n    const deleteByID = (d_id) => {\r\n        //If on page that is going to be deleted, redirect back to logistics page\r\n        if (\r\n            scenarioComponents.filter((i) => i.id === d_id)[0].id ===\r\n            currentPageID\r\n        ) {\r\n            setCurrentPageID(-1);\r\n            setScenarioComponent(scenarioComponents[0].component);\r\n        }\r\n        setScenarioComponents(scenarioComponents.filter((i) => i.id !== d_id));\r\n        setShowEditor(false);\r\n        handleDelete(setDeleteValues, d_id);\r\n    };\r\n\r\n    const [successBannerMessage, setSuccessBannerMessage] = useState('');\r\n    const [successBannerFade, setSuccessBannerFade] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setSuccessBannerFade(false);\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [successBannerFade]);\r\n\r\n    const [errorBannerMessage, setErrorBannerMessage] = useState('');\r\n    const [errorBannerFade, setErrorBannerFade] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            setErrorBannerFade(false);\r\n        }, 1000);\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, [errorBannerFade]);\r\n\r\n    function Sidebar() {\r\n        const classes = useStyles();\r\n\r\n        const addNewPage = (pageType, pageName, pageBody) => {\r\n            setShowComponent(false);\r\n            const endpoint = '/api/pages/';\r\n            // eslint-disable-next-line\r\n            let c = null;\r\n            // eslint-disable-next-line\r\n            let p = null;\r\n            let postReqBody;\r\n\r\n            function onSuccess(resp) {\r\n                setAddNewPageIndex(scenarioComponents.length);\r\n                setShouldFetch(shouldFetch + 1);\r\n            }\r\n\r\n            function onFailure() {\r\n                setShowEditor(true);\r\n            }\r\n\r\n            switch (pageType) {\r\n                case 'Generic':\r\n                    postReqBody = {\r\n                        PAGE_TYPE: 'G',\r\n                        PAGE_TITLE: pageName,\r\n                        PAGE_BODY: pageBody,\r\n                        SCENARIO: scenario_ID,\r\n                        VERSION: tempVersionID,\r\n                        NEXT_PAGE: null,\r\n                        X_COORDINATE: 0,\r\n                        Y_COORDINATE: 0,\r\n                    };\r\n\r\n                    p = {\r\n                        setScenarioComponents: setScenarioComponents,\r\n                        page_type: 'G',\r\n                        page_title: pageName,\r\n                        scenario_ID: scenario_ID,\r\n                        body: pageBody,\r\n                        bodies: [],\r\n                        version_ID: tempVersionID,\r\n                        next_page_id: null,\r\n                        created: true,\r\n                        xCoord: 0,\r\n                        yCoord: 0,\r\n                    };\r\n                    break;\r\n                case 'Reflection':\r\n                    postReqBody = {\r\n                        PAGE_TYPE: 'R',\r\n                        PAGE_TITLE: pageName,\r\n                        PAGE_BODY: pageBody,\r\n                        SCENARIO: scenario_ID,\r\n                        VERSION: tempVersionID,\r\n                        NEXT_PAGE: null,\r\n                        X_COORDINATE: 0,\r\n                        Y_COORDINATE: 0,\r\n                    };\r\n                    p = {\r\n                        setScenarioComponents: setScenarioComponents,\r\n                        page_type: 'R',\r\n                        page_title: pageName,\r\n                        scenario_ID: scenario_ID,\r\n                        version_ID: tempVersionID,\r\n                        next_page_id: null,\r\n                        body: pageBody,\r\n                        reflection_questions: [],\r\n                        created: true,\r\n                        xCoord: 0,\r\n                        yCoord: 0,\r\n                    };\r\n                    break;\r\n                case 'Action':\r\n                    postReqBody = {\r\n                        PAGE_TYPE: 'A',\r\n                        PAGE_TITLE: pageName,\r\n                        PAGE_BODY: pageBody,\r\n                        SCENARIO: scenario_ID,\r\n                        VERSION: tempVersionID,\r\n                        NEXT_PAGE: null,\r\n                        X_COORDINATE: 0,\r\n                        Y_COORDINATE: 0,\r\n                    };\r\n                    p = {\r\n                        setScenarioComponents: setScenarioComponents,\r\n                        page_type: 'A',\r\n                        page_title: pageName,\r\n                        scenario_ID: scenario_ID,\r\n                        version_ID: tempVersionID,\r\n                        next_page_id: null,\r\n                        body: pageBody,\r\n                        choice1: '',\r\n                        r1: null,\r\n                        choice2: '',\r\n                        r2: null,\r\n                        created: true,\r\n                        xCoord: 0,\r\n                        yCoord: 0,\r\n                    };\r\n                    break;\r\n                default:\r\n                    c = <Typography>Error</Typography>;\r\n            }\r\n\r\n            setShowEditor(false);\r\n\r\n            universalPost(\r\n                setPostValues,\r\n                endpoint,\r\n                onFailure,\r\n                onSuccess,\r\n                postReqBody\r\n            );\r\n        };\r\n\r\n        function handleAddNewComponent() {\r\n            setOpenPopup(true);\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'ltr' ? (\r\n                            <ChevronLeftIcon />\r\n                        ) : (\r\n                            <ChevronRightIcon />\r\n                        )}\r\n                        <BlackTextTypography variant=\"h6\">\r\n                            Hide Menu\r\n                        </BlackTextTypography>\r\n                    </IconButton>\r\n\r\n                    <NavSideBarList\r\n                        onClick={onClick}\r\n                        deleteByID={deleteByID}\r\n                        scenarioPages={scenarioComponents}\r\n                    />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleAddNewComponent}\r\n                        className={classes.addPageButton}\r\n                    >\r\n                        <AddIcon />\r\n                        Add Page\r\n                    </Button>\r\n                </Drawer>\r\n                <AddNewSimulationScenarioPageDialog\r\n                    openPopup={openPopup}\r\n                    title=\"Add New Page\"\r\n                    setOpenPopup={setOpenPopup}\r\n                    addPage={addNewPage}\r\n                ></AddNewSimulationScenarioPageDialog>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    const NavBar = (\r\n        <div>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <Box display=\"flex\" flexGrow={1}>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={handleDrawerOpen}\r\n                            edge=\"start\"\r\n                            className={clsx(\r\n                                classes.menuButton,\r\n                                open && classes.hide\r\n                            )}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n\r\n                        <Typography variant=\"h4\" noWrap>\r\n                            Ethisim Scenario Editor\r\n                        </Typography>\r\n                    </Box>\r\n\r\n                    <Button\r\n                        component={Link}\r\n                        to={{\r\n                            pathname: '/dashboard',\r\n                        }}\r\n                        className={classes.exitButton}\r\n                    >\r\n                        <WhiteTextTypography noWrap>\r\n                            Return to Dashboard\r\n                        </WhiteTextTypography>\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n\r\n    if (getValues.error) {\r\n        return (\r\n            <div>\r\n                {NavBar}\r\n                <div className={classes.issue}>\r\n                    <div className={classes.container}>\r\n                        <ErrorIcon className={classes.iconError} />\r\n                        <Typography align=\"center\" variant=\"h3\">\r\n                            Error in fetching Scenario Data.\r\n                        </Typography>\r\n                    </div>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleLogisticsGet}\r\n                    >\r\n                        <RefreshIcon className={classes.iconRefreshLarge} />\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (showEditor === false) {\r\n        return <LoadingSpinner />;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            {NavBar}\r\n            <Sidebar />\r\n            <main\r\n                className={clsx(classes.content1, {\r\n                    [classes.contentShift]: open,\r\n                })}\r\n            >\r\n                <div className={classes.drawerHeader} />\r\n                <div className={classes.bannerContainer}>\r\n                    <SuccessBanner\r\n                        successMessage={successBannerMessage}\r\n                        fade={successBannerFade}\r\n                    />\r\n                    <ErrorBanner\r\n                        errorMessage={errorBannerMessage}\r\n                        fade={errorBannerFade}\r\n                    />\r\n                </div>\r\n                {!getValues.data ||\r\n                scenarioComponent === null ||\r\n                getValues.loading ||\r\n                !showComponent ? (\r\n                    <LoadingSpinner />\r\n                ) : (\r\n                    <div>{scenarioComponent}</div>\r\n                )}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Typography } from '@material-ui/core';\r\nimport Box from '@material-ui/core/Box';\r\nimport PropTypes from 'prop-types';\r\n\r\nQuestionField.propTypes = {\r\n    question: PropTypes.string,\r\n    response: PropTypes.string,\r\n    id: PropTypes.number,\r\n    removeQuestion: PropTypes.any,\r\n    listOfQuestions: PropTypes.any,\r\n    setListOfQuestions: PropTypes.any,\r\n};\r\n\r\nexport default function QuestionField({ question, response }) {\r\n    return (\r\n        <div>\r\n            <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                p={1}\r\n                m={1}\r\n                bgcolor=\"background.paper\"\r\n                style={{ width: '100%' }}\r\n            >\r\n                <Box p={1} style={{ width: '100%' }}>\r\n                    <Typography align=\"center\" variant=\"h6\">\r\n                        {question}\r\n                    </Typography>\r\n                    <TextField\r\n                        style={{ width: '100%' }}\r\n                        id=\"outlined-multiline-static\"\r\n                        multiline\r\n                        rows={2}\r\n                        variant=\"outlined\"\r\n                        value={response}\r\n                    />\r\n                </Box>\r\n            </Box>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport QuestionResponseField from './QuestionResponseField';\r\nimport PropTypes from 'prop-types';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nReflectionResponse.propTypes = {\r\n    studentReflections: PropTypes.any,\r\n};\r\n\r\nexport default function ReflectionResponse({ studentReflections }) {\r\n    //questionsResponses is an array of object in format {question: string, response: string}\r\n    const questionResponsesWithID = studentReflections.questionResponses.map(\r\n        function (data, index) {\r\n            //setID(id + 1);\r\n            return {\r\n                question: data.question,\r\n                response: data.response,\r\n                id: index,\r\n            };\r\n        }\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Typography align=\"center\" variant=\"h3\">\r\n                {studentReflections.title}\r\n            </Typography>\r\n            {questionResponsesWithID.map((data) => (\r\n                <QuestionResponseField\r\n                    key={data.id}\r\n                    id={data.id}\r\n                    question={data.question}\r\n                    response={data.response}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {\r\n    Typography,\r\n    Container,\r\n    FormControlLabel,\r\n    Checkbox,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    form: {\r\n        marginTop: theme.spacing(1),\r\n        width: '100%',\r\n    },\r\n    submit: {\r\n        marginTop: theme.spacing(2),\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: 'white',\r\n        textTransform: 'unset',\r\n    },\r\n    saveButton: {\r\n        margin: theme.spacing(2),\r\n        float: 'right',\r\n        textTransform: 'unset',\r\n    },\r\n}));\r\n\r\nActionStudentResponse.propTypes = {\r\n    option1: PropTypes.string,\r\n    option2: PropTypes.string,\r\n    choice: PropTypes.number,\r\n    title: PropTypes.string,\r\n};\r\n\r\nexport default function ActionStudentResponse({\r\n    option1,\r\n    option2,\r\n    choice,\r\n    title,\r\n}) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container component=\"main\">\r\n            <Typography align=\"center\" variant=\"h3\">\r\n                {title}\r\n            </Typography>\r\n            <div className={classes.container}>\r\n                <FormControlLabel\r\n                    value=\"start\"\r\n                    control={\r\n                        <Checkbox color=\"primary\" checked={choice === 1} />\r\n                    }\r\n                    label={option1}\r\n                    labelPlacement=\"start\"\r\n                />\r\n                <FormControlLabel\r\n                    value=\"start\"\r\n                    control={\r\n                        <Checkbox color=\"primary\" checked={choice === 2} />\r\n                    }\r\n                    label={option2}\r\n                    labelPlacement=\"start\"\r\n                />\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Grid } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    pageButton: {\r\n        width: '100%',\r\n        minHeight: '50px',\r\n        border: '3px solid',\r\n        borderColor: theme.palette.primary.light,\r\n        textTransform: 'unset',\r\n    },\r\n    deleteButtonContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    deleteButton: {\r\n        minWidth: '40px',\r\n        border: '3px solid',\r\n        borderColor: theme.palette.primary.main,\r\n        backgroundColor: theme.palette.primary.light,\r\n    },\r\n}));\r\n\r\nNavSideBarNode.propTypes = {\r\n    onClick: PropTypes.any.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    page: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default function NavSideBarNode(props) {\r\n    const classes = useStyles();\r\n    NavSideBarNode.propTypes = props.data;\r\n    const data = props;\r\n    const { onClick, title, page } = data;\r\n\r\n    function handleDisplayComponent() {\r\n        onClick(page);\r\n    }\r\n\r\n    function pageType(title) {\r\n        return (\r\n            <Grid container direction=\"row\" justify=\"flex-start\">\r\n                <Grid item xs={12}>\r\n                    <Button\r\n                        className={classes.pageButton}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handleDisplayComponent}\r\n                    >\r\n                        {title}\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n\r\n    return <div>{pageType(title)}</div>;\r\n}\r\n","import React from 'react';\r\nimport NavSideBarNode from './NavSideBarListNode';\r\nimport PropTypes from 'prop-types';\r\n\r\nNavSideBarList.propTypes = {\r\n    onClick: PropTypes.any.isRequired,\r\n    deleteByID: PropTypes.any.isRequired,\r\n    scenarioPages: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default function NavSideBarList(props) {\r\n    NavSideBarList.propTypes = props.data;\r\n    const data = props;\r\n    const { studentResponsePages, onClick } = data;\r\n\r\n    return (\r\n        <div>\r\n            {studentResponsePages.map((studentResponsePage) => (\r\n                <NavSideBarNode\r\n                    key={studentResponsePage.id}\r\n                    onClick={onClick}\r\n                    {...studentResponsePage}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n","const mockComponentsFlowChart = {\r\n    scenarioId: 2,\r\n    components: [\r\n        {\r\n            id: '1',\r\n            type: 'Generic',\r\n            title: 'Simulation Introduction',\r\n            position: { x: 0, y: 0 },\r\n        },\r\n        {\r\n            id: '2',\r\n            type: 'Generic',\r\n            title: 'Project Task Assignment',\r\n            position: { x: 0, y: 0 },\r\n        },\r\n        {\r\n            id: '3',\r\n            type: 'Reflection',\r\n            title: 'Initial Reflection',\r\n            position: { x: 0, y: 0 },\r\n        },\r\n        {\r\n            id: '4',\r\n            type: 'Reflection',\r\n            title: 'Middle Reflection',\r\n            position: { x: 0, y: 0 },\r\n        },\r\n        {\r\n            id: '5',\r\n            type: 'Reflection',\r\n            title: 'Final Reflection',\r\n            position: { x: 0, y: 0 },\r\n        },\r\n        {\r\n            id: '6',\r\n            type: 'Action',\r\n            title: 'Initial action',\r\n            position: { x: 0, y: 0 },\r\n        },\r\n        {\r\n            id: '7',\r\n            type: 'Action',\r\n            title: 'Final Action',\r\n            position: { x: 0, y: 0 },\r\n        },\r\n        {\r\n            id: '8',\r\n            type: 'Conversation',\r\n            title: 'Stakeholder Conversations',\r\n            position: { x: 0, y: 0 },\r\n        },\r\n        {\r\n            id: '9',\r\n            type: 'Generic',\r\n            title: 'Conclusion',\r\n            position: { x: 0, y: 0 },\r\n        },\r\n        {\r\n            id: '10',\r\n            type: 'Generic',\r\n            title: 'Consequences',\r\n            position: { x: 0, y: 0 },\r\n        },\r\n    ],\r\n};\r\n\r\nconst mockGenericHistory = {\r\n    type: 'Generic',\r\n    history: [\r\n        {\r\n            type: 'Generic',\r\n            title: 'Marius Minea Version Control Introduction',\r\n            body:\r\n                '<p><span style=\"font-size: 28px;\"><em><u><strong>VERSION CONTROL WORKS #1</strong></u></em></span><em></em><br></p>',\r\n            date: new Date().getTime(),\r\n            author: 'Marius Minea',\r\n            id: 1,\r\n        },\r\n        {\r\n            type: 'Generic',\r\n            title: 'David Fisher Version Control Introduction',\r\n            body:\r\n                '<p><span style=\"font-size: 28px;\"><em><u><strong>VERSION CONTROL WORKS #2</strong></u></em></span><em></em><br></p>',\r\n            date: new Date().getTime() - 300000,\r\n            author: 'David Fisher',\r\n            id: 2,\r\n        },\r\n        {\r\n            type: 'Generic',\r\n            title: 'Marius Minea Version Control Introduction',\r\n            body:\r\n                '<p><span style=\"font-size: 28px;\"><em><u><strong>VERSION CONTROL WORKS #1</strong></u></em></span><em></em><br></p>',\r\n            date: new Date().getTime() - 400000,\r\n            author: 'Marius Minea',\r\n            id: 3,\r\n        },\r\n        {\r\n            type: 'Generic',\r\n            title: 'David Fisher Version Control Introduction',\r\n            body:\r\n                '<p><span style=\"font-size: 28px;\"><em><u><strong>VERSION CONTROL WORKS #2</strong></u></em></span><em></em><br></p>',\r\n            date: new Date().getTime() - 500000,\r\n            author: 'David Fisher',\r\n            id: 4,\r\n        },\r\n        {\r\n            type: 'Generic',\r\n            title: 'Marius Minea Version Control Introduction',\r\n            body:\r\n                '<p><span style=\"font-size: 28px;\"><em><u><strong>VERSION CONTROL WORKS #1</strong></u></em></span><em></em><br></p>',\r\n            date: new Date().getTime() - 600000,\r\n            author: 'Marius Minea',\r\n            id: 5,\r\n        },\r\n        {\r\n            type: 'Generic',\r\n            title: 'David Fisher Version Control Introduction',\r\n            body:\r\n                '<p><span style=\"font-size: 28px;\"><em><u><strong>VERSION CONTROL WORKS #2</strong></u></em></span><em></em><br></p>',\r\n            date: new Date().getTime() - 700000,\r\n            author: 'David Fisher',\r\n            id: 6,\r\n        },\r\n        {\r\n            type: 'Generic',\r\n            title: 'Marius Minea Version Control Introduction',\r\n            body:\r\n                '<p><span style=\"font-size: 28px;\"><em><u><strong>VERSION CONTROL WORKS #1</strong></u></em></span><em></em><br></p>',\r\n            date: new Date().getTime() - 800000,\r\n            author: 'Marius Minea',\r\n            id: 7,\r\n        },\r\n        {\r\n            type: 'Generic',\r\n            title: 'David Fisher Version Control Introduction',\r\n            body:\r\n                '<p><span style=\"font-size: 28px;\"><em><u><strong>VERSION CONTROL WORKS #2</strong></u></em></span><em></em><br></p>',\r\n            date: new Date().getTime() - 900000,\r\n            author: 'David Fisher',\r\n            id: 8,\r\n        },\r\n    ],\r\n};\r\n\r\nconst mockReflectionHistory = {\r\n    type: 'Reflection',\r\n    history: [\r\n        {\r\n            type: 'Reflection',\r\n            title: 'David Barrington Version Control Introduction',\r\n            body:\r\n                '<p><span style=\"font-size: 28px;\"><em><u><strong>VERSION CONTROL WORKS #1</strong></u></em></span><em></em><br></p>',\r\n            date: new Date().getTime(),\r\n            questions: ['How do you feel?', 'Do you like this?'],\r\n            author: 'David Barrington',\r\n            id: 1,\r\n        },\r\n        {\r\n            type: 'Reflection',\r\n            title: 'David Fisher Version Control Introduction',\r\n            body:\r\n                '<p><span style=\"font-size: 28px;\"><em><u><strong>VERSION CONTROL WORKS #2</strong></u></em></span><em></em><br></p>',\r\n            date: new Date().getTime() - 2000000,\r\n            questions: ['How do you feel?', 'Do you like this?'],\r\n            author: 'David Fisher',\r\n            id: 2,\r\n        },\r\n    ],\r\n};\r\n\r\nconst mockActionHistory = {\r\n    type: 'Action',\r\n    history: [\r\n        {\r\n            type: 'Action',\r\n            title: 'David Fisher Version Control Introduction',\r\n            body:\r\n                '<p><span style=\"font-size: 28px;\"><em><u><strong>VERSION CONTROL WORKS #1</strong></u></em></span><em></em><br></p>',\r\n            option1: 'Go Ahead',\r\n            option2: 'Wait',\r\n            date: new Date().getTime(),\r\n            author: 'David Fisher',\r\n            id: 1,\r\n        },\r\n        {\r\n            type: 'Action',\r\n            title: 'Gordan Anderson Version Control Introduction',\r\n            body:\r\n                '<p><span style=\"font-size: 28px;\"><em><u><strong>VERSION CONTROL WORKS #2</strong></u></em></span><em></em><br></p>',\r\n            option1: 'Die',\r\n            option2: 'Live',\r\n            date: new Date().getTime() - 1000000,\r\n            author: 'Gordan Anderson',\r\n            id: 2,\r\n        },\r\n    ],\r\n};\r\n\r\nconst mockIssuesHistory = {\r\n    type: 'Issues',\r\n    history: [\r\n        {\r\n            date: new Date().getTime(),\r\n            author: 'Marius Minea',\r\n            id: 1,\r\n            issues: [\r\n                {\r\n                    ISSUE_ID: 1,\r\n                    NAME: 'Personal Wealth',\r\n                    IMPORTANCE_SCORE: 1,\r\n                    SCENARIO_ID: 1,\r\n                    VERSION_ID: 2,\r\n                },\r\n                {\r\n                    ISSUE_ID: 2,\r\n                    NAME: 'User Privacy',\r\n                    IMPORTANCE_SCORE: 5,\r\n                    SCENARIO_ID: 1,\r\n                    VERSION_ID: 2,\r\n                },\r\n                {\r\n                    ISSUE_ID: 3,\r\n                    NAME: 'Career Building Opportunity',\r\n                    IMPORTANCE_SCORE: 2,\r\n                    SCENARIO_ID: 1,\r\n                    VERSION_ID: 2,\r\n                },\r\n                {\r\n                    ISSUE_ID: 4,\r\n                    NAME: 'Project Harms Career',\r\n                    IMPORTANCE_SCORE: 2,\r\n                    SCENARIO_ID: 1,\r\n                    VERSION_ID: 2,\r\n                },\r\n                {\r\n                    ISSUE_ID: 5,\r\n                    NAME: 'Short Term Company Profits',\r\n                    IMPORTANCE_SCORE: 2,\r\n                    SCENARIO_ID: 1,\r\n                    VERSION_ID: 2,\r\n                },\r\n                {\r\n                    ISSUE_ID: 6,\r\n                    NAME: 'Long Term Company Profits',\r\n                    IMPORTANCE_SCORE: 2,\r\n                    SCENARIO_ID: 1,\r\n                    VERSION_ID: 2,\r\n                },\r\n                {\r\n                    ISSUE_ID: 7,\r\n                    NAME: 'User Health Improvement',\r\n                    IMPORTANCE_SCORE: 2,\r\n                    SCENARIO_ID: 1,\r\n                    VERSION_ID: 2,\r\n                },\r\n            ],\r\n        },\r\n    ],\r\n};\r\n\r\nconst mockConversationEditorHistory = {\r\n    history: [\r\n        {\r\n            date: new Date().getTime(),\r\n            author: 'Marius Minea',\r\n            id: 1,\r\n            stakeholders: [\r\n                {\r\n                    id: 1,\r\n                    name: 'Da Big Cheeze',\r\n                    bio: 'Spiffy',\r\n                    mainConvo: 'Big Spiffy',\r\n                    questionsResponses: [\r\n                        {\r\n                            question: 'Do you like this idea?',\r\n                            response: \"Yes, I love stealing everyone's data\",\r\n                        },\r\n                        {\r\n                            question: 'Do you like this idea?',\r\n                            response: \"Yes, I love stealing everyone's data\",\r\n                        },\r\n                    ],\r\n                    stakeHolderIssues: [\r\n                        {\r\n                            id: 1,\r\n                            issue: 'Personal Wealth',\r\n                            stakeHolderScore: 3,\r\n                        },\r\n                        {\r\n                            id: 2,\r\n                            issue: 'Privacy',\r\n                            stakeHolderScore: 4,\r\n                        },\r\n                    ],\r\n                },\r\n            ],\r\n        },\r\n    ],\r\n};\r\n\r\nconst mockGenericComponent = {\r\n    type: 'Generic',\r\n    id: 5,\r\n    title: 'Introduction',\r\n    body: 'Sample Introduction for Generic Component',\r\n};\r\n\r\nconst mockReflectionComponent = {\r\n    type: 'Reflection',\r\n    id: 6,\r\n    title: 'Initial Reflection',\r\n    body: 'Sample Introduction for Reflection Component',\r\n};\r\n\r\nconst mockActionComponent = {\r\n    type: 'Action',\r\n    id: 7,\r\n    title: 'Initial Action',\r\n    body: 'Sample Introduction for Action Component',\r\n};\r\n\r\nconst mockUnfinishedScenario = {\r\n    id: 1,\r\n    scenarioName: 'Unfinished Scenario',\r\n    className: 'CS320',\r\n    authors: ['David Fisher', 'Peter Haas', 'Lee Osterweil'],\r\n    finished: false,\r\n};\r\n\r\nconst mockUnfinishedScenarioData = {\r\n    id: 1,\r\n    authors: ['David Fisher', 'Peter Haas', 'Lee Osterweil'],\r\n    components: [\r\n        mockGenericComponent,\r\n        mockReflectionComponent,\r\n        mockActionComponent,\r\n    ],\r\n    finished: false,\r\n};\r\n\r\nconst mockFinishedScenario = {\r\n    id: 2,\r\n    scenarioName: 'Finished Scenario',\r\n    className: 'CS320',\r\n    authors: ['David Fisher', 'Peter Haas', 'Lee Osterweil'],\r\n    finished: true,\r\n};\r\n\r\nconst mockFinishedScenarioData = {\r\n    id: 2,\r\n    authors: ['David Fisher', 'Peter Haas', 'Lee Osterweil'],\r\n    components: [\r\n        mockGenericComponent,\r\n        mockReflectionComponent,\r\n        mockActionComponent,\r\n    ],\r\n    finished: true,\r\n};\r\n\r\nconst mockFinishedScenarioStudentResponse = {\r\n    id: 0,\r\n    actions: [\r\n        {\r\n            id: 0,\r\n            title: 'Initial Action',\r\n            option1: 'Go ahead with the project.',\r\n            option2: 'Wait and talk with stakeholders.',\r\n            choice: 2,\r\n        },\r\n        {\r\n            id: 1,\r\n            title: 'Final  Action',\r\n            option1: 'Go ahead with the project.',\r\n            option2: 'Wait and talk with team members.',\r\n            choice: 2,\r\n        },\r\n    ],\r\n    reflections: [\r\n        {\r\n            id: 2,\r\n            title: 'Initial Reflection',\r\n            questionResponses: [\r\n                {\r\n                    question:\r\n                        'What are some ethical issues that may arise from this project task assignment?',\r\n                    response: 'I believe user privacy will be a major issue.',\r\n                },\r\n                {\r\n                    question:\r\n                        'Have you ever thought of the ethical issues you answered above in your day-to-day life?',\r\n                    response: 'No.',\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            id: 3,\r\n            title: 'Final Reflection',\r\n            questionResponses: [\r\n                {\r\n                    question:\r\n                        'What is some information you believe that you still need to know in order to proceed?',\r\n                    response:\r\n                        'I still need information about how this technology could impact vulnerable people.',\r\n                },\r\n                {\r\n                    question: 'What ethical issues did you explore?',\r\n                    response:\r\n                        'I explored how my project task assignment could affect user privacy, short-term and long-term company profits, personal wealth, and environmental issues.',\r\n                },\r\n            ],\r\n        },\r\n    ],\r\n};\r\n\r\nconst mockStudents = [\r\n    {\r\n        name: 'Enoch Hsiao',\r\n        age: 19,\r\n        grade: 'Sophomore',\r\n        gender: 'Male',\r\n        race: 'N/A',\r\n        major: 'Computer Science',\r\n        id: 0,\r\n    },\r\n    {\r\n        name: 'John Smith',\r\n        age: 20,\r\n        grade: 'Sophomore',\r\n        gender: 'Male',\r\n        race: 'N/A',\r\n        major: 'Computer Science',\r\n        id: 1,\r\n    },\r\n    {\r\n        name: 'Susie Lee',\r\n        age: 21,\r\n        grade: 'Junior',\r\n        gender: 'Female',\r\n        race: 'N/A',\r\n        major: 'Computer Science',\r\n        id: 2,\r\n    },\r\n    {\r\n        name: 'Rebecca Curr',\r\n        age: 19,\r\n        grade: 'Freshman',\r\n        gender: 'Female',\r\n        race: 'N/A',\r\n        major: 'Computer Science',\r\n        id: 3,\r\n    },\r\n    {\r\n        name: 'Sean Parker',\r\n        age: 22,\r\n        grade: 'Senior',\r\n        gender: 'Male',\r\n        race: 'N/A',\r\n        major: 'Computer Science',\r\n        id: 4,\r\n    },\r\n    {\r\n        name: 'Vicenzo lar',\r\n        age: 20,\r\n        grade: 'Junior',\r\n        gender: 'Male',\r\n        race: 'N/A',\r\n        major: 'Computer Science',\r\n        id: 5,\r\n    },\r\n    {\r\n        name: 'Filler1',\r\n        age: 20,\r\n        grade: 'Junior',\r\n        gender: 'Female',\r\n        race: 'N/A',\r\n        major: 'Computer Science',\r\n        id: 6,\r\n    },\r\n    {\r\n        name: 'Filler2',\r\n        age: 20,\r\n        grade: 'Junior',\r\n        gender: 'Female',\r\n        race: 'N/A',\r\n        major: 'Computer Science',\r\n        id: 7,\r\n    },\r\n    {\r\n        name: 'Filler3',\r\n        age: 20,\r\n        grade: 'Junior',\r\n        gender: 'Female',\r\n        race: 'N/A',\r\n        major: 'Computer Science',\r\n        id: 8,\r\n    },\r\n    {\r\n        name: 'Filler4',\r\n        age: 20,\r\n        grade: 'Junior',\r\n        gender: 'Female',\r\n        race: 'N/A',\r\n        major: 'Computer Science',\r\n        id: 9,\r\n    },\r\n    {\r\n        name: 'Filler5',\r\n        age: 20,\r\n        grade: 'Junior',\r\n        gender: 'Male',\r\n        race: 'N/A',\r\n        major: 'Math',\r\n        id: 10,\r\n    },\r\n    {\r\n        name: 'Filler6',\r\n        age: 20,\r\n        grade: 'Junior',\r\n        gender: 'Male',\r\n        race: 'N/A',\r\n        major: 'Math',\r\n        id: 11,\r\n    },\r\n];\r\n\r\nexport {\r\n    mockUnfinishedScenarioData,\r\n    mockFinishedScenarioData,\r\n    mockUnfinishedScenario,\r\n    mockFinishedScenario,\r\n    mockActionHistory,\r\n    mockGenericHistory,\r\n    mockReflectionHistory,\r\n    mockIssuesHistory,\r\n    mockGenericComponent,\r\n    mockActionComponent,\r\n    mockReflectionComponent,\r\n    mockConversationEditorHistory,\r\n    mockFinishedScenarioStudentResponse,\r\n    mockStudents,\r\n    mockComponentsFlowChart,\r\n};\r\n","import React, { useState } from 'react';\r\nimport { makeStyles, useTheme, withStyles } from '@material-ui/core/styles';\r\nimport { Drawer, Box, Button, Typography, Dialog } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ReflectionResponse from './ReflectionResponseComponent/ReflectionResponse';\r\nimport ActionResponse from './ActionResponseComponent/ActionResponse';\r\nimport NavSideBarList from './SideBar/NavSideBarList';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport PropTypes from 'prop-types';\r\nimport { mockFinishedScenarioStudentResponse } from '../../shared/mockScenarioData';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    exitButton: {\r\n        margin: theme.spacing(2),\r\n        borderStyle: 'solid',\r\n        borderColor: 'white',\r\n        border: 2,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    container: {\r\n        marginTop: theme.spacing(1),\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    title: {\r\n        textAlign: 'center',\r\n    },\r\n    copyright: {\r\n        margin: theme.spacing(2),\r\n        opacity: 0.5,\r\n    },\r\n    addPageButton: {\r\n        margin: theme.spacing(2),\r\n        textTransform: 'unset',\r\n        border: 'solid 3px',\r\n        borderColor: theme.palette.primary.light,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content1: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: drawerWidth,\r\n    },\r\n    closeDialogButton: {\r\n        color: 'white',\r\n        fontSize: '42px',\r\n    },\r\n}));\r\n\r\nconst addPage = (array, id, title, componentType, data) => {\r\n    var c = null;\r\n    switch (componentType) {\r\n        case 'Reflection':\r\n            c = <ReflectionResponse studentReflections={data} />;\r\n            break;\r\n        case 'Action':\r\n            c = (\r\n                <ActionResponse\r\n                    option1={data.option1}\r\n                    option2={data.option2}\r\n                    choice={data.choice}\r\n                    title={title}\r\n                />\r\n            );\r\n            break;\r\n        default:\r\n            c = <Typography>Error</Typography>;\r\n    }\r\n    return array.concat({ id, title, page: c });\r\n};\r\n\r\nData.propTypes = {\r\n    open: PropTypes.any,\r\n    selectedResponseData: PropTypes.any,\r\n    handleClose: PropTypes.any,\r\n};\r\n\r\nexport default function Data({ open, selectedResponseData, handleClose }) {\r\n    const classes = useStyles();\r\n    const { NAME } = selectedResponseData;\r\n    const [openDrawer, setOpenDrawer] = React.useState(true);\r\n    const theme = useTheme();\r\n    const handleDrawerOpen = () => {\r\n        setOpenDrawer(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n        setOpenDrawer(false);\r\n    };\r\n\r\n    const BlackTextTypography = withStyles({\r\n        root: {\r\n            color: '#000000',\r\n        },\r\n    })(Typography);\r\n\r\n    //Fake fetch of scenarioData with components\r\n    let fetchedStudentResponses = mockFinishedScenarioStudentResponse;\r\n    let reflectionResponses = fetchedStudentResponses.reflections;\r\n    let actionResponses = fetchedStudentResponses.actions;\r\n    actionResponses = actionResponses.reduce((result, currentValue) => {\r\n        return addPage(\r\n            result,\r\n            currentValue.id,\r\n            currentValue.title,\r\n            'Action',\r\n            currentValue\r\n        );\r\n    }, []);\r\n    let studentResponsePages = reflectionResponses.reduce(\r\n        (result, currentValue) => {\r\n            return addPage(\r\n                result,\r\n                currentValue.id,\r\n                currentValue.title,\r\n                'Reflection',\r\n                currentValue\r\n            );\r\n        },\r\n        actionResponses\r\n    );\r\n\r\n    const [studentResponsePage, setStudentResponsePage] = useState(\r\n        studentResponsePages[0].page\r\n    );\r\n    function Sidebar() {\r\n        const classes = useStyles();\r\n\r\n        const onClick = function (component) {\r\n            setStudentResponsePage(component);\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={openDrawer}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'ltr' ? (\r\n                            <ChevronLeftIcon />\r\n                        ) : (\r\n                            <ChevronRightIcon />\r\n                        )}\r\n                        <BlackTextTypography variant=\"h6\">\r\n                            Hide Menu\r\n                        </BlackTextTypography>\r\n                    </IconButton>\r\n\r\n                    <NavSideBarList\r\n                        onClick={onClick}\r\n                        studentResponsePages={studentResponsePages}\r\n                    />\r\n                </Drawer>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            onClose={handleClose}\r\n            aria-labelledby=\"customized-dialog-title\"\r\n            open={open}\r\n            fullScreen={true}\r\n        >\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: openDrawer,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <Box display=\"flex\" flexGrow={1}>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={handleDrawerOpen}\r\n                            edge=\"start\"\r\n                            className={clsx(\r\n                                classes.menuButton,\r\n                                openDrawer && classes.hide\r\n                            )}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n\r\n                        <Typography variant=\"h4\" noWrap>\r\n                            {NAME + \"'s Responses\"}\r\n                        </Typography>\r\n                    </Box>\r\n\r\n                    <Button\r\n                        onClick={handleClose}\r\n                        className={classes.closeButton}\r\n                    >\r\n                        <ExitToAppIcon className={classes.closeDialogButton} />\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Sidebar />\r\n\r\n            <main\r\n                className={clsx(classes.content1, {\r\n                    [classes.contentShift]: openDrawer,\r\n                })}\r\n            >\r\n                <div className={classes.drawerHeader} />\r\n                {studentResponsePage}\r\n            </main>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Container,\r\n    Box,\r\n    Button,\r\n    Typography,\r\n    CssBaseline,\r\n    AppBar,\r\n    Toolbar,\r\n} from '@material-ui/core';\r\nimport Copyright from '../components/Copyright';\r\nimport PropTypes from 'prop-types';\r\nimport MaterialTable from 'material-table';\r\nimport { forwardRef } from 'react';\r\nimport StudentResponseDialog from '../components/StudentResponsesComponents/StudentResposeDialog';\r\nimport './data.css';\r\nimport { Link } from 'react-router-dom';\r\nimport get from '../universalHTTPRequests/get';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport RateReviewIcon from '@material-ui/icons/RateReview';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => (\r\n        <ChevronRight {...props} ref={ref} />\r\n    )),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => (\r\n        <ChevronLeft {...props} ref={ref} />\r\n    )),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => (\r\n        <ArrowDownward {...props} ref={ref} />\r\n    )),\r\n    ThirdStateCheck: forwardRef((props, ref) => (\r\n        <Remove {...props} ref={ref} />\r\n    )),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n    RateReview: forwardRef((props, ref) => (\r\n        <RateReviewIcon {...props} ref={ref} />\r\n    )),\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        marginTop: theme.spacing(12),\r\n        textAlign: 'center',\r\n    },\r\n    button: {\r\n        marginBottom: theme.spacing(1),\r\n        textTransform: 'unset',\r\n    },\r\n    exitButton: {\r\n        margin: theme.spacing(2),\r\n        borderStyle: 'solid',\r\n        borderColor: 'white',\r\n        border: 2,\r\n    },\r\n    title: {\r\n        textAlign: 'center',\r\n    },\r\n    copyright: {\r\n        margin: theme.spacing(2),\r\n    },\r\n    issue: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    errorContainer: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    iconError: {\r\n        paddingRight: theme.spacing(2),\r\n        fontSize: '75px',\r\n    },\r\n    iconRefreshLarge: {\r\n        fontSize: '75px',\r\n    },\r\n    iconRefreshSmall: {\r\n        fontSize: '30px',\r\n    },\r\n}));\r\n\r\nData.propTypes = {\r\n    location: PropTypes.any,\r\n};\r\n\r\n//Needs scenario id\r\nconst endpointGET = '/student_info?scenario_id=';\r\n\r\nexport default function Data(props) {\r\n    const classes = useStyles();\r\n\r\n    const location = useLocation();\r\n    const scenarioIDFromURL = location.pathname.split('/').pop();\r\n    const scenario_ID = props.location.data\r\n        ? props.location.data.SCENARIO\r\n        : scenarioIDFromURL;\r\n\r\n    const title = 'Student Data';\r\n    const [open, setOpen] = useState(false);\r\n    const [selectedResponseData, setSelectedResponseData] = useState({});\r\n\r\n    const [studentList, setStudentList] = useState({\r\n        data: null,\r\n        loading: true,\r\n        error: null,\r\n    });\r\n\r\n    let getData = () => {\r\n        get(setStudentList, endpointGET + scenario_ID);\r\n    };\r\n\r\n    useEffect(getData, []);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const WhiteTextTypography = withStyles({\r\n        root: {\r\n            color: '#FFFFFF',\r\n        },\r\n    })(Typography);\r\n\r\n    const NavBar = (\r\n        <div>\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\">\r\n                <Toolbar>\r\n                    <Box display=\"flex\" flexGrow={1}>\r\n                        <Typography variant=\"h4\" noWrap>\r\n                            Student Data\r\n                        </Typography>\r\n                    </Box>\r\n\r\n                    <Button\r\n                        component={Link}\r\n                        to={{\r\n                            pathname: '/dashboard',\r\n                        }}\r\n                        className={classes.exitButton}\r\n                    >\r\n                        <WhiteTextTypography noWrap>\r\n                            Return to Dashboard\r\n                        </WhiteTextTypography>\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n\r\n    if (studentList.loading) {\r\n        return (\r\n            <div>\r\n                {NavBar}\r\n                <div style={{ marginTop: '100px' }}>\r\n                    <LoadingSpinner />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (studentList.error) {\r\n        return (\r\n            <div className={classes.issue}>\r\n                {NavBar}\r\n\r\n                <div className={classes.container}>\r\n                    <ErrorIcon className={classes.iconError} />\r\n                    <Typography align=\"center\" variant=\"h3\">\r\n                        Error in fetching Student Data.\r\n                    </Typography>\r\n                </div>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={getData}>\r\n                    <RefreshIcon className={classes.iconRefreshLarge} />\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" className={classes.container}>\r\n            {NavBar}\r\n\r\n            <StudentResponseDialog\r\n                open={open}\r\n                handleClickOpen={handleClickOpen}\r\n                handleClose={handleClose}\r\n                setSelectedResponseData={setSelectedResponseData}\r\n                selectedResponseData={selectedResponseData}\r\n            />\r\n            <MaterialTable\r\n                icons={tableIcons}\r\n                title={title}\r\n                options={{\r\n                    exportButton: true,\r\n                }}\r\n                actions={[\r\n                    {\r\n                        icon: () => <RateReviewIcon />,\r\n                        tooltip: 'View Student Response',\r\n                        onClick: (event, rowData) => {\r\n                            setOpen(true);\r\n                            setSelectedResponseData(rowData);\r\n                        },\r\n                    },\r\n                ]}\r\n                columns={[\r\n                    { title: 'Name', field: 'NAME' },\r\n                    { title: 'Date Taken', field: 'DATE_TAKEN' },\r\n                    { title: 'Age', field: 'AGE', type: 'numeric' },\r\n                    { title: 'Grade', field: 'GRADE' },\r\n                    { title: 'Gender', field: 'GENDER' },\r\n                    { title: 'Race', field: 'RACE' },\r\n                    { title: 'Major', field: 'MAJOR' },\r\n                ]}\r\n                data={studentList.data}\r\n            />\r\n            <Box className={classes.copyright}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Toolbar, Typography, Button } from '@material-ui/core/';\r\nimport { Link } from 'react-router-dom';\r\nimport WhiteLogo from '../../shared/WhiteLogo.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        margin: theme.spacing(0),\r\n        padding: theme.spacing(0),\r\n    },\r\n    logo: {\r\n        height: '60px',\r\n        margin: theme.spacing(1),\r\n        marginRight: '15px',\r\n        '@media (max-width:500px)': {\r\n            marginRight: '5px',\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        '@media (max-width:500px)': {\r\n            fontSize: '15px',\r\n        },\r\n    },\r\n    signupButton: {\r\n        backgroundColor: 'white',\r\n        marginRight: theme.spacing(3),\r\n        padding: theme.spacing(1.5),\r\n        paddingBottom: 0,\r\n        paddingTop: 0,\r\n        textTransform: 'unset',\r\n        borderStyle: 'solid',\r\n        borderColor: 'white',\r\n        border: 2,\r\n        '@media (max-width:500px)': {\r\n            marginRight: theme.spacing(0.5),\r\n            padding: theme.spacing(1),\r\n        },\r\n    },\r\n    loginButton: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        marginRight: theme.spacing(3),\r\n        padding: theme.spacing(1.5),\r\n        paddingBottom: 0,\r\n        paddingTop: 0,\r\n        textTransform: 'unset',\r\n        borderStyle: 'solid',\r\n        borderColor: 'white',\r\n        border: 2,\r\n        '@media (max-width:500px)': {\r\n            marginRight: theme.spacing(0.5),\r\n            padding: theme.spacing(1),\r\n        },\r\n    },\r\n    signupButtonText: {\r\n        color: theme.palette.primary.main,\r\n        '@media (max-width:500px)': {\r\n            fontSize: '13px',\r\n        },\r\n    },\r\n    loginButtonText: {\r\n        color: 'white',\r\n        '@media (max-width:500px)': {\r\n            fontSize: '13px',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function HomepageNavBar() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <img\r\n                        src={WhiteLogo}\r\n                        alt=\"EthismLogo\"\r\n                        className={classes.logo}\r\n                    />\r\n                    <Typography className={classes.title} variant=\"h5\">\r\n                        Ethisim\r\n                    </Typography>\r\n\r\n                    <Button\r\n                        component={Link}\r\n                        to={'/signup'}\r\n                        className={classes.signupButton}\r\n                        variant=\"contained\"\r\n                    >\r\n                        <Typography\r\n                            variant=\"h6\"\r\n                            className={classes.signupButtonText}\r\n                        >\r\n                            Sign Up\r\n                        </Typography>\r\n                    </Button>\r\n\r\n                    <Button\r\n                        component={Link}\r\n                        to={'/login'}\r\n                        className={classes.loginButton}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        m={-2}\r\n                    >\r\n                        <Typography\r\n                            className={classes.loginButtonText}\r\n                            variant=\"h6\"\r\n                        >\r\n                            Log In\r\n                        </Typography>\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Box,\r\n    Container,\r\n    Typography,\r\n    TextField,\r\n    Button,\r\n} from '@material-ui/core';\r\nimport Copyright from '../components/Copyright';\r\nimport HomepageNavBar from '../components/HomepageComponents/HomepageNavBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: '100%',\r\n        width: '100%',\r\n        minHeight: '100vh',\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    studentAccessContainer: {\r\n        marginTop: '0',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n    },\r\n    ethisimIntroContainer: {\r\n        marginTop: theme.spacing(4),\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n    },\r\n    textField: {\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    accessButton: {\r\n        marginTop: theme.spacing(2),\r\n        width: '225px',\r\n        textTransform: 'unset',\r\n        borderStyle: 'solid',\r\n        borderColor: 'white',\r\n        border: 2,\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(3),\r\n    },\r\n    copyright: {\r\n        color: 'white',\r\n        paddingBottom: theme.spacing(2),\r\n        '@media (min-height:500px)': {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            bottom: '0px',\r\n            width: '100%',\r\n            position: 'absolute',\r\n        },\r\n    },\r\n}));\r\n\r\nconst ValidationTextField = withStyles({\r\n    root: {\r\n        width: '300px',\r\n        color: 'white',\r\n        '& .MuiOutlinedInput-root': {\r\n            '&:hover fieldset': {\r\n                borderColor: 'white',\r\n                borderWidth: '2',\r\n            },\r\n        },\r\n        '& .MuiFormLabel-root': {\r\n            color: 'white',\r\n        },\r\n        '& .MuiInputBase-root': {\r\n            color: 'white',\r\n        },\r\n        '& input:valid + fieldset': {\r\n            borderColor: 'white',\r\n            borderWidth: 2,\r\n        },\r\n        '& input:invalid + fieldset': {\r\n            borderColor: 'white',\r\n            borderWidth: 2,\r\n        },\r\n        '& input:valid:focus + fieldset': {\r\n            color: 'white',\r\n            borderColor: 'white',\r\n            borderLeftWidth: 6,\r\n            padding: '4px !important', // override inline-style\r\n        },\r\n    },\r\n})(TextField);\r\n\r\nfunction StudentAccess() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Container className={classes.studentAccessContainer}>\r\n                <form\r\n                    className={classes.textField}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <ValidationTextField\r\n                        label=\"Enter Class Code\"\r\n                        id=\"Enter Class Code\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                </form>\r\n                <Button\r\n                    className={classes.accessButton}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                >\r\n                    <Typography variant=\"h5\" display=\"block\" noWrap>\r\n                        Join\r\n                    </Typography>\r\n                </Button>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst WhiteTextTypography = withStyles({\r\n    root: {\r\n        color: '#FFFFFF',\r\n    },\r\n})(Typography);\r\n\r\nfunction EthisimIntro() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.ethisimIntroContainer}>\r\n            <WhiteTextTypography variant=\"h3\" align=\"center\">\r\n                Convenient Ethics Simulations\r\n            </WhiteTextTypography>\r\n            <WhiteTextTypography align=\"center\" className={classes.margin}>\r\n                Ethisim allows you to easily create and assign ethics\r\n                <br />\r\n                simulations. Run them for a participation grade, or\r\n                <br />\r\n                develop them further into longer discussions for class.\r\n                <br />\r\n            </WhiteTextTypography>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Homepage() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <HomepageNavBar />\r\n            <StudentAccess />\r\n            <EthisimIntro />\r\n            <Box className={classes.copyright}>\r\n                <Copyright />\r\n            </Box>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\r\nimport Signup from './pages/signup';\r\nimport Login from './pages/login';\r\nimport Dashboard from './pages/dashboard';\r\nimport Editor from './pages/editor';\r\nimport Data from './pages/data';\r\nimport Homepage from './pages/homepage';\r\n\r\nexport default function App() {\r\n    return (\r\n        <Router>\r\n            <Route exact path=\"/\">\r\n                <Redirect to=\"/home\" />\r\n            </Route>\r\n            <Route path=\"/home\" component={Homepage} />\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/signup\" component={Signup} />\r\n            <Route path=\"/dashboard\" component={Dashboard} />\r\n            <Route\r\n                path=\"/editor/:id\"\r\n                render={(props) => <Editor {...props} />}\r\n            />\r\n            <Route path=\"/data/:id\" render={(props) => <Data {...props} />} />\r\n        </Router>\r\n    );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.0/8 are considered localhost for IPv4.\r\n        window.location.hostname.match(\r\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n        )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null &&\r\n                    contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n                registration.unregister();\r\n            })\r\n            .catch((error) => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#881c1c',\r\n            light: '#F7E7E7',\r\n        },\r\n    },\r\n});\r\n\r\nReactDOM.render(\r\n    <MuiThemeProvider theme={theme}>\r\n        <App />\r\n    </MuiThemeProvider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}