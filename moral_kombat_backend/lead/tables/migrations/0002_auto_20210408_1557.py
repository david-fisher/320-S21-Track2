# Generated by Django 2.2.12 on 2021-04-08 15:57

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('tables', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='courses_to_scenario',
            fields=[
                ('COURSE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='reflections_taken1', serialize=False, to='tables.courses')),
                ('PERMISSION', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='pages_to_scenario',
            fields=[
                ('page_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='stakeholder_page1', serialize=False, to='tables.pages')),
            ],
        ),
        migrations.CreateModel(
            name='professors_to_courses',
            fields=[
                ('PROFESSOR', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='professors_to_courses1', serialize=False, to='tables.professors')),
                ('COURSE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='professors_to_courses2', to='tables.courses')),
            ],
            options={
                'unique_together': {('PROFESSOR', 'COURSE')},
            },
        ),
        migrations.CreateModel(
            name='professors_to_scenario',
            fields=[
                ('PROFESSOR', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='professors_to_scenario1', serialize=False, to='tables.professors')),
                ('PERMISSION', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='reflection_question_to_page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='response_to_action_page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='responses_to_conversations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SCORE', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
            ],
        ),
        migrations.CreateModel(
            name='stakeholder_to_page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='students_to_course',
            fields=[
                ('STUDENT', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='students_to_course1', serialize=False, to='tables.students')),
                ('COURSE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students_to_couse2', to='tables.courses')),
            ],
            options={
                'unique_together': {('STUDENT', 'COURSE')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='assigned_to',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='assigned_to',
            name='SCENARIO',
        ),
        migrations.RemoveField(
            model_name='assigned_to',
            name='STUDENT',
        ),
        migrations.RemoveField(
            model_name='conversations_had',
            name='CONVERSATION',
        ),
        migrations.RemoveField(
            model_name='conversations_had',
            name='COURSE',
        ),
        migrations.RemoveField(
            model_name='conversations_had',
            name='DATE_TAKEN',
        ),
        migrations.RemoveField(
            model_name='conversations_had',
            name='SCENARIO',
        ),
        migrations.RemoveField(
            model_name='conversations_had',
            name='STAKEHOLDER',
        ),
        migrations.RemoveField(
            model_name='conversations_had',
            name='STUDENT',
        ),
        migrations.AlterUniqueTogether(
            name='professors_teach',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='professors_teach',
            name='COURSE',
        ),
        migrations.RemoveField(
            model_name='professors_teach',
            name='PROFESSOR',
        ),
        migrations.AlterUniqueTogether(
            name='stakeholder_page',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='stakeholder_page',
            name='PAGE',
        ),
        migrations.RemoveField(
            model_name='stakeholder_page',
            name='STAKEHOLDER',
        ),
        migrations.AlterUniqueTogether(
            name='students_in',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='students_in',
            name='COURSE',
        ),
        migrations.RemoveField(
            model_name='students_in',
            name='STUDENT',
        ),
        migrations.RemoveField(
            model_name='professors',
            name='NAME',
        ),
        migrations.RemoveField(
            model_name='students',
            name='NAME',
        ),
        migrations.AddField(
            model_name='generic_page',
            name='VERSION',
            field=models.IntegerField(default=1),
        ),
        migrations.AddField(
            model_name='issues',
            name='SCENARIO_ID',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='scenario_id1', to='tables.scenarios'),
        ),
        migrations.AddField(
            model_name='pages',
            name='BODY',
            field=models.TextField(default='default'),
        ),
        migrations.AddField(
            model_name='professors',
            name='FNAME',
            field=models.CharField(default='default', max_length=1000),
        ),
        migrations.AddField(
            model_name='professors',
            name='LNAME',
            field=models.CharField(default='default', max_length=1000),
        ),
        migrations.AddField(
            model_name='reflection_questions',
            name='VERSION',
            field=models.IntegerField(default=1),
        ),
        migrations.AddField(
            model_name='reflections_taken',
            name='RESPONSE_ID',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='conversations_had5', to='tables.responses'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='responses',
            name='CHOICE',
            field=models.TextField(default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='responses',
            name='PAGE',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='responses3', to='tables.pages'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='responses',
            name='RESPONSE',
            field=models.IntegerField(default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='responses',
            name='RESPONSE_ID',
            field=models.AutoField(default=None, editable=False, primary_key=True, serialize=False),
        ),
        migrations.AddField(
            model_name='scenarios',
            name='SCENARIO_ID',
            field=models.IntegerField(default=1, primary_key=True, serialize=False),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='scenarios_for',
            name='SCENARIO_ID',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='scenarios_for1', serialize=False, to='tables.scenarios'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='student_times',
            name='SCENARIO_ID',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='student_times2', to='tables.scenarios'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='students',
            name='FNAME',
            field=models.CharField(default='default', max_length=100),
        ),
        migrations.AddField(
            model_name='students',
            name='LNAME',
            field=models.CharField(default='default', max_length=100),
        ),
        migrations.AlterField(
            model_name='action_page',
            name='CHOICE',
            field=models.TextField(default='default'),
        ),
        migrations.AlterField(
            model_name='action_page',
            name='id',
            field=models.AutoField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='demographics',
            name='GRADE',
            field=models.IntegerField(),
        ),
        migrations.AlterField(
            model_name='demographics',
            name='STUDENT',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='demographics', serialize=False, to='tables.students'),
        ),
        migrations.AlterField(
            model_name='generic_page',
            name='PAGE',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generic_page1', to='tables.pages', unique=True),
        ),
        migrations.AlterField(
            model_name='generic_page',
            name='id',
            field=models.AutoField(editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='issues',
            name='IMPORTANCE_SCORE',
            field=models.IntegerField(validators=[django.core.validators.MinValueValidator(0.0)]),
        ),
        migrations.AlterField(
            model_name='pages',
            name='NEXT_PAGE',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='pages2', to='tables.pages', unique=True),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='pages',
            name='PAGE',
            field=models.AutoField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='pages',
            name='VERSION',
            field=models.IntegerField(default=1, unique=True),
        ),
        migrations.AlterField(
            model_name='reflection_questions',
            name='REFLECTION_QUESTION',
            field=models.TextField(unique=True),
        ),
        migrations.AlterField(
            model_name='reflection_questions',
            name='id',
            field=models.AutoField(editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='reflections_taken',
            name='REFLECTIONS',
            field=models.TextField(default='default'),
        ),
        migrations.AlterField(
            model_name='responses',
            name='VERSION',
            field=models.IntegerField(default=1),
        ),
        migrations.AlterField(
            model_name='scenarios',
            name='SCENARIO',
            field=models.IntegerField(unique=True),
        ),
        migrations.AlterField(
            model_name='scenarios',
            name='VERSION',
            field=models.IntegerField(default=1, unique=True),
        ),
        migrations.AlterField(
            model_name='scenarios_for',
            name='VERSION',
            field=models.IntegerField(default=1),
        ),
        migrations.AlterField(
            model_name='stakeholders',
            name='SCENARIO',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='stakeholders1', to='tables.scenarios'),
        ),
        migrations.AlterField(
            model_name='stakeholders',
            name='VERSION',
            field=models.IntegerField(default=1),
        ),
        migrations.AlterField(
            model_name='student_times',
            name='COURSE',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_times3', to='tables.courses'),
        ),
        migrations.AlterField(
            model_name='student_times',
            name='PAGE',
            field=models.IntegerField(),
        ),
        migrations.AlterUniqueTogether(
            name='action_page',
            unique_together={('PAGE', 'CHOICE', 'id', 'RESULT_PAGE')},
        ),
        migrations.AlterUniqueTogether(
            name='conversations',
            unique_together=set(),
        ),
        migrations.AlterUniqueTogether(
            name='generic_page',
            unique_together={('PAGE', 'BODY', 'id', 'VERSION')},
        ),
        migrations.AlterUniqueTogether(
            name='issues',
            unique_together=set(),
        ),
        migrations.AlterUniqueTogether(
            name='pages',
            unique_together={('PAGE', 'VERSION')},
        ),
        migrations.AlterUniqueTogether(
            name='reflection_questions',
            unique_together={('PAGE', 'REFLECTION_QUESTION', 'id')},
        ),
        migrations.AlterUniqueTogether(
            name='reflections_taken',
            unique_together=set(),
        ),
        migrations.AlterUniqueTogether(
            name='responses',
            unique_together={('RESPONSE', 'STUDENT', 'SCENARIO', 'PAGE', 'COURSE', 'DATE_TAKEN')},
        ),
        migrations.AlterUniqueTogether(
            name='scenarios_for',
            unique_together={('SCENARIO_ID', 'COURSE')},
        ),
        migrations.AlterUniqueTogether(
            name='student_times',
            unique_together={('STUDENT', 'SCENARIO_ID', 'COURSE', 'DATE_TAKEN', 'PAGE')},
        ),
        migrations.DeleteModel(
            name='actions_taken',
        ),
        migrations.DeleteModel(
            name='assigned_to',
        ),
        migrations.DeleteModel(
            name='conversations_had',
        ),
        migrations.DeleteModel(
            name='professors_teach',
        ),
        migrations.DeleteModel(
            name='stakeholder_page',
        ),
        migrations.DeleteModel(
            name='students_in',
        ),
        migrations.AddField(
            model_name='stakeholder_to_page',
            name='PAGE',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stakeholder_page5', to='tables.pages'),
        ),
        migrations.AddField(
            model_name='stakeholder_to_page',
            name='STAKEHOLDER',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stakeholder_page6', to='tables.stakeholders'),
        ),
        migrations.AddField(
            model_name='responses_to_conversations',
            name='CONVERSATION',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responsesTC3', to='tables.conversations'),
        ),
        migrations.AddField(
            model_name='responses_to_conversations',
            name='RESPONSE_ID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responsesTC1', to='tables.responses'),
        ),
        migrations.AddField(
            model_name='responses_to_conversations',
            name='STAKEHOLDER',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responsesTC2', to='tables.stakeholders'),
        ),
        migrations.AddField(
            model_name='response_to_action_page',
            name='ACTION_PAGE',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_page3', to='tables.action_page'),
        ),
        migrations.AddField(
            model_name='response_to_action_page',
            name='RESPONSE_ID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_page2', to='tables.responses'),
        ),
        migrations.AddField(
            model_name='reflection_question_to_page',
            name='page_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reflection_questions_to_page1', to='tables.pages'),
        ),
        migrations.AddField(
            model_name='reflection_question_to_page',
            name='page_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reflection_questions_to_page4', to='tables.pages', to_field='VERSION'),
        ),
        migrations.AddField(
            model_name='reflection_question_to_page',
            name='reflection_question_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reflection_questions_to_page3', to='tables.reflection_questions'),
        ),
        migrations.AddField(
            model_name='reflection_question_to_page',
            name='reflection_question_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reflection_questions_to_page2', to='tables.reflection_questions', to_field='REFLECTION_QUESTION'),
        ),
        migrations.AddField(
            model_name='professors_to_scenario',
            name='SCENARIO',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='professors_to_scenario2', to='tables.scenarios'),
        ),
        migrations.AddField(
            model_name='pages_to_scenario',
            name='page_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stakeholder_page3', to='tables.pages', to_field='VERSION'),
        ),
        migrations.AddField(
            model_name='pages_to_scenario',
            name='scenario_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stakeholder_page2', to='tables.scenarios', to_field='SCENARIO'),
        ),
        migrations.AddField(
            model_name='pages_to_scenario',
            name='scenario_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stakeholder_page4', to='tables.scenarios', to_field='VERSION'),
        ),
        migrations.AddField(
            model_name='courses_to_scenario',
            name='SCENARIO',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reflections_taken2', to='tables.scenarios'),
        ),
        migrations.RemoveField(
            model_name='issues',
            name='SCENARIO',
        ),
        migrations.RemoveField(
            model_name='pages',
            name='PAGE_BODY',
        ),
        migrations.RemoveField(
            model_name='reflections_taken',
            name='COURSE',
        ),
        migrations.RemoveField(
            model_name='reflections_taken',
            name='DATE_TAKEN',
        ),
        migrations.RemoveField(
            model_name='reflections_taken',
            name='REFLECTION_PAGE',
        ),
        migrations.RemoveField(
            model_name='reflections_taken',
            name='SCENARIO',
        ),
        migrations.RemoveField(
            model_name='reflections_taken',
            name='STUDENT',
        ),
        migrations.RemoveField(
            model_name='reflections_taken',
            name='VERSION',
        ),
        migrations.RemoveField(
            model_name='responses',
            name='id',
        ),
        migrations.RemoveField(
            model_name='scenarios_for',
            name='SCENARIO',
        ),
        migrations.RemoveField(
            model_name='scenarios_for',
            name='id',
        ),
        migrations.RemoveField(
            model_name='student_times',
            name='SCENARIO',
        ),
        migrations.RemoveField(
            model_name='student_times',
            name='VERSION',
        ),
        migrations.AlterUniqueTogether(
            name='stakeholder_to_page',
            unique_together={('PAGE', 'STAKEHOLDER')},
        ),
        migrations.AlterUniqueTogether(
            name='responses_to_conversations',
            unique_together={('RESPONSE_ID', 'CONVERSATION')},
        ),
        migrations.AlterUniqueTogether(
            name='reflection_question_to_page',
            unique_together={('page_id', 'reflection_question_version', 'reflection_question_id', 'page_version')},
        ),
        migrations.AlterUniqueTogether(
            name='professors_to_scenario',
            unique_together={('PROFESSOR', 'SCENARIO')},
        ),
        migrations.AlterUniqueTogether(
            name='pages_to_scenario',
            unique_together={('page_id', 'scenario_id', 'page_version', 'scenario_version')},
        ),
        migrations.AlterUniqueTogether(
            name='courses_to_scenario',
            unique_together={('COURSE', 'SCENARIO')},
        ),
    ]
