# Generated by Django 3.1.7 on 2021-05-04 18:02

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='COURSES',
            fields=[
                ('COURSE', models.AutoField(primary_key=True, serialize=False)),
                ('NAME', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='PAGES',
            fields=[
                ('PAGE', models.IntegerField(unique=True)),
                ('PAGE_TYPE', models.CharField(choices=[('I', 'INTRO'), ('F', 'FEEDBACK'), ('G', 'GENERIC'), ('R', 'REFLECTION'), ('S', 'STAKEHOLDER'), ('A', 'ACTION')], max_length=2)),
                ('PAGE_TITLE', models.CharField(max_length=1000)),
                ('VERSION', models.IntegerField(default=1)),
                ('BODY', models.TextField(blank=True, null=True)),
                ('ID', models.IntegerField(primary_key=True, serialize=False)),
                ('X_COORDINATE', models.IntegerField()),
                ('Y_COORDINATE', models.IntegerField()),
                ('COMPLETED', models.BooleanField(default=False)),
                ('NEXT_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages2', to='tables.pages')),
            ],
        ),
        migrations.CreateModel(
            name='PROFESSORS',
            fields=[
                ('PROFESSOR', models.TextField(primary_key=True, serialize=False)),
                ('FNAME', models.TextField()),
                ('LNAME', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='QUESTIONS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('QUESTION', models.IntegerField()),
                ('VERSION', models.IntegerField()),
                ('POINTS', models.IntegerField()),
                ('QUESTION_TEXT', models.TextField(blank=True)),
                ('QUESTION_SUMMARY', models.TextField(blank=True)),
            ],
            options={
                'unique_together': {('QUESTION', 'VERSION')},
            },
        ),
        migrations.CreateModel(
            name='RESPONSES',
            fields=[
                ('RESPONSE_ID', models.AutoField(primary_key=True, serialize=False)),
                ('RESPONSE', models.IntegerField()),
                ('VERSION', models.IntegerField()),
                ('DATE_TAKEN', models.DateField(auto_now_add=True)),
                ('CHOICE', models.TextField()),
                ('COURSE', models.ForeignKey(db_column='course', on_delete=django.db.models.deletion.CASCADE, to='tables.courses')),
                ('PAGE', models.ForeignKey(db_column='page', on_delete=django.db.models.deletion.CASCADE, to='tables.pages')),
            ],
        ),
        migrations.CreateModel(
            name='SCENARIOS',
            fields=[
                ('SCENARIO_ID', models.AutoField(primary_key=True, serialize=False)),
                ('SCENARIO', models.IntegerField(default=1)),
                ('VERSION', models.IntegerField(default=1)),
                ('NAME', models.TextField(max_length=50)),
                ('PUBLIC', models.BooleanField(default=False)),
                ('NUM_CONVERSATION', models.IntegerField(default=0)),
                ('IS_FINISHED', models.BooleanField(default=False)),
                ('DATE_CREATED', models.DateField(auto_now_add=True)),
            ],
            options={
                'unique_together': {('SCENARIO', 'VERSION')},
            },
        ),
        migrations.CreateModel(
            name='STAKEHOLDERS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('STAKEHOLDER', models.IntegerField(unique=True)),
                ('VERSION', models.IntegerField()),
                ('NAME', models.TextField()),
                ('DESCRIPTION', models.TextField()),
                ('JOB', models.TextField()),
                ('INTRODUCTION', models.TextField()),
                ('ENABLE_MULTI_CONVO', models.BooleanField()),
                ('SCENARIO', models.ForeignKey(db_column='scenario', on_delete=django.db.models.deletion.CASCADE, to='tables.scenarios')),
            ],
            options={
                'unique_together': {('STAKEHOLDER', 'VERSION')},
            },
        ),
        migrations.CreateModel(
            name='STUDENTS',
            fields=[
                ('STUDENT', models.TextField(primary_key=True, serialize=False)),
                ('FNAME', models.TextField()),
                ('LNAME', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='REFLECTIONS_TAKEN',
            fields=[
                ('REFLECTIONS', models.TextField(blank=True)),
                ('RESPONSE_ID', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='tables.responses')),
            ],
        ),
        migrations.CreateModel(
            name='STUDENTS_TO_COURSE',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('COURSE', models.ForeignKey(db_column='course', on_delete=django.db.models.deletion.CASCADE, to='tables.courses')),
                ('STUDENT', models.ForeignKey(db_column='student', on_delete=django.db.models.deletion.CASCADE, to='tables.students')),
            ],
            options={
                'unique_together': {('STUDENT', 'COURSE')},
            },
        ),
        migrations.CreateModel(
            name='SCENARIOS_FOR',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('VERSION', models.IntegerField()),
                ('COURSE', models.ForeignKey(db_column='course', on_delete=django.db.models.deletion.CASCADE, to='tables.courses')),
                ('SCENARIO', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tables.scenarios')),
            ],
            options={
                'unique_together': {('SCENARIO', 'COURSE')},
            },
        ),
        migrations.AddField(
            model_name='responses',
            name='SCENARIO',
            field=models.ForeignKey(db_column='scenario', on_delete=django.db.models.deletion.CASCADE, to='tables.scenarios'),
        ),
        migrations.AddField(
            model_name='responses',
            name='STUDENT',
            field=models.ForeignKey(db_column='student', on_delete=django.db.models.deletion.CASCADE, to='tables.students'),
        ),
        migrations.CreateModel(
            name='REFLECTION_QUESTIONS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('REFLECTION_QUESTION_ID', models.IntegerField()),
                ('REFLECTION_QUESTION', models.TextField()),
                ('VERSION', models.IntegerField()),
            ],
            options={
                'unique_together': {('REFLECTION_QUESTION_ID', 'VERSION')},
            },
        ),
        migrations.CreateModel(
            name='PROFESSORS_TO_COURSES',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('COURSE', models.ForeignKey(db_column='course', on_delete=django.db.models.deletion.CASCADE, to='tables.courses')),
                ('PROFESSOR', models.ForeignKey(db_column='professor', on_delete=django.db.models.deletion.CASCADE, to='tables.professors')),
            ],
            options={
                'unique_together': {('PROFESSOR', 'COURSE')},
            },
        ),
        migrations.AddField(
            model_name='pages',
            name='SCENARIO',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages1', to='tables.scenarios'),
        ),
        migrations.CreateModel(
            name='ISSUES',
            fields=[
                ('ISSUE', models.AutoField(default=None, editable=False, primary_key=True, serialize=False)),
                ('NAME', models.CharField(max_length=1000)),
                ('IMPORTANCE_SCORE', models.IntegerField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('SCENARIO_ID', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='scenario_id1', to='tables.scenarios')),
            ],
        ),
        migrations.CreateModel(
            name='DEMOGRAPHICS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AGE', models.SmallIntegerField()),
                ('GRADE', models.CharField(choices=[('0', 'Other'), ('1', 'Freshmen'), ('2', 'Sophomore'), ('3', 'Junior'), ('4', 'Senior')], max_length=1)),
                ('GENDER', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('OT', 'Other')], max_length=2)),
                ('RACE', models.CharField(max_length=30)),
                ('MAJOR', models.CharField(max_length=30)),
                ('STUDENT', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='demographics', to='tables.students', unique=True)),
            ],
        ),
        migrations.AddField(
            model_name='courses',
            name='STUDENTS',
            field=models.ManyToManyField(related_name='COURSES', through='tables.STUDENTS_TO_COURSE', to='tables.STUDENTS'),
        ),
        migrations.AddField(
            model_name='courses',
            name='professors',
            field=models.ManyToManyField(related_name='COURSES', through='tables.PROFESSORS_TO_COURSES', to='tables.PROFESSORS'),
        ),
        migrations.AddField(
            model_name='courses',
            name='scenarios',
            field=models.ManyToManyField(related_name='COURSES', through='tables.SCENARIOS_FOR', to='tables.SCENARIOS'),
        ),
        migrations.CreateModel(
            name='CONVERSATIONS',
            fields=[
                ('CONVERSATION', models.AutoField(primary_key=True, serialize=False)),
                ('QUESTION', models.TextField()),
                ('RESPONSE', models.TextField()),
                ('STAKEHOLDER', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations1', to='tables.stakeholders', to_field='STAKEHOLDER')),
            ],
        ),
        migrations.CreateModel(
            name='ACTION_PAGE',
            fields=[
                ('ACTION_PAGE_ID', models.IntegerField()),
                ('ID', models.IntegerField(primary_key=True, serialize=False)),
                ('VERSION', models.IntegerField()),
                ('CHOICE', models.TextField()),
                ('RESULT_PAGE', models.IntegerField()),
                ('PAGE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_page1', to='tables.pages')),
            ],
            options={
                'unique_together': {('ACTION_PAGE_ID', 'VERSION')},
            },
        ),
        migrations.CreateModel(
            name='STUDENT_TIMES',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('DATE_TAKEN', models.DateField(auto_now=True)),
                ('PAGE', models.IntegerField()),
                ('START_TIME', models.DateField(auto_now_add=True)),
                ('END_TIME', models.DateField(blank=True, null=True)),
                ('COURSE', models.ForeignKey(db_column='course', on_delete=django.db.models.deletion.CASCADE, to='tables.courses')),
                ('SCENARIO_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tables.scenarios')),
                ('STUDENT', models.ForeignKey(db_column='student', on_delete=django.db.models.deletion.CASCADE, to='tables.students')),
            ],
            options={
                'unique_together': {('STUDENT', 'COURSE', 'SCENARIO_ID')},
            },
        ),
        migrations.CreateModel(
            name='STAKEHOLDERS_TO_QUESTIONS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('QUESTION', models.ForeignKey(db_column='question', on_delete=django.db.models.deletion.CASCADE, to='tables.questions')),
                ('STAKEHOLDER', models.ForeignKey(db_column='stakeholder', on_delete=django.db.models.deletion.CASCADE, to='tables.stakeholders')),
            ],
            options={
                'unique_together': {('STAKEHOLDER', 'QUESTION')},
            },
        ),
        migrations.CreateModel(
            name='STAKEHOLDER_TO_PAGE',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PAGE', models.ForeignKey(db_column='page', on_delete=django.db.models.deletion.CASCADE, to='tables.pages')),
                ('STAKEHOLDER', models.ForeignKey(db_column='stakeholder', on_delete=django.db.models.deletion.CASCADE, to='tables.stakeholders')),
            ],
            options={
                'unique_together': {('PAGE', 'STAKEHOLDER')},
            },
        ),
        migrations.CreateModel(
            name='RESPONSES_TO_CONVERSATIONS',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('STAKEHOLDER_VERSION', models.IntegerField()),
                ('SCORE', models.DecimalField(decimal_places=2, max_digits=5)),
                ('CONVERSATION', models.ForeignKey(db_column='conversation', on_delete=django.db.models.deletion.CASCADE, to='tables.conversations')),
                ('RESPONSE_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tables.responses')),
                ('STAKEHOLDER', models.ForeignKey(db_column='stakeholder', on_delete=django.db.models.deletion.CASCADE, to='tables.stakeholders')),
            ],
            options={
                'unique_together': {('RESPONSE_ID', 'CONVERSATION')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='responses',
            unique_together={('RESPONSE', 'STUDENT', 'SCENARIO', 'PAGE', 'COURSE', 'DATE_TAKEN')},
        ),
        migrations.CreateModel(
            name='RESPONSE_TO_ACTION_PAGE',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ACTION_PAGE', models.ForeignKey(db_column='action_page', on_delete=django.db.models.deletion.CASCADE, to='tables.action_page')),
                ('RESPONSE_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tables.responses')),
            ],
            options={
                'unique_together': {('RESPONSE_ID', 'ACTION_PAGE')},
            },
        ),
        migrations.CreateModel(
            name='REFLECTION_QUESTION_TO_PAGE',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PAGE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tables.pages')),
                ('REFLECTION_QUESTION_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tables.reflection_questions')),
            ],
            options={
                'unique_together': {('REFLECTION_QUESTION_ID', 'PAGE')},
            },
        ),
        migrations.CreateModel(
            name='PROFESSORS_TO_SCENARIO',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PERMISSION', models.IntegerField()),
                ('PROFESSOR', models.ForeignKey(db_column='professor', on_delete=django.db.models.deletion.CASCADE, to='tables.professors')),
                ('SCENARIO', models.ForeignKey(db_column='scenario', on_delete=django.db.models.deletion.CASCADE, to='tables.scenarios')),
            ],
            options={
                'unique_together': {('PROFESSOR', 'SCENARIO')},
            },
        ),
        migrations.CreateModel(
            name='PAGES_TO_SCENARIO',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PAGE_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stakeholder_page1', to='tables.pages', to_field='PAGE')),
                ('SCENARIO_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stakeholder_page2', to='tables.scenarios')),
            ],
            options={
                'unique_together': {('PAGE_ID', 'SCENARIO_ID')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='pages',
            unique_together={('PAGE', 'VERSION')},
        ),
        migrations.CreateModel(
            name='GENERIC_PAGE',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('GENERIC_PAGE_ID', models.IntegerField()),
                ('BODY', models.TextField()),
                ('VERSION', models.IntegerField()),
                ('PAGE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generic_page1', to='tables.pages', to_field='PAGE')),
            ],
            options={
                'unique_together': {('GENERIC_PAGE_ID', 'VERSION')},
            },
        ),
        migrations.CreateModel(
            name='COVERAGE',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('COVERAGE_SCORE', models.DecimalField(decimal_places=2, max_digits=5)),
                ('ISSUE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coverage1', to='tables.issues')),
                ('STAKEHOLDER', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coverage2', to='tables.stakeholders', to_field='STAKEHOLDER')),
            ],
            options={
                'unique_together': {('STAKEHOLDER', 'ISSUE')},
            },
        ),
        migrations.CreateModel(
            name='COURSES_TO_SCENARIO',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PERMISSION', models.IntegerField()),
                ('COURSE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tables.courses')),
                ('SCENARIO', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tables.scenarios')),
            ],
            options={
                'unique_together': {('COURSE', 'SCENARIO')},
            },
        ),
    ]
