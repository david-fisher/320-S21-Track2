{"version":3,"sources":["redux/reducers.js","pages/chart/chart.js","constants/config.js","pages/components/tabs.js","pages/summary.js","pages/components/DashboardComponents/SimScenarioCard.js","pages/components/Copyright.js","pages/components/DashboardComponents/DropdownMenu.js","pages/components/DashboardComponents/DashboardNavbar.js","pages/sim_dashboard.js","universalHTTPRequests/get.js","pages/home.js","pages/chartTest.js","pages/components/stepper.js","pages/components/infoModal.js","pages/components/gatheredList.js","pages/components/htmlRenderer.js","pages/components/q&a.js","pages/conclusion.js","pages/components/Sim_videoPlayer.js","pages/introduction.js","pages/projectAssignment.js","pages/reflection.js","pages/components/checkbox.js","pages/action.js","pages/gatheredInformation.js","pages/conversation.js","pages/stakeholders.js","pages/components/feedback_tabs.js","pages/feedback.js","pages/simulationWindow.js","Nav.js","serviceWorker.js","index.js"],"names":["initialCompletedStakeholders","stakeholdersById","stakeholderIds","playerReducer","combineReducers","completedStakeholders","state","action","type","Radar","input","coverage","summary","chartContainer","useRef","useState","setChartInstance","chartConfig","data","labels","Object","keys","datasets","label","backgroundColor","colorLimit","values","options","scale","ticks","beginAtZero","min","display","useEffect","current","newChartInstance","Chart","ref","id","value","BASE_URL","TextTypography","withStyles","root","color","whiteSpace","Typography","TabPanel","props","children","index","other","role","hidden","aria-labelledby","Box","p","a11yProps","useStyles","makeStyles","theme","flexGrow","width","palette","background","paper","textBox","overflowY","maxHeight","window","innerHeight","marginTop","spacing","borderRadius","boxShadow","issuesText","ScrollableTabsButtonAuto","classes","React","setValue","className","mt","AppBar","position","Tabs","onChange","event","newValue","indicatorColor","textColor","variant","scrollButtons","aria-label","Tab","Summary","pages","setPages","setActivePage","activePage","Grid","container","direction","justify","alignItems","align","gutterBottom","item","style","marginRight","Button","disableElevation","onClick","finalAction","visited","prevPages","copy","prevPage","feedback","lg","scenarioContainer","minHeight","minWidth","borderStyle","borderColor","primary","light","border","maxWidth","buttonContainer","button","top","buttonText","textTransform","SimScenarioCard","name","description","due_date","startButton","component","Link","to","pathname","noWrap","due","Date","toString","key","xs","Card","CardContent","Copyright","getFullYear","SimpleMenu","anchorEl","setAnchorEl","handleClose","IconButton","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuItem","DashboardNavbar","CssBaseline","Toolbar","flexDirection","copyright","margin","issue","errorContainer","iconError","paddingRight","fontSize","iconRefreshLarge","iconRefreshSmall","marginBottom","Dashboard","setScenario","openScenarios","setOpenScenarios","loading","error","setFetchScenariosResponse","shouldFetch","console","log","setResponse","endpoint","onError","onSuccess","axios","get","headers","studentID","then","resp","catch","err","res","scenarios","slice","openScenariosCards","map","scenario","Container","Home","RadarTest","setInput","testInput1","setTestInput1","testInput2","setTestInput2","testInput3","setTestInput3","scenarioScoringMatrix","Tim","issue1","issue2","issue3","Song","totalEmphasis","conversant","totalEmphasisF","studentEmphasis","coverageF","studentEmphasisF","summaryValue","ethcicalImportance","summaryValueF","e","preventDefault","target","actionsContainer","resetContainer","padding","step","active","completed","disabled","VerticalLinearStepper","pageNumber","activeStep","steps","navigatePageFunc","stepArr","i","buttonName","charAt","j","length","toUpperCase","push","getSteps","pageName","ml","Stepper","orientation","Step","StepLabel","StepIconProps","StepContent","getStepContent","Paper","square","elevation","font","createMuiTheme","main","DialogTitle","closeButton","right","disableTypography","DialogContent","MuiDialogContent","MuiDialogActions","InfoModal","getContent","info","setOpen","modalTitle","content","setContent","ThemeProvider","Dialog","fullWidth","dividers","height","InfoGatheredList","showList","setShowContent","listContentById","useContext","GatheredInfoContext","infos","ScenariosContext","getListContent","a","undefined","mockHttpRequest","method","url","scenarioID","currentScenarioID","response","body_text","startsWith","innerWidth","size","setSize","handleResize","addEventListener","removeEventListener","useWindowSize","show","disableRipple","List","filter","pageId","ListItem","HTMLRenderer","sanitizedHTML","html","replace","dangerouslySetInnerHTML","__html","textAlign","StateTextFields","previouslyResponded","prevResponses","responses","setResponses","setError","header","helperText","setHelperText","questions","reduce","prev","question","qAndA","questionArr","arr","text","reses","newObj","rows","cols","resize","getQuestions","onSubmit","includes","handleResponse","nextPageName","nextPage","alert","FormHelperText","Conclusion","body","setBody","history","useHistory","finalReflection","m","videoBox","Sim_videoPlayer","vid_url","showVid","setShowVid","paddingLeft","src","frameborder","allow","allowfullscreen","title","defaulProps","Introduction","setGatheredInfo","introText","setIntroText","marginLeft","projectAssignment","newInfos","dataHeading","dataText","ProjectAssignment","task","setTask","headings","subtext","temp","temp2","String","fromCharCode","getUpperText","introduction","initialReflection","Reflection","content_url","res_url","nextPageID","prevPageID","goToPage","pageID","bodyText","setBodyText","prompts","setPrompts","promptResponses","setPromptResponses","curr","prompt_num","formControl","ErrorRadios","choices","setChoices","x","option","option_id","FormControl","RadioGroup","choice","FormControlLabel","control","Radio","Action","actionQuestion","setActionQuestion","questionID","setQuestionID","request_data","GatheredInformation","initialAction","stakeholders","Conversation","showStakeholders","setShowStakeholders","stakeholder","monologue","setMonologue","stakeholderID","conversation_text","Stakeholders","useTheme","setStakeholders","conversationLimit","setConversationLimit","stakeholdersDisabled","setStakeholdersDisabled","cardStyles","wordBreak","modalOpenToggles","setModalOpenToggles","currentStakeholder","setCurrentStakeholder","numStakeholderTalkedTo","setNumStakeholderTalkedTo","createdCardStyles","stakeholdersGrid","items","designation","styles","cardClass","nameClass","descriptionClass","toggleModal","toggle","newToggles","str","cutoff","newStr","lastSpace","substring","lastIndexOf","ellipses","DialogContentText","newStakeholdersDisabled","ind","findIndex","splice","getStakeholderCards","getStakeholdersGrid","conversation_limit","holders","obj","histResponse","newDisabled","forEach","containsID","stakeholder_id","gatheredInformation","middleReflection","md","sm","href","Feedback","Safety","Salary","Reputation","Privacy","createContext","SimulationWindow","conclusion","infoIdsState","setScenarios","imitateGetCompleteStakeholders","ids","scenarioList","Provider","mb","cloneElement","newScenarios","menuButton","link","textDecoration","Nav","scenariosState","basename","edge","path","exact","location","hostname","match","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.086bd9f3.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\nconst initialCompletedStakeholders = {\n    stakeholdersById: {},\n    stakeholderIds: []\n}\n\nfunction completedStakeholders(state = initialCompletedStakeholders, action) {\n    switch (action.type) {\n        default:\n            return state\n    }\n}\n\nconst playerReducer = combineReducers({\n    completedStakeholders\n});\n\nexport default playerReducer;","import React, { useEffect, useRef, useState } from 'react';\nimport Chart from 'chart.js';\n\n\nfunction Radar({coverage, summary}) {\n    const chartContainer = useRef(null);\n    const [chartInstance, setChartInstance] = useState(null);\n    // state for input\n\n    const chartConfig = onChartChange(summary)\n    useEffect(() => {\n        if (chartContainer && chartContainer.current) {\n            const newChartInstance = new Chart(chartContainer.current, chartConfig);\n            setChartInstance(newChartInstance);\n        }\n    }, [chartContainer]);\n\n    return (\n        <canvas\n            ref={chartContainer}\n            id=\"coverage-plot\"\n        />\n    )\n\n    function colorLimit(value) {\n        if (value < 1.5) {\n            return \"rgba(255, 0, 0, 0.2)\"\n        }\n        else if (value < 2.5) {\n            return \"rgba(255, 255, 0, 0.2)\"\n        }\n        else {\n            return \"rgba(0, 128, 0, 0.2)\"\n        }\n    }\n\n    function onChartChange(input) {\n        return {\n            type: 'radar',\n            data: {\n                //labels: coverage.keys,\n                labels: Object.keys(coverage),\n                datasets: [{\n                    label: \"Student A\",\n                    backgroundColor: colorLimit(input),\n                    data: Object.values(coverage)\n                }]\n            },\n            options: {\n                scale: {\n                    ticks: {\n                        beginAtZero: true,\n                        min: 0,\n                        display: false\n                    }\n                }\n            }\n        };\n    }\n}\n\nexport default Radar;\n","export const BASE_URL = 'ethisim2.cs.umass.edu:5000/api';\nexport const SCENARIO_ID = 1;\nexport const STUDENT_ID = 1;\nexport const DEV_MODE = true;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    withStyles,\n    Typography,\n    Box,\n    Grid,\n    Button,\n    makeStyles,\n  } from \"@material-ui/core\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n\nconst TextTypography = withStyles({\n    root: {\n      color: \"#373a3c\",\n      whiteSpace: \"pre-line\",\n    },\n  })(Typography);\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n  textBox: {\n    overflowY: \"auto\",\n    maxHeight: window.innerHeight * 0.6,\n    marginTop: theme.spacing(0.5),\n    borderRadius: \"5px\",\n    boxShadow: \"0px 0px 2px\",\n  },\n}));\n\nconst issuesText =\n  [\"An ethical dilemma or ethical paradox is a decision-making problem between two possible moral imperatives, neither of which is unambiguously acceptable or preferable. The complexity arises out of the situational conflict in which obeying would result in transgressing another. Sometimes called ethical paradoxes in moral philosophy, ethical dilemmas may be invoked to refute an ethical system or moral code, or to improve it so as to resolve the paradox.\",\n  \"Information technology is the study, design, development, implementation, support or management of computer-based information systems—particularly software applications and computer hardware. IT workers help ensure that computers work well for people.\",\n  \"The technological singularity—also, simply, the singularity[1]—is a hypothetical point in time at which technological growth becomes uncontrollable and irreversible, resulting in unforeseeable changes to human civilization. According to the most popular version of the singularity hypothesis, called intelligence explosion, an upgradable intelligent agent will eventually enter 'runaway reaction' of self-improvement cycles, each new and more intelligent generation appearing more and more rapidly, causing an 'explosion' in intelligence and resulting in a powerful superintelligence that qualitatively far surpasses all human intelligence. The first use of the concept of a 'singularity' in the technological context was John von Neumann. Stanislaw Ulam reports a discussion with von Neumann 'centered on the accelerating progress of technology and changes in the mode of human life, which gives the appearance of approaching some essential singularity in the history of the race beyond which human affairs, as we know them, could not continue'.[5] Subsequent authors have echoed this viewpoint.[3][6] I. J. Good's 'intelligence explosion' model predicts that a future superintelligence will trigger a singularity. The concept and the term 'singularity' were popularized by Vernor Vinge in his 1993 essay The Coming Technological Singularity, in which he wrote that it would signal the end of the human era, as the new superintelligence would continue to upgrade itself and would advance technologically at an incomprehensible rate. He wrote that he would be surprised if it occurred before 2005 or after 2030. Public figures such as Stephen Hawking and Elon Musk have expressed concern that full artificial intelligence (AI) could result in human extinction. The consequences of the singularity and its potential benefit or harm to the human race have been intensely debated.\",\n  \"Other Issues\"\n]\n\nexport default function ScrollableTabsButtonAuto() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n    <Box mt={5}>\n      <AppBar position=\"static\" color='default' >\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable auto tabs example\"\n        >\n          <Tab label=\"The quandary...\" {...a11yProps(0)} />\n          <Tab label=\"Your information gathering and action taken...\" {...a11yProps(1)} />\n          <Tab label=\"Some hypothetical outcome of the proposed project\" {...a11yProps(2)} />\n          {/* <Tab label=\"Issue Four\" {...a11yProps(3)} />\n          <Tab label=\"Issue Five\" {...a11yProps(4)} />\n          <Tab label=\"Issue Six\" {...a11yProps(5)} />\n          <Tab label=\"Issue Seven\" {...a11yProps(6)} /> */}\n        </Tabs>\n      </AppBar>\n      </Box>\n      <TabPanel value={value} index={0}>\n        <Box p={2} className={classes.textBox}>\n            <TextTypography variant=\"body1\">{issuesText[0]}</TextTypography>\n        </Box>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Box p={2} className={classes.textBox}>\n            <TextTypography variant=\"body1\">{issuesText[1]}</TextTypography>\n        </Box>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n      <Box p={2} className={classes.textBox}>\n            <TextTypography variant=\"body1\">{issuesText[2]}</TextTypography>\n          </Box>\n      </TabPanel>\n      <TabPanel value={value} index={3}>\n      <Box p={2} className={classes.textBox}>\n            <TextTypography variant=\"body1\">{issuesText[3]}</TextTypography>\n          </Box>\n      </TabPanel>\n      <TabPanel value={value} index={4}>\n      <Box p={2} className={classes.textBox}>\n            <TextTypography variant=\"body1\">{issuesText[3]}</TextTypography>\n          </Box>\n      </TabPanel>\n      <TabPanel value={value} index={5}>\n      <Box p={2} className={classes.textBox}>\n            <TextTypography variant=\"body1\">{issuesText[3]}</TextTypography>\n          </Box>\n      </TabPanel>\n      <TabPanel value={value} index={6}>\n      <Box p={2} className={classes.textBox}>\n            <TextTypography variant=\"body1\">{issuesText[3]}</TextTypography>\n          </Box>\n      </TabPanel>\n    </div>\n  );\n}","import React from \"react\";\nimport Radar from \"./chart/chart\";\nimport { withStyles, Typography, Box, Grid, Button } from \"@material-ui/core\";\nimport { BASE_URL, STUDENT_ID, SCENARIO_ID } from \"../constants/config\";\nimport axios from 'axios'\nimport ScrollableTabsButtonAuto from \"./components/tabs\"\n\nconst TextTypography = withStyles({\n  root: {\n    color: \"#373a3c\"\n  }\n})(Typography);\n\nfunction Summary({pages, setPages, activePage, setActivePage}) {\n  function goToFinalAction(){\n    if (!pages.finalAction.visited) {\n      setPages(prevPages => {\n        let copy = {...prevPages};\n        copy.finalAction.visited = true;\n        return copy;\n      });\n    }\n    setActivePage(prevPage => 'finalAction')\n  }\n  function goToFeedback(){\n    if (!pages.feedback.visited) {\n      setPages(prevPages => {\n        let copy = {...prevPages};\n        copy.feedback.visited = true;\n        return copy;\n      });\n    }\n    setActivePage(prevPage => 'feedback');\n  }\n  let Summary_Value = 2.03;\n  let Coverage = { Safety: 0.5, Salary: 0.667, Reputation: 1.0, Privacy: 0.8 };\n  return (\n    <div>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Box mt = {5}>\n          <TextTypography variant=\"h4\" align=\"center\" gutterBottom>\n            Summary\n          </TextTypography>\n        </Box>\n      </Grid>\n      <Grid container direction=\"row\" justify=\"space-between\">\n        <Grid item style={{ marginRight: \"0rem\", marginTop: \"-3rem\" }}>\n          <Button variant=\"contained\" disableElevation onClick={goToFinalAction}>Back</Button>\n        </Grid>\n        <Grid item style={{ marginRight: \"0rem\", marginTop: \"-3rem\" }}>\n          <Button variant=\"contained\" disableElevation color=\"primary\" onClick={goToFeedback}>Next</Button>\n        </Grid>\n      </Grid>\n      <Grid container spacing={2}>\n        <Grid lg={12}>\n          <ScrollableTabsButtonAuto/>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Summary;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { Typography, Grid, Card, CardContent, Button } from '@material-ui/core';\nimport PropTypes from 'prop-types';\n\nconst useStyles = makeStyles((theme) => ({\n    scenarioContainer: {\n        minHeight: '100px',\n        minWidth: '200px',\n        backgroundColor: \"#F7E7E7\",\n        borderStyle: 'solid',\n        borderColor: theme.palette.primary.light,\n        border: 2,\n        maxWidth: '400px',\n    },\n    buttonContainer: {\n        borderStyle: 'solid',\n        borderColor: theme.palette.primary.light,\n        border: 3,\n    },\n    button: {\n        borderStyle: 'solid',\n        borderColor: theme.palette.primary.light,\n        border: 3,\n        top: 5,\n    },\n    buttonText: {\n        width: '100%',\n        textTransform: 'unset',\n    },\n}));\n\nconst styles = (theme) => ({\n    root: {\n        margin: 1,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nSimScenarioCard.propTypes = {\n    id: PropTypes.number,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    due_date: PropTypes.string,\n}\n\nexport default function SimScenarioCard({\n    id,\n    name,\n    description,\n    due_date,\n    onClick,\n}) {\n\n    const classes = useStyles();\n\n    const startButton = (\n        <Button\n            className={classes.buttonText}\n            variant=\"contained\"\n            color=\"primary\"\n            component={Link}\n            to={{\n                pathname: '/simulation',\n            }}\n            onClick={onClick(id)}\n            className={classes.button}\n            item\n            fullWidth=\"true\"\n        >\n            <Typography variant=\"subtitle1\" noWrap>\n                Start\n            </Typography>\n        </Button>\n    )\n\n    const due = new Date(due_date).toString();\n\n    return (\n        <Grid key={id} item xs=\"auto\">\n            <Card>\n                <CardContent className={classes.scenarioContainer}>\n                    <Typography variant=\"h5\" display=\"block\" noWrap>\n                        {name}\n                    </Typography>\n                    <Typography variant=\"h6\" display=\"block\" noWrap>\n                        {description}\n                    </Typography>\n                    <Typography\n                        variant=\"subtitle1\"\n                        color=\"textSecondary\"\n                        display=\"block\"\n                    >\n                        Due: {due}\n                    </Typography>\n                    {startButton}\n                </CardContent>\n            </Card>\n        </Grid>\n    )\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Copyright() {\n    return (\n        <Typography align=\"center\">\n            Copyright © Ethisim {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n","import React from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Link } from 'react-router-dom';\n//import shemptylogo from '../EditorComponents/ConversationEditorComponents/StakeHoldersComponent/shemptylogo.png';\n\nexport default function SimpleMenu() {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div>\n            <IconButton\n                aria-controls=\"simple-menu\"\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n            >\n                {/* <img src={shemptylogo} height={50} width={50} alt=\"\"></img> */}\n            </IconButton>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <MenuItem\n                    onClick={handleClose}\n                    component={Link}\n                    to={{\n                        pathname: '/home',\n                    }}\n                >\n                    Logout\n                </MenuItem>\n                <MenuItem onClick={handleClose}>Settings</MenuItem>\n                <MenuItem onClick={handleClose}>Help</MenuItem>\n            </Menu>\n        </div>\n    );\n}\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { Box, Typography } from '@material-ui/core';\nimport SimpleMenu from './DropdownMenu';\n\nexport default function DashboardNavbar() {\n    return (\n        <div>\n            <CssBaseline />\n            <AppBar position=\"fixed\">\n                <Toolbar>\n                    <Box display=\"flex\" flexGrow={1}>\n                        <Typography variant=\"h4\" noWrap>\n                            Ethisim Dashboard\n                        </Typography>\n                    </Box>\n                    <SimpleMenu />\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Box, Typography, Grid, Divider } from '@material-ui/core';\nimport SimScenarioCard from './components/DashboardComponents/SimScenarioCard';\nimport Copyright from './components/Copyright';\nimport get from '../universalHTTPRequests/get';\nimport DashboardNavBar from './components/DashboardComponents/DashboardNavbar';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        marginTop: theme.spacing(11),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    copyright: {\n        margin: theme.spacing(2),\n    },\n    issue: {\n        marginTop: theme.spacing(10),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    errorContainer: {\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    iconError: {\n        paddingRight: theme.spacing(2),\n        fontSize: '75px',\n    },\n    iconRefreshLarge: {\n        fontSize: '75px',\n    },\n    iconRefreshSmall: {\n        fontSize: '30px',\n    },\n    border: {\n        borderStyle: 'none none solid none',\n        marginBottom: theme.spacing(2),\n    },\n}));\n\n//TODO when Shibboleth gets implemented\nconst endpointGet = '/scenarios/';\nconst endpointGetCourses = '/api/courses/';\nconst endpointPost = '/dashboard';\nconst endpointDelete = '/api/scenarios/';\n\nconst styles = (theme) => ({\n    root: {\n        margin: 1,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n});\n\nexport default function Dashboard({setScenario}) {\n    const classes = useStyles();\n\n    const [openScenarios, setOpenScenarios] = useState(null);\n    const [fetchScenariosResponse, setFetchScenariosResponse] = useState({\n        data: null,\n        loading: false,\n        error: null,\n    });\n\n    const [errorBannerMessage, setErrorBannerMessage] = useState('');\n    const [errorBannerFade, setErrorBannerFade] = useState(false);\n\n    const [shouldFetch, setShouldFetch] = useState(0);\n\n    let getScenarios = () => {\n        console.log(\"Getting Scenarios\")\n        function onSuccess(res) {\n            const scenarios = res.data.slice();\n            \n            let openScenariosCards = scenarios.map((scenario) => (\n                <SimScenarioCard\n                    key={scenario.id}\n                    id={scenario.id}\n                    name={scenario.name}\n                    description={scenario.description}\n                    due_date={scenario.due_date}\n                    onClick={setScenario}\n                />\n            ));\n\n            setOpenScenarios(openScenariosCards);\n\n            console.log(scenarios);\n        }\n\n        function onFailure() {\n            //setErrorBannerMessage('Failed to get scenarios! Please try again.');\n            //setErrorBannerFade(true);\n        }\n        get(setFetchScenariosResponse, endpointGet, onFailure, onSuccess);\n    };\n\n    useEffect(getScenarios, [shouldFetch])\n\n    return (\n        <div>\n            <DashboardNavBar />\n            <Container\n                className={classes.container}\n                component=\"main\"\n                maxWidth=\"lg\"\n            >\n                <div className={classes.border}>\n                    <Typography variant=\"h3\">Open Scenarios</Typography>\n                </div>\n                <Grid\n                    container\n                    spacing={2}\n                    direction=\"row\"\n                    justify=\"flex-start\"\n                    alignItems=\"stretch\"\n                >\n                    {openScenarios}\n                </Grid>\n                <Box className={classes.copyright}>\n                    <Copyright />\n                </Box>\n            </Container>\n        </div>\n    );\n}","import axios from 'axios';\n\nimport { BASE_URL } from '../constants/config';\n\n// Universal fetch request using axios\nexport default function universalFetch(\n    setResponse,\n    endpoint,\n    onError,\n    onSuccess\n) {\n    setResponse({\n        data: null,\n        loading: true,\n        error: null,\n    });\n    axios\n        .get(BASE_URL + endpoint, {\n            headers: {\n                studentID: 2\n            }\n        })\n        .then((resp) => {\n            setResponse({\n                data: resp.data,\n                loading: false,\n                error: null,\n            });\n            onSuccess && onSuccess(resp);\n        })\n        .catch((err) => {\n            setResponse({\n                data: null,\n                loading: false,\n                error: err,\n            });\n            onError && onError(err);\n        });\n}\n","import React, { useState } from 'react';\nimport '../App.css';\nimport Dashboard from './sim_dashboard';\n\nexport default function Home() {\n  \n  /** TODO: Set scenarioID picked from dashboard */\n  const [scenario, setScenario] = useState(null);\n\n  // let pickedScenario = (scenarioID) => {\n  //   setScenario(scenarioID)\n  // }\n\n  return (\n    <Dashboard\n      setScenario={setScenario}\n    />\n  );\n}","import React, { useState } from \"react\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport Radar from \"./chart/chart\";\n\nfunction RadarTest(props) {\n  const [input, setInput] = useState(0);\n  const [testInput1, setTestInput1] = useState(0);\n  const [testInput2, setTestInput2] = useState(0);\n  const [testInput3, setTestInput3] = useState(0);\n\n\n  const scenarioScoringMatrix = {\n\n    Tim: {\n      issue1: 1,\n      issue2: 4,\n      issue3: 2,\n    },\n    Song: {\n      issue1: 0,\n      issue2: 2,\n      issue3: 3,\n    },\n  };\n\n  function totalEmphasisF(scenarioScoringMatrix) {\n    const totalEmphasis = {};\n    for (let conversant in scenarioScoringMatrix) {\n      for (let issue in scenarioScoringMatrix[conversant]) {\n        totalEmphasis[issue] = scenarioScoringMatrix[conversant][issue] +(\n              totalEmphasis[issue]??0);\n      }\n      return totalEmphasis;\n    }\n  }\n  const totalEmphasis = totalEmphasisF(scenarioScoringMatrix);\n  // a perfect student\n\n  function studentEmphasisF(scenarioScoringMatrix) {\n    let studentEmphasis = {};\n    if (testInput1 === 0 && testInput2 === 0 && testInput3 === 0) {\n      for (let conversant in scenarioScoringMatrix) {\n        for (let issue in scenarioScoringMatrix[conversant]) {\n          studentEmphasis[issue] = scenarioScoringMatrix[conversant][issue] +\n                (studentEmphasis[issue]??0);\n        }\n      }\n    } else {\n      studentEmphasis = {\n        issue1: testInput1,\n        issue2: testInput2,\n        issue3: testInput3,\n      };\n    }\n    return studentEmphasis;\n  }\n  let studentEmphasis = studentEmphasisF(scenarioScoringMatrix);\n\n  function coverageF(totalEmphasis, studentEmphasis) {\n    const coverage = {};\n    for (let issue in totalEmphasis) {\n      coverage[issue] = studentEmphasis[issue] / totalEmphasis[issue];\n    }\n    return coverage;\n  }\n  let coverage = coverageF(totalEmphasis, studentEmphasis);\n  const ethcicalImportance = {\n    issue1: 0.5,\n    issue2: 0.9,\n    issue3: 0.8,\n  };\n\n  function summaryValueF(totalEmphasis, ethcicalImportance, coverage) {\n    let summaryValue = 0;\n    for (let issue in totalEmphasis) {\n      summaryValue += ethcicalImportance[issue] * coverage[issue];\n    }\n    return summaryValue;\n  }\n\n  let summaryValue = summaryValueF(\n    totalEmphasis,\n    ethcicalImportance,\n    coverage\n  );\n\n  return (\n    <div>\n      <Grid container>\n        <Grid container direction=\"row\" justify=\"center\">\n          <h3>Coverage Of Issues</h3>\n        </Grid>\n        <Grid container direction=\"row\" justify=\"space-around\">\n          <Button\n            variant=\"contained\"\n            disableElevation\n            onClick={(e) => {\n              e.preventDefault();\n              setInput(input + 1);\n            }}\n          >\n            Back\n          </Button>\n          <Button variant=\"contained\" color=\"primary\" disableElevation>\n            Next\n          </Button>\n        </Grid>\n        <Grid container direction=\"row\" justify=\"center\">\n          <Radar\n            key={testInput1 + testInput2 + testInput3 + \"\"}\n            coverage={coverage}\n            summary={summaryValue}\n\n          />\n        </Grid>\n        <br />\n        {/* { <form> */}\n        <label>\n          Student Issue 1:\n          <input\n            type=\"text\"\n            value={testInput1}\n            onChange={(event) => {\n              setTestInput1(event.target.value);\n            }}\n          />\n        </label>\n        <label>\n          Student Issue 2:\n          <input\n            type=\"text\"\n            value={testInput2}\n            onChange={(event) => {\n              setTestInput2(event.target.value);\n            }}\n          />\n        </label>\n        <label>\n          Student Issue 3:\n          <input\n            type=\"text\"\n            value={testInput3}\n            onChange={(event) => {\n              setTestInput3(event.target.value);\n            }}\n          />\n        </label>\n\n        {/* </form> } */}\n      </Grid>\n    </div>\n  );\n}\n\nexport default RadarTest;\n","import React from \"react\";\nimport {\n  makeStyles,\n  Typography,\n  Paper,\n  Stepper,\n  Step,\n  StepLabel,\n  StepContent,\n  Button,\n  Box,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n  step: {\n    \"&$completed\": {\n      color: \"#881C1C\",\n    },\n    \"&$active\": {\n      color: \"#881C1C\",\n    },\n    \"&$disabled\": {\n      color: \"#444e58\",\n    },\n  },\n  active: {},\n  completed: {},\n  disabled: {},\n}));\n\nfunction getSteps(pages, navigatePageFunc) {\n  let stepArr = [];\n  let keys = Object.keys(pages);\n\n  for (let i = 0; i < keys.length; i++) {\n    let buttonName = keys[i].charAt(0);\n    for (let j = 1; j < keys[i].length - 1; j++) {\n      if (keys[i].charAt(j) == keys[i].charAt(j).toUpperCase()) {\n        buttonName += \" \";\n      }\n      buttonName += keys[i].charAt(j);\n    }\n    buttonName += keys[i].charAt(keys[i].length - 1);\n    if (pages[keys[i]].visited === false) {\n      stepArr.push(<Button disabled>{buttonName}</Button>);\n    } else {\n      stepArr.push(<Button style={{ color: \"#881c1c\" }} onClick={() => navigatePageFunc(keys[i])} >{buttonName}</Button>);\n    }\n  }\n  return stepArr;\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return ``;\n    case 1:\n      return \"\";\n    case 2:\n      return ``;\n    default:\n      return \"\";\n  }\n}\n\nexport default function VerticalLinearStepper(props) {\n  //<Stepper activePage={activePage} pages={pages} />\n  const classes = useStyles();\n  // eslint-disable-next-line\n  const [activeStep, setActiveStep] = React.useState(props.pages[props.activePage].pageNumber);\n  \n\n  function navigatePage(pageName){\n    if(props.pages[pageName].completed){\n      if (!props.pages[pageName].visited) {\n        props.setPages(prevPages => {\n          let copy = {...prevPages};\n          copy[pageName].visited = true;\n          return copy;\n        });\n      }\n      props.setActivePage(pageName)\n    }\n  }\n\n  const steps = getSteps(props.pages, navigatePage);\n  return (\n    <div className={classes.root}>\n      <Box mt={3} ml={1}>\n        <Stepper activeStep={activeStep} orientation=\"vertical\">\n          {steps.map((label, index) => (\n            <Step\n              key={index}\n              classes={{\n                root: classes.step,\n                completed: classes.completed,\n                active: classes.active,\n              }}\n            >\n              <StepLabel\n                StepIconProps={{\n                  classes: {\n                    root: classes.step,\n                    completed: classes.completed,\n                    active: classes.active,\n                  },\n                }}\n              >\n                {label}\n              </StepLabel>\n              <StepContent>\n                <Typography>{getStepContent(index)}</Typography>\n                <div className={classes.actionsContainer}>\n                  <div></div>\n                </div>\n              </StepContent>\n            </Step>\n          ))}\n        </Stepper>\n        {activeStep === steps.length && (\n          <Paper square elevation={0} className={classes.resetContainer}>\n            <Typography>All steps completed - you&apos;re finished</Typography>\n          </Paper>\n        )}\n      </Box>\n    </div>\n  );\n}\n","import React, {useState} from 'react';\nimport {Dialog, IconButton, Button, Typography, withStyles} from '@material-ui/core';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nconst styles = (theme) => ({\n    root: {\n      margin: 0,\n      padding: theme.spacing(2),\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: '#444e58',\n    }\n  });\n  \n  const font = createMuiTheme({\n    palette: {\n      primary: {\n        main: '#5b7f95'\n      }\n    }\n    });\n\n  const DialogTitle = withStyles(styles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n      <MuiDialogTitle disableTypography className={classes.root} {...other}>\n        <Typography variant=\"h6\">{children}</Typography>\n        {onClose ? (\n          <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </MuiDialogTitle>\n    );\n  });\n\n  const DialogContent = withStyles((theme) => ({\n    root: {\n      padding: theme.spacing(2),\n    },\n  }))(MuiDialogContent);\n  \n  const DialogActions = withStyles((theme) => ({\n    root: {\n      margin: 0,\n      padding: theme.spacing(1),\n    },\n  }))(MuiDialogActions);\n\n  // const modalTitle = \"Introduction\";\n//   const inputText = \"Some paragraph\";\n\n\nexport default function InfoModal({getContent, info}) {\n    const [open, setOpen] = React.useState(false);\n\n    const modalTitle = info.name;\n    const [content, setContent] = React.useState((<Typography>test</Typography>));\n\n    const handleClickOpen = () => {\n      getContent(info).then(res => {\n        setContent(content => res);\n        setOpen(true);\n      });\n    };\n    const handleClose = () => {\n      setOpen(false);\n    };\n      \n    return (\n        <div>\n            <ThemeProvider theme = {font}>\n                <Button color=\"primary\" onClick={handleClickOpen}>\n                        {modalTitle}\n                </Button>\n            </ThemeProvider>\n            <Dialog fullWidth = {true} onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n                <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n                    {modalTitle}\n                </DialogTitle>\n                <DialogContent dividers>\n                    {content}\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}","import React, { useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, List, ListItem, ListItemText, Button, Box, Typography} from '@material-ui/core';\nimport { GatheredInfoContext } from '../simulationWindow';\nimport PersonIcon from '@material-ui/icons/Person';\nimport InfoModal from './infoModal';\nimport axios from 'axios';\nimport { ScenariosContext } from '../../Nav';\nimport {BASE_URL, STUDENT_ID} from \"../../constants/config\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    height: 400,\n    maxWidth: 300,\n    background: theme.palette.background.paper,\n    color: \"#5b7f95\"\n  }\n}));\n\n\nexport default function InfoGatheredList({pages}) {\n  const classes = useStyles();\n\n  const [showList, setShowContent] = React.useState(true);\n  const toggleShow = () => {\n    setShowContent(show => !show);\n  };\n\n  // const modalTitle = \"Introduction\";\n  // const inputText = \"Some Text 123\";\n\n  let listContentById = {};\n  const [infos, setInfos] = useContext(GatheredInfoContext);\n  const [scenarios, setScenarios] = React.useContext(ScenariosContext);\n\n  /*  Retrieve the content to display for a given info button.\n      If the info button onClick triggers an alert, this should be a string. If it's a modal popup, it should be html.\n  */\n  async function getListContent(info) {\n    if (listContentById[info.id] === undefined) {\n      const mockHttpRequest = async () => { // Simulating async retrieval of data\n        switch (info.id) {\n          case 'p0':\n            return (<Typography>placeholder</Typography>);\n          case 'page':\n            return axios({\n              method: 'get',\n              url: BASE_URL + '/scenarios/task',\n              headers: {\n                studentID: STUDENT_ID,\n                scenarioID: scenarios.currentScenarioID\n              }\n            }).then(response => {\n              return response.data[0].body_text;\n            });\n          default:\n            if (info.id.startsWith('stakeholder:')) {\n              return (<Typography>a cool stakeholder</Typography>);\n            }\n            return (<Typography>default</Typography>);\n        }\n      }\n      return mockHttpRequest()\n        .then(res => {\n          listContentById[info.id] = res;\n          return res;\n        }).catch(err => console.error(err));\n    } else {\n      return listContentById[info.id];\n    }\n  }\n\n  //changing variables as per screensize\n  const [height, width] = useWindowSize();\n  const isSmall = width < 640;\n  const isMedium = width < 1024; //could also be 1007 instead of 1024 depending on standard used\n  const margin_left = isSmall? 1 : (isMedium ? 2 : 8);\n  const title_fontSize = isSmall? '8px' : (isMedium ? '12px' : '16px'); //use it later when making it suitable for medium and small sizes\n\n  return (\n    <div className={classes.root}>\n      <Box mt = {6} ml = {'20%'}>\n        <Button onClick={toggleShow} \n         color = \"primary\"\n         style = {{ fontSize: '16px'}}\n         disableRipple = \"true\"\n         >\n         Gathered Information\n         </Button>\n        {showList &&\n          <List>\n            {/* {infos.filter(info => pages[info.pageId].visited).map(info => {\n              return (\n                <ListItem key={info.id} button onClick={() => getListContent(info).then(res => alert(res))}>\n                  {(info.pageId === 'stakeholders') &&\n                    <Box mr = {1} mb = {0.75}>\n                      <PersonIcon style = {{ color: \"#373a3c\"}}/>\n                    </Box>\n                  }\n                  <ListItemText height={400} width={300}>\n                    {info.name}\n                  </ListItemText>\n                </ListItem>\n              );\n            })} */}\n            {infos.filter(info => pages[info.pageId].visited).map(info => {\n              return (\n                <ListItem key={info.id}>\n                  <InfoModal getContent={getListContent} info={info}/>\n                </ListItem>\n              );\n            })}\n          {/* <ListItem>\n            <InfoModal inputText={inputText} modalTitle={modalTitle}/>\n          </ListItem> */}\n          </List> \n        }\n     </Box> \n    </div>\n  );\n}\n\nfunction useWindowSize(){\n  const [size, setSize] = useState([window.innerHeight, window.innerWidth]);\n  useEffect(()=> {\n    const handleResize = () =>{\n      setSize([window.innerHeight, window.innerWidth]);\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return ()=>{\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n  return size;\n}","import React from 'react';\n\n\nconst HTMLRenderer = ({html}) => {\n    const sanitizedHTML = html.replace(/onerror=/, '').replace(/<a .*onmouseover=.*>/, '<a>');\n    return (<div className={'sun-editor-editable'} dangerouslySetInnerHTML={{__html: sanitizedHTML}}></div>);\n}\n\nexport default HTMLRenderer;","import React, { useState } from \"react\";\nimport { Box, Grid, Typography , withStyles, Button, FormHelperText } from '@material-ui/core';\nimport HTMLRenderer from \"./htmlRenderer\";\n\nconst alignMiddle = {\n  position: 'fixed',\n  left: '50%',\n  top: '50%',\n  transform: 'translate(-50%, -50%)',\n}\n\nconst TextTypography = withStyles({\n  root: {\n    color: \"#373a3c\",\n    whiteSpace: \"pre-line\",\n    textAlign: 'left'\n  },\n})(Typography);\n\n// onChange={(event) => {\n//   setTestInput3(event.target.value);\n\nfunction getQuestions(questionArr, responses, setResponses, previouslyResponded) {\n  let arr = [];\n  for (let i = 0; i < questionArr.length; i++) {\n    const question = questionArr[i];\n    arr.push(\n      <div>\n        <p><b>{question.text}</b></p>\n        <textarea disabled={previouslyResponded} id={question.id} value={responses[question.id]} onChange={event => {\n          const target = event.target\n          setResponses((reses) => {\n            let newObj = {...reses};\n            newObj[target.id] = target.value;\n            return newObj;\n          });\n        }}\n          rows=\"4\" cols=\"90\" style={{ resize: \"none\" }}></textarea>\n      </div>\n    )\n  }\n  return arr;\n}\n\nexport default function StateTextFields(props) {\n\n  const previouslyResponded = Object.keys(props.prevResponses).length > 0;\n\n  const [responses, setResponses] = React.useState({});\n  const [error, setError] = React.useState(false);\n  let header = props.header;\n  const [helperText, setHelperText] = React.useState('');\n\n  React.useEffect(() => {\n    setResponses(props.questions.reduce((prev, question) => {\n      prev[question.id] = (previouslyResponded && props.prevResponses[question.id] !== undefined) \n        ? props.prevResponses[question.id] : '';\n      return prev;\n    }, {}));\n  }, [props.prevResponses])\n\n  let qAndA = getQuestions(props.questions, responses, setResponses, previouslyResponded);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if(!Object.values(responses).includes('') && Object.keys(responses).length === props.questions.length){\n      props.handleResponse(responses).then(res => {\n        if(props.nextPageName !== 'home'){\n          props.pages[props.nextPageName].completed = true;\n        }\n        props.nextPage();\n      }).catch(err => alert(err));\n    }else{\n      setError(true);\n      setHelperText('Please provide a response.');\n    }\n  };\n  \n  return (\n    <form onSubmit={handleSubmit}>\n      <Grid container spacing={2}>\n        <Grid item lg={12}>\n          {/* <TextTypography variant=\"body1\" align=\"center\">\n            {header}\n          </TextTypography> */}\n          <HTMLRenderer html={header}/>\n        </Grid>\n        <Grid item lg={12}>\n          <TextTypography variant=\"body1\" align=\"center\">\n            {qAndA}\n          </TextTypography>\n        </Grid>\n        <Grid item lg={12}>\n        <FormHelperText>{helperText}</FormHelperText>\n          <Button type=\"submit\" variant=\"outlined\" color=\"primary\">\n            Submit\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n\n\n  );\n}\n","import React, {useState, useEffect} from \"react\";\nimport { withStyles, Typography, Box, Grid, Button } from \"@material-ui/core\";\nimport QA from \"./components/q&a\";\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { BASE_URL, STUDENT_ID, SCENARIO_ID } from \"../constants/config\";\nimport { ScenariosContext } from \"../Nav\";\n\n\nconst TextTypography = withStyles({\n  root: {\n    color: \"#373a3c\"\n  }\n})(Typography);\n\nconst questions = [{text: \"We would appreciate receiving any comments that you have on this online ethics simulation: \", id: 1}];\n\nfunction Conclusion({pages, setPages, activePage, setActivePage}) {\n  const [body,setBody] = useState('');\n  const [scenarios, setScenarios] = React.useContext(ScenariosContext);\n  useEffect(() => {\n    // backend call\n    axios({\n      method: 'get',\n      url: BASE_URL + '/scenarios/conclusion',\n      headers: {\n        scenarioID: scenarios.currentScenarioID,\n        studentID: STUDENT_ID,\n      }\n    }).then(response => {\n      setBody(text => response.data[0].body_text);\n    }).catch((err)=>{\n      console.log(\"err\",err);\n      //alert(err);\n    });\n  }, [scenarios])\n\n\n  function goToFinalReflection(){\n    if (!pages.finalReflection.visited) {\n      setPages(prevPages => {\n        let copy = {...prevPages};\n        copy.finalReflection.visited = true;\n        return copy;\n      });\n    }\n    setActivePage(prevPage => 'finalReflection')\n  }\n\n  let history = useHistory();\n  const goToHome = () => {\n    history.push('/');\n  }\n\n  return (\n    <div>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Box mt = {5}>\n          <TextTypography variant=\"h4\" align=\"center\" gutterBottom>\n            Conclusion\n          </TextTypography>\n        </Box>\n      </Grid>\n      <Grid container direction=\"row\" justify=\"space-between\">\n        <Grid item style={{ marginRight: \"0rem\", marginTop: \"-3rem\" }}>\n          <Button variant=\"contained\" disableElevation onClick={goToFinalReflection}>Back</Button>\n        </Grid>\n        <Grid item style={{ marginRight: \"0rem\", marginTop: \"-3rem\" }}>\n          {/*<Button variant=\"outlined\">Next</Button>*/}\n        </Grid>\n      </Grid>\n      <Grid container spacing={2}>\n        <Grid item lg={12}>\n          <Box m=\"2rem\">\n          </Box>\n          <QA header={body} questions={questions}\n            handleResponse={async (data) => console.log(data)}\n            nextPage={goToHome} pages={pages} nextPageName={\"home\"}\n            prevResponses={{}}/>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Conclusion;\n","import React, {useEffect, useState} from \"react\";\nimport PropTypes from 'prop-types'\nimport {\n    withStyles,\n    Typography,\n    Box,\n    Grid,\n    Button,\n    makeStyles,\n  } from \"@material-ui/core\";\nimport HTMLRenderer from '../components/htmlRenderer'\n\nconst useStyles = makeStyles((theme) => ({\n    videoBox: {\n        margin: 'auto',\n        maxWidth: '100%',\n        maxHeight: '100%',\n        \n    },\n}));\n\nSim_videoPlayer.defaulProps = {\n    name: 'Please pass in a name for the video',\n    description: 'Please pass in a description for the video'\n}\n\nSim_videoPlayer.propTypes = {\n    vid_url: PropTypes.string.isRequired,\n    name: PropTypes.string,\n    description: PropTypes.string,\n}\n\n\nexport default function Sim_videoPlayer({vid_url, name, description}) {\n    const [showVid, setShowVid] = useState(false);\n    const classes = useStyles();\n    return (\n        <div>\n            <Box paddingLeft={0} p={3}>\n                <Button \n                    color=\"primary\"\n                    disableElevation\n                    onClick={() => setShowVid(!showVid)}\n                    size=\"medium\"\n                >\n                    {showVid ? \"hide video\" : \"show video\"}\n                </Button>\n            </Box>\n            {\n                showVid && \n                <Grid container spacing={2} direction=\"row\" justify=\"space-evenly\" alignItems=\"stretch\">\n                    <Grid item xs={4}>\n                        <iframe \n                            src={vid_url}\n                            frameborder='0'\n                            allow='autoplay; encrypted-media'\n                            allowfullscreen='true'\n                            title={name}\n                            className={classes.videoBox}\n                        />\n                    </Grid>\n                    <Grid item xs={8}>\n                            <Typography variant=\"h6\">\n                                {name}\n                            </Typography>\n                            <HTMLRenderer html={description}/>\n                    </Grid>\n                </Grid>\n            }  \n        </div>\n    );\n}\n","import React,{useEffect} from \"react\";\nimport {\n  withStyles,\n  Typography,\n  Box,\n  Grid,\n  Button,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { BASE_URL, STUDENT_ID, SCENARIO_ID } from \"../constants/config\";\nimport axios from 'axios';\nimport HTMLRenderer from './components/htmlRenderer';\nimport { ScenariosContext } from \"../Nav\";\nimport { GatheredInfoContext } from './simulationWindow';\nimport VideoPlayer from './components/Sim_videoPlayer'\n\nconst TextTypography = withStyles({\n  root: {\n    color: \"#373a3c\",\n    whiteSpace: \"pre-line\",\n  },\n})(Typography);\n\nconst useStyles = makeStyles((theme) => ({\n  textBox: {\n    overflowY: \"auto\",\n    maxHeight: window.innerHeight * 0.6,\n    marginTop: theme.spacing(4),\n    borderRadius: \"5px\",\n    boxShadow: \"0px 0px 2px\",\n  },\n}));\n\nfunction Introduction({ pages, setPages, activePage, setActivePage }) {\n  \n  const [gatheredInfo, setGatheredInfo] = React.useContext(GatheredInfoContext);\n\n  function goToProjectAssignment() {\n    if (!pages.projectAssignment.visited) {\n      setPages((prevPages) => {\n        let copy = { ...prevPages };\n        copy.projectAssignment.visited = true;\n        return copy;\n      });\n      setGatheredInfo(infos => {\n        let newInfos = [...infos];\n        newInfos.push({id: 'page', name: 'Project Assignment', pageId: 'projectAssignment'});\n        return newInfos;\n      });\n    }\n    setActivePage((prevPage) => \"projectAssignment\");\n\n  }\n\n  const [showVid, setShowVid] = React.useState(false);\n  const [introText, setIntroText] = React.useState('');\n  const [scenarios, setScenarios] = React.useContext(ScenariosContext);\n  const classes = useStyles();\n\n  useEffect(() => {\n    // backend call\n    axios({\n      method: 'get',\n      url: BASE_URL + '/scenarios/intro',\n      headers: {\n        scenarioID: scenarios.currentScenarioID,\n        studentID: STUDENT_ID,\n      }\n    }).then(response => {\n      setIntroText(text => response.data[0].body_text);\n    }).catch((err)=>{\n      console.log(\"err\",err);\n      //alert(err);\n    });\n  }, [scenarios])\n\n  return (\n    <div>\n      <Box mt={5}>\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n          <TextTypography variant=\"h4\" align=\"center\" gutterBottom>\n            Introduction\n          </TextTypography>\n        </Grid>\n      </Box>\n      <Grid container direction=\"row\" justify=\"space-between\">\n        <Grid\n          item\n          style={{\n            marginLeft: \"0rem\",\n            marginRight: \"0rem\",\n            marginTop: \"-3rem\",\n          }}\n        >\n          {/*  <Button>Back</Button>*/}\n        </Grid>\n        <Grid item style={{ marginRight: \"0rem\", marginTop: \"-3rem\" }}>\n          <Button\n            variant=\"contained\"\n            disableElevation\n            color=\"primary\"\n            onClick={goToProjectAssignment}\n          >\n            Next\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container spacing={2}>\n        <Grid item lg={12}>\n          <Box p={2} className={classes.textBox}>\n            <HTMLRenderer html={introText}/>\n          </Box>\n          {/* could change the parameter to just scenario in the future to be more dynamic */}\n          <VideoPlayer vid_url=\"https://www.youtube.com/embed/zPsoFhUDLuU\" name=\"Brain Pop Ethics\" description=\"Example Ethics Video from BrainPop for demo purpose.\"/> \n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Introduction;\n","import axios from \"axios\";\nimport { BASE_URL, STUDENT_ID, SCENARIO_ID } from \"../constants/config\";\nimport React from \"react\";\nimport {\n  withStyles,\n  Typography,\n  Box,\n  Grid,\n  Button,\n  makeStyles,\n} from \"@material-ui/core\";\nimport HTMLRenderer from './components/htmlRenderer';\nimport { ScenariosContext } from \"../Nav\";\n\nconst TextTypography = withStyles({\n  root: {\n    color: \"#373a3c\",\n    whiteSpace: \"pre-wrap\",\n  },\n})(Typography);\n\nconst useStyles = makeStyles((theme) => ({\n  textBox: {\n    overflowY: \"auto\",\n    maxHeight: window.innerHeight * 0.6,\n    marginTop: theme.spacing(4),\n    borderRadius: \"5px\",\n    boxShadow: \"0px 0px 2px\",\n  },\n}));\n\nconst dataHeading = [\n  \"My Medical Advisor website user interactions\",\n  \"Users' social media content\",\n  \"Other websites' data\",\n];\n\nconst dataText = [\n  [\n    \"Typing speed\",\n    \"Spelling errors\",\n    \"Rate of typing errors\",\n    \"Incidence of repetitive requests\",\n    \"Reading speed\",\n  ],\n  [\n    \"Posts by and about the user\",\n    \"Picture and videos\",\n    \"Realtionships: Family, significant other, friends\",\n    \"Hobbies, exercise, and other activities\",\n  ],\n  [\"Loyalty card purchases\", \"Browser histories\", \"Email\"],\n];\n\nconst mainText =\n  \"Part of your assignment is to identify specific companies who would be willing to provide data and also make recommendations for further data to collect, in order to refine the above list. Once the data is in hand, you will use it to improve the existing predictive model for cognitive decline, by incorporating new training features as appropriate.\";\n\nfunction ProjectAssignment({ pages, setPages, activePage, setActivePage }) {\n\n  const [task, setTask] = React.useState(\"\");\n  const [scenarios, setScenarios] = React.useContext(ScenariosContext);\n\n  React.useEffect(() => {\n    axios({\n      method: \"get\",\n      url: BASE_URL + \"/scenarios/task\",\n      headers: {\n        scenarioID: scenarios.currentScenarioID,\n        studentID: STUDENT_ID,\n      },\n    })\n    .then((response) => {\n      setTask((text) => response.data[0].body_text);\n    })\n    .catch((err) => {\n      console.log(\"err\", err);\n      alert(err);\n    });\n  }, [scenarios])\n\n  const classes = useStyles();\n  function goToIntroduction() {\n    if (!pages.introduction.visited) {\n      setPages((prevPages) => {\n        let copy = { ...prevPages };\n        copy.introduction.visited = true;\n        return copy;\n      });\n    }\n    setActivePage((prevPage) => \"introduction\");\n  }\n  function goToInitialReflection() {\n    if (!pages.initialReflection.visited) {\n      setPages((prevPages) => {\n        let copy = { ...prevPages };\n        copy.initialReflection.visited = true;\n        return copy;\n      });\n    }\n    setActivePage((prevPage) => \"initialReflection\");\n  }\n\n  function getUpperText(headings, subtext) {\n    let text = [];\n    for (let i = 0; i < headings.length; i++) {\n      let temp = \"\" + (i + 1) + \". \" + headings[i] + \"\\n\";\n      text.push(<b>{temp}</b>);\n      for (let j = 0; j < subtext[i].length; j++) {\n        let temp2 =\n          \"\\t\" + String.fromCharCode(97 + j) + \". \" + subtext[i][j] + \"\\n\";\n        text.push(<TextTypography>{temp2}</TextTypography>);\n      }\n    }\n    let temp3 = \"\\n\";\n    text.push(<TextTypography>{temp3}</TextTypography>);\n    return text;\n  }\n  //upperText is the indexed text before mainText\n  let upperText = getUpperText(dataHeading, dataText);\n  const textList = upperText.map((text) => <>{text}</>);\n\n  return (\n    <div>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Box mt={5}>\n          <TextTypography variant=\"h4\" align=\"center\" gutterBottom>\n            Project Task Assignment\n          </TextTypography>\n        </Box>\n      </Grid>\n      <Grid container direction=\"row\" justify=\"space-between\">\n        <Grid item style={{ marginRight: \"0rem\", marginTop: \"-3rem\" }}>\n          <Button\n            variant=\"contained\"\n            disableElevation\n            onClick={goToIntroduction}\n          >\n            Back\n          </Button>\n        </Grid>\n        <Grid item style={{ marginRight: \"0rem\", marginTop: \"-3rem\" }}>\n          <Button\n            variant=\"contained\"\n            disableElevation\n            color=\"primary\"\n            onClick={goToInitialReflection}\n          >\n            Next\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid container spacing={2}>\n        <Grid item lg={12}>\n          <Box p={2} className={classes.textBox}>\n            {/* <TextTypography variant=\"body1\">{upperText}</TextTypography> */}\n            {/* <>{textList}</> */}\n            <HTMLRenderer html={task}/>\n          </Box>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default ProjectAssignment;\n","import React from \"react\";\nimport QA from \"./components/q&a\";\nimport {\n  withStyles,\n  Typography,\n  Box,\n  Grid,\n  Button,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { BASE_URL, STUDENT_ID, SCENARIO_ID }from \"../constants/config\";\nimport axios from 'axios';\nimport { ScenariosContext } from \"../Nav\";\n\nconst TextTypography = withStyles({\n  root: {\n    color: \"#373a3c\",\n    whiteSpace: \"pre-wrap\",\n  },\n})(Typography);\n\nconst useStyles = makeStyles((theme) => ({\n  textBox: {\n    overflowY: \"auto\",\n    maxHeight: window.innerHeight * 0.6,\n    marginTop: theme.spacing(4),\n    borderRadius: \"5px\",\n    boxShadow: \"0px 0px 2px\",\n  },\n}));\n\nfunction Reflection({ pages, setPages, activePage, setActivePage,\n  content_url, res_url, nextPageID, prevPageID , title}) {\n\n  function goToPage(pageID) {\n    if (pages[pageID].completed) {\n      if (!pages[pageID].visited) {\n        setPages((prevPages) => {\n          let copy = { ...prevPages };\n          copy[pageID].visited = true;\n          return copy;\n        });\n      }\n      setActivePage((prevPage) => pageID);\n    }\n  }\n\n  const classes = useStyles();\n\n  const [bodyText, setBodyText] = React.useState('');\n  const [prompts, setPrompts] = React.useState([]);\n  const [promptResponses, setPromptResponses] = React.useState({});\n  const [scenarios, setScenarios] = React.useContext(ScenariosContext);\n\n  React.useEffect(() => {\n    (async () => {\n      await axios({\n        method: 'get',\n        url: BASE_URL + content_url,\n        headers: {\n          scenarioID: scenarios.currentScenarioID\n        }\n      }).then(response => {\n        setBodyText(response.data.body_text);\n        setPrompts(prev => response.data.prompts);\n      }).catch(err => {\n        console.log(err);\n        alert(err);\n      });\n\n      axios({\n        method: 'get',\n        url: BASE_URL + res_url,\n        headers: {\n          scenarioID: scenarios.currentScenarioID,\n          studentID: STUDENT_ID\n        }\n      }).then(response => {\n        setPromptResponses(response.data.reduce((prev, curr) => {\n          prev[curr.prompt_num] = curr.response;\n          return prev;\n        }, {}));\n      }).catch(err => {\n        console.log(err);\n      });\n    })();\n  }, [scenarios, activePage]);\n\n  async function handleResponse(data) {\n    await axios({\n      url: BASE_URL + content_url,\n      method: 'put',\n      data: {\n        scenarioID: scenarios.currentScenarioID,\n        studentID: STUDENT_ID,\n        data: data\n      }\n    });\n  }\n\n  return (\n    <div>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Box mt={5}>\n          <TextTypography variant=\"h4\" align=\"center\" gutterBottom>\n            {title}\n          </TextTypography>\n        </Box>\n      </Grid>\n      <Grid container direction=\"row\" justify=\"space-between\">\n        <Grid item style={{ marginRight: \"0rem\", marginTop: \"-3rem\" }}>\n          <Button\n            variant=\"contained\"\n            disableElevation\n            onClick={() => goToPage(prevPageID)}\n          >\n            Back\n          </Button>\n        </Grid>\n        <Grid item style={{ marginRight: \"0rem\", marginTop: \"-3rem\" }}>\n        </Grid>\n      </Grid>\n\n      <Grid container spacing={2}>\n        <Grid item lg={12}>\n          <Box m=\"2rem\">\n          </Box>\n            <QA header={bodyText} questions={prompts} handleResponse={handleResponse}\n              nextPage={() => goToPage(nextPageID)} pages={pages} nextPageName={nextPageID}\n              prevResponses={promptResponses}/>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Reflection;\n","import React,{useEffect} from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport {Box, Button} from \"@material-ui/core\";\n\nimport { BASE_URL, STUDENT_ID, SCENARIO_ID } from \"../../constants/config\";\nimport axios from 'axios';\nimport { ScenariosContext } from \"../../Nav\";\nimport { TrainOutlined, TrainRounded } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(3),\n  },\n  button: {\n    margin: theme.spacing(1, 1, 0, 0),\n  },\n}));\n\nexport default function ErrorRadios(props) \n{\n  let   content_url = props.content_url;\n  const classes = useStyles();\n  const [value, setValue] = React.useState('');\n  const [error, setError] = React.useState(false);\n  const [helperText, setHelperText] = React.useState('Choose carefully');\n\n  const handleRadioChange = (event) => {\n    setValue(event.target.value);\n    setHelperText(' ');\n    setError(false);\n  };\n\n  const handleSubmit = (event) => {\n    console.log(\"CLICKED\")\n    event.preventDefault();\n    if (value !== '') {\n      setHelperText('Good Answer!');\n      setError(true);\n      // props.pages[props.nextPageName].completed = true;\n      // props.nextPage();\n      props.handleResponse(value).then(res => {\n        console.log(\"LETS GO TO NEXT PAGE\")\n        props.pages[props.nextPageName].completed = true;\n        props.nextPage();\n      }).catch(err => alert(err))\n    } else {\n      console.log(\"FAIL TO GO TO NEXT PAGE\")\n      setHelperText('Please select an option.');\n      setError(true);\n    }\n  };\n\n  const [scenarios, setScenarios] = React.useContext(ScenariosContext);\n  const [choices, setChoices] = React.useState([]);\n\n  useEffect(() => {\n    // backend call\n    console.log(\"base: \" + BASE_URL + \" scenario: \" + SCENARIO_ID + \" student: \" + STUDENT_ID);\n    axios({\n      method: 'get',\n      url: BASE_URL + content_url,\n      headers: {\n        scenarioID: scenarios.currentScenarioID,\n        studentID: STUDENT_ID,\n      }\n    }).then(response => {\n      console.log(response);\n\n      const x = [];\n      console.log(content_url);\n      if (scenarios.currentScenarioID == 1)\n      {\n        for (var i = 0; i < response.data[0].option.length; i++)\n          x.push({value:response.data[0].option_id[i], label: response.data[0].option[i]});\n        console.log(x);\n        setChoices(choices => x);\n      }\n      if ((scenarios.currentScenarioID == 2)){\n        for (var i = 0; i < response.data[1].option.length; i++)\n          x.push({value:response.data[1].option_id[i], label: response.data[1].option[i]});\n        console.log(x);\n        setChoices(choices => x);\n      }\n    }).catch((err)=>{\n      console.log(\"err\",err);\n      //alert(err);\n    });\n  }, [scenarios])\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormControl component=\"fieldset\" error={error} className={classes.formControl}>\n        <RadioGroup aria-label=\"quiz\" name=\"quiz\" value={value} onChange={handleRadioChange}>\n          {choices.map((choice, index) => (\n              <FormControlLabel value={choice.value.toString()} key={choice.value.toString()} control={<Radio />} label={choice.label} />\n            ))\n          }\n        </RadioGroup>\n        <FormHelperText>{helperText}</FormHelperText>\n        <Box width={100}>\n          <Button type=\"submit\" variant=\"outlined\" color=\"primary\" className={classes.button}>\n            Submit\n          </Button>\n        </Box>\n      </FormControl>\n    </form>\n  );\n}\n\n","import React,{useEffect} from \"react\";\nimport { makeStyles, withStyles, Typography, Box, Button, Grid } from \"@material-ui/core\";\nimport Checkbox from \"./components/checkbox\";\nimport { BASE_URL, STUDENT_ID, SCENARIO_ID } from \"../constants/config\";\nimport axios from 'axios';\nimport { ScenariosContext } from \"../Nav\";\nimport HTMLRenderer from \"./components/htmlRenderer\";\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     backgroundColor: theme.palette.background.paper,\n//     color: \"#5b7f95\"\n//   },\n// }));\n\nconst TextTypography = withStyles({\n  root: {\n    color: \"#373a3c\"\n  }\n})(Typography);\n\nfunction Action({ pages, setPages, activePage, setActivePage, content_url, nextPageID, prevPageID, title }) {\n  function goToPage(pageID) {\n    if (pages[pageID].completed) {\n      if (!pages[pageID].visited) {\n        setPages((prevPages) => {\n          let copy = { ...prevPages };\n          copy[pageID].visited = true;\n          return copy;\n        });\n      }\n      setActivePage((prevPage) => pageID);\n    }\n  }\n\n  const [actionQuestion, setActionQuestion, setActionChoices] = React.useState('');\n  const [questionID, setQuestionID] = React.useState('');\n  const [scenarios, setScenarios] = React.useContext(ScenariosContext);\n\n  useEffect(() => {\n    // backend call\n    (async () => {\n      axios({\n        method: 'get',\n        url: BASE_URL + content_url,\n        headers: {\n          scenarioID: scenarios.currentScenarioID,\n          studentID: STUDENT_ID,\n        }\n      }).then(response => {\n        console.log(response);\n        if (scenarios.currentScenarioID == 1)\n        {\n          setActionQuestion(text => response.data[0].question);\n          setQuestionID(id => response.data[0].option_id);\n        }\n        if (scenarios.currentScenarioID == 2){\n          setActionQuestion(text => response.data[1].question);\n          setQuestionID(id => response.data[1].option_id);\n        }\n      }).catch((err)=>{\n        console.log(\"err\",err);\n        //alert(err);\n      });\n    })();\n  }, [scenarios]);\n\n  async function handleResponse(data) {\n    const request_data = {}\n    console.log(\"Question ID's \" + questionID);\n    request_data[questionID[0].toString()] = data;\n    await axios({\n      url: BASE_URL + content_url,\n      method: 'put',\n      data: {\n        scenarioID: scenarios.currentScenarioID,\n        studentID: STUDENT_ID,\n        data: request_data\n      }\n    });\n  }\n\n  return (\n    <div>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Box mt={5}>\n          <TextTypography variant=\"h4\" align=\"center\" gutterBottom>\n            {title}\n          </TextTypography>\n        </Box>\n      </Grid>\n      <Grid container direction=\"row\" justify=\"space-between\">\n        <Grid item style={{ marginRight: \"0rem\", marginTop: \"-3rem\" }}>\n          <Button variant=\"contained\" disableElevation onClick={() => goToPage(prevPageID)}>Back</Button>\n        </Grid>\n        <Grid item style={{ marginRight: \"0rem\", marginTop: \"-3rem\" }}>\n          {/*<Button variant=\"contained\" disableElevation color=\"primary\" onClick={() => goToPage(nextPageID)} >Next</Button>*/}\n        </Grid>\n      </Grid>\n      <Grid container spacing={2}>\n        <Grid item lg={12}>\n          <Box m=\"2rem\">\n          </Box>\n          <HTMLRenderer html={actionQuestion}/>\n        </Grid>\n        <Grid item lg={12}>\n          <Checkbox content_url = {content_url} nextPage={() => goToPage(nextPageID)} handleResponse={handleResponse} pages={pages} nextPageName={nextPageID} /> \n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Action;","import React from \"react\";\nimport { withStyles, Typography, Box, Button, Grid } from \"@material-ui/core\";\n\nconst TextTypography = withStyles({\n  root: {\n    color: \"#373a3c\"\n  }\n})(Typography);\n\nconst introText = \"You've chosen to delay starting the project in order to get more information. You realize that there are a number of stakeholders with whom you could have a face-to-face conversation with.\\n\\nThere is just enough time for you to hear from a select few different people and still complete your task assignment within the deadline. You should hear from at least one person.\\n\\nIn the following screen, you will be presented with several possible stakeholders. Each stakeholder that you choose to hear from will share their professional knowledge and opinions based on their individual perspective. Time is short, so be mindful of who is best positioned to fill in your understanding of the project and who will help you think critically about your assigned task.\\n\\nMake your selected on the next screen.\";\n\n\nfunction GatheredInformation({pages, setPages, activePage, setActivePage}) {\n  let goToInitialAction = ()=>{\n    if(pages.initialAction.completed){\n      if(!pages.initialAction.visited) {\n          setPages(prevPages => {\n            let copy = {...prevPages};\n            copy.initialAction.visited = true;\n            return copy;\n          });\n        }\n        setActivePage(prevPage => 'initialAction')\n    }\n  }\n  function goToStakeholders(){\n    if (!pages.stakeholders.visited) {\n      setPages(prevPages => {\n        let copy = {...prevPages};\n        copy.stakeholders.visited = true;\n        return copy;\n      });\n    }\n    setActivePage(prevPage => 'stakeholders')\n  }\n\n  return (\n    <div>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Box mt = {5}>\n          <TextTypography variant=\"h4\" align=\"center\" gutterBottom>\n            Gathered Information\n          </TextTypography>\n        </Box>\n      </Grid>\n      <Grid container direction=\"row\" justify=\"space-between\">\n        <Grid item style={{ marginRight: \"0rem\", marginTop: \"-3rem\" }}>\n          <Button variant=\"contained\" disableElevation onClick={goToInitialAction}>Back</Button>\n        </Grid>\n        <Grid item style={{ marginRight: \"0rem\", marginTop: \"-3rem\" }}>\n          <Button variant=\"contained\" disableElevation color=\"primary\" onClick={goToStakeholders} >Next</Button>\n        </Grid>\n      </Grid>\n      <Grid container spacing={2}>\n        <Grid item lg={12}>\n          <Box p={2}>\n            <TextTypography variant=\"body1\" style={{whiteSpace: 'pre-wrap'}}>{introText}</TextTypography>\n          </Box>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default GatheredInformation;","import React from \"react\";\nimport {\n  withStyles,\n  Typography,\n  Box,\n  Grid,\n  Button,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { BASE_URL, STUDENT_ID, SCENARIO_ID } from \"../constants/config\";\nimport axios from 'axios';\nimport HTMLRenderer from \"./components/htmlRenderer\";\nimport { ScenariosContext } from \"../Nav\";\n\nconst TextTypography = withStyles({\n  root: {\n    color: \"#373a3c\",\n    whiteSpace: \"pre-line\",\n  },\n})(Typography);\n\nconst useStyles = makeStyles((theme) => ({\n  textBox: {\n    overflowY: \"auto\",\n    maxHeight: window.innerHeight * 0.6,\n    marginTop: theme.spacing(4),\n    borderRadius: \"5px\",\n    boxShadow: \"0px 0px 2px\",\n  },\n}));\n\nfunction Conversation({ showStakeholders, setShowStakeholders, stakeholder }) {\n    function goToStakeholders() {\n        setShowStakeholders(true);\n    }\n\n    const [monologue, setMonologue] = React.useState('');\n    const [scenarios, setScenarios] = React.useContext(ScenariosContext);\n\n    React.useEffect(() => {\n      axios({\n        method: \"get\",\n        url: BASE_URL + \"/scenarios/stakeholders/conversation\",\n        headers: {\n          scenarioID: scenarios.currentScenarioID,\n          studentID: STUDENT_ID,\n          stakeholderID: stakeholder.id\n        },\n      })\n      .then((response) => {\n        console.log(response.data[0].conversation_text)\n        setMonologue(prev => response.data[0].conversation_text);\n        console.log(monologue)\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n        alert(err);\n      });\n    }, [scenarios]);\n  \n    const classes = useStyles();\n  \n    return (\n      <div>\n        <Box mt={5}>\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n            <TextTypography variant=\"h4\" align=\"center\" gutterBottom>\n              {stakeholder.name}\n            </TextTypography>\n          </Grid>\n        </Box>\n        <Grid item style={{ marginLeft: \"0rem\", marginTop: \"-3rem\" }}>\n            <Button\n              variant=\"contained\"\n              disableElevation\n              color=\"primary\"\n              onClick={goToStakeholders}\n            >\n              Return\n            </Button>\n          </Grid>\n        <Grid container direction=\"row\" justify=\"space-between\">\n          <Grid\n            item\n            style={{\n              marginLeft: \"0rem\",\n              marginRight: \"0rem\",\n              marginTop: \"-3rem\",\n            }}\n          >\n          </Grid>\n        </Grid>\n        <Grid container spacing={2}>\n          <Grid item lg={12}>\n            <Box p={2} className={classes.textBox}>\n              <HTMLRenderer html={monologue}/>\n            </Box>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n  \nexport default Conversation;","import React, { useContext } from \"react\";\nimport { makeStyles, withStyles, Typography, Box, Grid, Button,\n  Card, CardContent, Modal, Dialog, DialogContent, DialogContentText } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { GatheredInfoContext } from './simulationWindow';\nimport { BASE_URL, STUDENT_ID, SCENARIO_ID } from \"../constants/config\";\nimport axios from 'axios';\nimport Conversation from './conversation';\nimport { ScenariosContext } from \"../Nav\";\n\nconst TextTypography = withStyles({\n  root: {\n    color: \"#373a3c\"\n  }\n})(Typography);\n\nconst introText = \"Please select the Stakeholder you would like to interact with...\";\n\n\n\nfunction ellipses(str, cutoff) {\n  let newStr = str;\n  if (str.length >= cutoff) {\n    newStr = str.substring(0, cutoff - 1) + '…';\n    let lastSpace = newStr.lastIndexOf(' ');\n    if (lastSpace !== -1) {\n      newStr = newStr.substring(0, lastSpace) + '…';\n    }\n  }\n  return newStr;\n}\n\nfunction Stakeholders({ pages, setPages, activePage, setActivePage }) {\n  const theme = useTheme();\n  const [stakeholders, setStakeholders] = React.useState([])\n  const [scenarios, setScenarios] = React.useContext(ScenariosContext);\n  const [conversationLimit, setConversationLimit] = React.useState(0);\n  const [stakeholdersDisabled, setStakeholdersDisabled] = React.useState({});\n  const cardStyles = makeStyles({\n    root: {\n      width: 275,\n      height: 156,\n      wordBreak: 'break-word'\n    },\n    name: {\n      color: theme.palette.primary.main\n    },\n    background: {\n      color: '#444e58'\n    },\n    disabled: {\n      backgroundColor: '#f9f9f9',\n      color: '#c2c2c2'\n    }\n  });\n  const [modalOpenToggles, setModalOpenToggles] = React.useState({});\n  const [gatheredInfo, setGatheredInfo] = useContext(GatheredInfoContext);\n  const [showStakeholders, setShowStakeholders] = React.useState(true);\n  const [currentStakeholder, setCurrentStakeholder] = React.useState({});\n  const [numStakeholderTalkedTo, setNumStakeholderTalkedTo] = React.useState(0);\n  const createdCardStyles = cardStyles();\n  const stakeholdersGrid = getStakeholdersGrid(stakeholders);\n\n  React.useEffect(() => {\n    (async () => {\n      await axios({\n        method: 'get',\n        url: BASE_URL + '/scenarios/stakeholders',\n        headers: {\n          scenarioID: scenarios.currentScenarioID,\n          studentID: STUDENT_ID\n        }\n      }).then(response => {\n        setConversationLimit(response.data.conversation_limit)\n        const holders = response.data.stakeholders;\n        setStakeholders(holders);\n        setStakeholdersDisabled(prev => {\n          return holders.reduce((obj, stakeholder) => {\n            obj[stakeholder.id] = false;\n            return obj;\n          }, {});\n        });\n        setModalOpenToggles(prev => {\n          return holders.reduce((obj, stakeholder) => {\n            obj[stakeholder.id] = false;\n            return obj;\n          }, {});\n        });\n\n        axios({\n          method: 'get',\n          url: BASE_URL + '/scenarios/stakeholders/history',\n          headers: {\n            scenarioID: scenarios.currentScenarioID,\n            studentID: STUDENT_ID\n          }\n        }).then(histResponse => {\n          const history = histResponse.data;\n          setNumStakeholderTalkedTo(history.length);\n          if (history.length >= response.data.conversation_limit) {\n            setStakeholdersDisabled(prev => {\n              return holders.reduce((obj, stakeholder) => {\n                obj[stakeholder.id] = true;\n                return obj\n              }, {});\n            });\n          } else {\n            setStakeholdersDisabled(prev => {\n              let newDisabled = {...prev};\n              holders.forEach(stakeholder => {\n                let containsID = false;\n                for (let i = 0; i < history.length; ++i){\n                  if (stakeholder.id === history[i].stakeholder_id){\n                    containsID = true;\n                  }\n                }\n                if (containsID) {\n                  newDisabled[stakeholder.id] = true;\n                }\n              });\n              return newDisabled;\n            });\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }).catch(err => {\n        console.log(err);\n        alert(err);\n      });\n  })()\n  }, [scenarios])\n \n\n  function getStakeholderCards(id, name, designation, description, styles) {\n    const PAGE_ID_OF_PAGE_BEFORE_CONVERSATIONS = 'gatheredInformation';\n\n    function toggleModal(id, toggle) {\n      setModalOpenToggles(prev => {\n        let newToggles = {...prev};\n        newToggles[id] = toggle;\n        return newToggles;\n      });\n    }\n    let cardClass, nameClass, descriptionClass;\n    if (stakeholdersDisabled[id]) {\n      cardClass = `${styles.root} ${styles.disabled}`;\n      nameClass = descriptionClass = styles.disabled;\n    } else {\n      cardClass = styles.root;\n      nameClass = styles.name;\n      descriptionClass = styles.background;\n    }\n    return (\n      <>\n        <Button disabled={stakeholdersDisabled[id]} style={{textTransform: 'none'}} onClick={() => toggleModal(id, true)}>\n          <Card className={cardClass}>\n            <CardContent>\n              <Typography variant=\"h5\" component=\"h2\" align='left' className={nameClass}>\n                {name}\n              </Typography>\n              <Typography variant=\"body1\" component=\"p\" align='left'>\n                {designation}\n              </Typography>\n              <Typography variant=\"body2\" component=\"p\" align='left' className={descriptionClass}>\n                {ellipses(description, 87)}\n              </Typography>\n            </CardContent>\n          </Card>\n        </Button>\n        <Dialog\n          open={modalOpenToggles[id]}\n          onClose={() => toggleModal(id, false)}\n          maxWidth = {'md'}\n          >\n          <DialogContent>\n            <DialogContentText color = \"#000000\">{description}</DialogContentText>\n            <Button variant=\"contained\" onClick={() => {\n                setCurrentStakeholder(prev => ({\n                  name: name,\n                  id: id\n                }));\n                setStakeholdersDisabled(prev => {\n                  let newStakeholdersDisabled = {...prev};\n                  if (numStakeholderTalkedTo + 1 >= conversationLimit) {\n                    for (const id in newStakeholdersDisabled) {\n                      newStakeholdersDisabled[id] = true;\n                    }\n                  }else {\n                    newStakeholdersDisabled[id] = true;\n                  }\n                  return newStakeholdersDisabled;\n                });\n                setNumStakeholderTalkedTo(prev => {\n                  return (prev + 1)\n                });\n                axios({\n                  method: 'put',\n                  url: BASE_URL + '/scenarios/stakeholders',\n                  data: {\n                    scenarioID: scenarios.currentScenarioID,\n                    studentID: STUDENT_ID,\n                    stakeholderID: id\n                  }\n                }).catch(err => {\n                  console.error(err);\n                  alert(err);\n                })\n                setShowStakeholders(false);\n                toggleModal(id, false);\n                setGatheredInfo(infos => {\n                  let ind = infos.findIndex(info => info.pageId === PAGE_ID_OF_PAGE_BEFORE_CONVERSATIONS);\n                  if (ind < 0) { ind = infos.length; }\n                  let newInfos = [...infos];\n                  newInfos.splice(ind, 0,\n                    { name: name, id: `stakeholder:${id}`, pageId: 'stakeholders'});\n                  return newInfos;\n                });\n              }}>Continue</Button>\n          </DialogContent>\n        </Dialog>\n      </>\n    )\n  }\n\n  function getStakeholdersGrid(stakeholders) {\n    let items = stakeholders.map(stakeholder => getStakeholderCards(\n      stakeholder.id, stakeholder.name, stakeholder.designation, stakeholder.description, createdCardStyles));\n    return (\n      <div>\n        <Grid container spacing={3} justify={'center'}>\n          {items.map(item => ((\n            <Grid item>\n              {item}\n            </Grid>\n          )))}\n        </Grid>\n      </div>\n    )\n  }\n\n  function goToGatheredInformation() {\n    if (!pages.gatheredInformation.visited) {\n      setPages(prevPages => {\n        let copy = { ...prevPages };\n        copy.gatheredInformation.visited = true;\n        return copy;\n      });\n    }\n    setActivePage(prevPage => 'gatheredInformation')\n  }\n\n  function goToMiddleReflection() {\n    if (!pages.middleReflection.visited) {\n      setPages(prevPages => {\n        let copy = { ...prevPages };\n        copy.middleReflection.visited = true;\n        return copy;\n      });\n    }\n    setActivePage(prevPage => 'middleReflection')\n  }\n  return (\n    <>\n      {showStakeholders &&\n        <div>\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n          <Box mt={5}>\n            <TextTypography variant=\"h4\" align=\"center\" gutterBottom>\n              Stakeholders\n            </TextTypography>\n          </Box>\n        </Grid>\n        <Grid container direction=\"row\" justify=\"space-between\">\n          <Grid item style={{ marginRight: \"0rem\", marginTop: \"-3rem\" }}>\n            <Button variant=\"contained\" disableElevation onClick={goToGatheredInformation}>Back</Button>\n          </Grid>\n          <Grid item style={{ marginRight: \"0rem\", marginTop: \"-3rem\" }}>\n            <Button variant=\"contained\" disableElevation color=\"primary\" onClick={goToMiddleReflection}>Next</Button>\n          </Grid>\n        </Grid>\n        <Grid container spacing={2}>\n          <Grid item lg={12} md={12} sm={12}>\n            <Box m=\"1rem\" align={'center'}>\n              <TextTypography>\n                You've spoken to <b>{numStakeholderTalkedTo} out of {conversationLimit}</b> stakeholders</TextTypography>\n            </Box>\n            <TextTypography variant=\"body1\" align=\"center\">\n              {introText}\n            </TextTypography>\n          </Grid>\n          {stakeholdersGrid}\n        </Grid>\n      </div>\n      }\n      {!showStakeholders &&\n        <Conversation stakeholder={currentStakeholder} showStakeholders={showStakeholders} setShowStakeholders={setShowStakeholders}/>\n      }\n    </>\n  );\n}\n\nexport default Stakeholders;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    withStyles,\n    Typography,\n    Box,\n    Grid,\n    Button,\n    makeStyles,\n  } from \"@material-ui/core\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n\nconst TextTypography = withStyles({\n    root: {\n      color: \"#373a3c\",\n      whiteSpace: \"pre-line\",\n    },\n  })(Typography);\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n  textBox: {\n    overflowY: \"auto\",\n    maxHeight: window.innerHeight * 0.6,\n    marginTop: theme.spacing(0.5),\n    borderRadius: \"5px\",\n    boxShadow: \"0px 0px 2px\",\n  },\n}));\n\nconst issuesText =\n  [\"These are unprecedented times, at least by information age standards. Much of the U.S. economy has ground to a halt, and social norms about our data and our privacy have been thrown out the window throughout much of the world. Moreover, things seem likely to keep changing until a vaccine or effective treatment for COVID-19 becomes available. All this change could wreak havoc on artificial intelligence (AI) systems. Garbage in, garbage out still holds in 2020. The most common types of AI systems are still only as good as their training data. If there’s no historical data that mirrors our current situation, we can expect our AI systems to falter, if not fail. \\n\\n To date, at least 1,200 reports of AI incidents have been recorded in various public and research databases. That means that now is the time to start planning for AI incident response, or how organizations react when things go wrong with their AI systems. While incident response is a field that’s well developed in the traditional cybersecurity world, it has no clear analogue in the world of AI.  What is an incident when it comes to an AI system? When does AI create liability that organizations need to respond to? This article answers these questions, based on our combined experience as both a lawyer and a data scientist responding to cybersecurity incidents, crafting legal frameworks to manage the risks of AI, and building sophisticated interpretable models to mitigate risk. Our aim is to help explain when and why AI creates liability for the organizations that employ it, and to outline how organizations should react when their AI causes major problems.\",\n  \"Artificial intelligence and its applications are endless. Technology and AI applications can be applied in many different sectors and industries to generate the maximum output out of the operational front. In the current time period, AI is being tested and used in the healthcare industry for dosing drugs and different treatment in patients, and for surgical procedures in the operating rooms as well.\",\n  \"Information technology is the study, design, development, implementation, support or management of computer-based information systems—particularly software applications and computer hardware. IT workers help ensure that computers work well for people.\",\n]\n\nexport default function ScrollableTabsButtonAuto() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n    <Box mt={5}>\n      <AppBar position=\"static\" color='default' >\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable auto tabs example\"\n        >\n          <Tab label=\"Incorrect ML-generated advice can cause harm at large.\" {...a11yProps(0)} />\n          <Tab label=\"What people are saying in the real world.\" {...a11yProps(1)} />\n          <Tab label=\"Another one.\" {...a11yProps(2)} />\n          {/* <Tab label=\"Issue Four\" {...a11yProps(3)} />\n          <Tab label=\"Issue Five\" {...a11yProps(4)} />\n          <Tab label=\"Issue Six\" {...a11yProps(5)} />\n          <Tab label=\"Issue Seven\" {...a11yProps(6)} /> */}\n        </Tabs>\n      </AppBar>\n      </Box>\n      <TabPanel value={value} index={0}>\n        <Box p={2} className={classes.textBox}>\n            <TextTypography variant=\"body1\">{issuesText[0]}</TextTypography>\n        </Box>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Box p={2} className={classes.textBox}>\n            <TextTypography variant=\"body1\">{issuesText[1]} <a href='https://en.wikipedia.org/wiki/Ethics_of_artificial_intelligence#:~:text=Machine%20ethics%20(or%20machine%20morality,morally%20or%20as%20though%20moral.&text=More%20recently%2C%20academics%20and%20many,can%20itself%20be%20held%20accountable.' target=\"_blank\">Click here for more information.</a></TextTypography>\n        </Box>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n      <Box p={2} className={classes.textBox}>\n            <TextTypography variant=\"body1\">{issuesText[2]}</TextTypography>\n          </Box>\n      </TabPanel>\n    </div>\n  );\n}","import React from \"react\";\nimport { withStyles,Typography, Box, Grid, Button} from \"@material-ui/core\";\nimport Radar from \"./chart/chart\";\nimport ScrollableTabsButtonAuto from \"./components/feedback_tabs\";\n\nconst TextTypography = withStyles({\n  root: {\n    color: \"#373a3c\"\n  }\n})(Typography);\n\nfunction Feedback({pages, setPages, activePage, setActivePage}) {\n  function goToSummary(){\n    if (!pages.summary.visited) {\n      setPages(prevPages => {\n        let copy = {...prevPages};\n        copy.summary.visited = true;\n        return copy;\n      });\n    }\n    setActivePage(prevPage => 'summary')\n  }\n\n  function goToFinalReflection(){\n    if (!pages.finalReflection.visited) {\n      setPages(prevPages => {\n        let copy = {...prevPages};\n        copy.finalReflection.visited = true;\n        return copy;\n      });\n    }\n    setActivePage(prevPage => 'finalReflection')\n  }\n\n  let Summary_Value = 2.03;\n  let Coverage = { Safety: 0.5, Salary: 0.667, Reputation: 1.0, Privacy: 0.8 };\n  return (\n    <div>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n        <Box mt = {5}>\n          <TextTypography variant=\"h4\" align=\"center\" gutterBottom>\n            Feedback\n          </TextTypography>\n        </Box>\n      </Grid>\n      <Grid container direction=\"row\" justify=\"space-between\">\n        <Grid item style={{ marginRight: \"0rem\", marginTop: \"-3rem\" }}>\n          <Button variant=\"contained\" disableElevation onClick={goToSummary}>Back</Button>\n        </Grid>\n        <Grid item style={{ marginRight: \"0rem\", marginTop: \"-3rem\" }}>\n          <Button variant=\"contained\" disableElevation color=\"primary\" onClick={goToFinalReflection}>Next</Button>\n        </Grid>\n      </Grid>\n      <Grid container spacing={2}>\n        <Grid lg={12}>\n          <Box m=\"2rem\">\n            <Radar coverage={Coverage} summary={Summary_Value} />\n          </Box>\n          <TextTypography variant=\"body1\">\n            Artificial intelligence and machine learning technologies are\n            rapidly transforming society and will continue to do so in the\n            coming decades. This social transformation will have deep ethical\n            impact, with these powerful new technologies both improving and\n            disrupting human lives. AI, as the externalization of human\n            intelligence, offers us in amplified form everything that humanity\n            already is, both good and evil. Much is at stake. At this crossroads\n            in history we should think very carefully about how to make this\n            transition, or we risk empowering the grimmer side of our nature,\n            rather than the brighter.\n          </TextTypography>\n        </Grid>\n      </Grid>\n      <Grid container spacing={2}>\n        <Grid lg={12}>\n          <ScrollableTabsButtonAuto/>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Feedback;","import React, { useState, createContext, useEffect, useContext } from \"react\";\nimport {Grid, Typography, Box, Button} from \"@material-ui/core\";\nimport Stepper from \"./components/stepper.js\";\nimport InfoGatheredList from \"./components/gatheredList.js\";\nimport Summary from \"./summary.js\";\nimport Conclusion from \"./conclusion.js\";\nimport Introduction from \"./introduction.js\";\nimport ProjectAssignment from \"./projectAssignment.js\";\nimport Reflection from \"./reflection.js\";\nimport Action from \"./action.js\";\nimport GatheredInformation from \"./gatheredInformation.js\";\nimport Stakeholders from \"./stakeholders.js\";\nimport Feedback from \"./feedback.js\";\nimport { ScenariosContext } from \"../Nav.js\";\nimport axios from \"axios\";\nimport {BASE_URL, STUDENT_ID, DEV_MODE, SCENARIO_ID} from \"../constants/config\";\n\nexport const GatheredInfoContext = createContext();\n\nfunction SimulationWindow() {\n\n  const [activePage, setActivePage] = useState(\"introduction\");\n  const [pages, setPages] = useState({\n    introduction: { visited: true, completed: true, pageNumber: 0, html: (<Introduction />) },\n    projectAssignment: { visited: false, completed: true, pageNumber: 1, html: (<ProjectAssignment />) },\n    initialReflection: {\n      visited: false, completed: true, pageNumber: 2, html: (<Reflection\n        content_url=\"/scenarios/initialReflection\" res_url=\"/scenarios/initialReflection/response\" nextPageID=\"initialAction\" prevPageID=\"projectAssignment\" title=\"Reflect on Initial Information\" />)\n    },\n    initialAction: {\n      visited: false, completed: true, pageNumber: 3, html: (<Action\n        content_url=\"/scenarios/initialAction\" nextPageID=\"gatheredInformation\" prevPageID=\"initialReflection\" title=\"Initial Action\" />)\n    },\n    gatheredInformation: { visited: false, completed: false, pageNumber: 4, html: (<GatheredInformation />) },\n    stakeholders: { visited: false, completed: true, pageNumber: 5, html: (<Stakeholders />) },\n    middleReflection: {\n      visited: false, completed: true, pageNumber: 6, html: (<Reflection\n        content_url=\"/scenarios/middleReflection\" res_url=\"/scenarios/middleReflection/response\"\n        nextPageID=\"finalAction\" prevPageID=\"stakeholders\" title=\"Reflect on Stakeholder Information\" />)\n    },\n    finalAction: {\n      visited: false, completed: true, pageNumber: 7, html: (<Action\n        content_url=\"/scenarios/FinalAction\" nextPageID=\"summary\" prevPageID=\"middleReflection\" title=\"Final Action\" />)\n    },\n    summary: { visited: false, completed: false, pageNumber: 8, html: (<Summary />) },\n    feedback: { visited: false, completed: true, pageNumber: 9, html: (<Feedback />) },\n    finalReflection: {\n      visited: false, completed: true, pageNumber: 10, html: (<Reflection\n        content_url=\"/scenarios/finalReflection\" res_url=\"/scenarios/finalReflection/response\"\n        nextPageID=\"conclusion\" prevPageID=\"feedback\" title=\"Reflect on Final Information\" />)\n    },\n    conclusion: { visited: false, completed: false, pageNumber: 11, html: (<Conclusion />) }\n  });\n\n\n  const infoIdsState = useState([]);\n  const [scenarios, setScenarios] = useContext(ScenariosContext);\n\n  // Asynchronously initialize infoIdsState and scenarios\n  useEffect(() => {\n    // placeholder async function until redux is set up\n    async function imitateGetCompleteStakeholders() { return [] };// {name: 'Stakeholder 0', id: 's0'}] }\n\n    imitateGetCompleteStakeholders().then(stakeholders => {\n      infoIdsState[1](ids => {\n        return [\n          ...stakeholders.map(stakeholder => {\n            stakeholder.pageId = 'stakeholders';\n            return stakeholder;\n          })\n        ];\n      });\n    });\n\n      axios({\n        method: 'get',\n        url: BASE_URL + '/scenarios',\n        headers: {\n          studentID: STUDENT_ID,\n        }\n      }).then(response => {\n        setScenarios(prev => {\n          return {\n            scenarioList: response.data,\n            currentScenarioID: response.data[0].id\n          }\n        });\n      }).catch(err => {\n        console.error(err);\n      });\n  }, []) // only fire once\n\n  return (\n    <div>\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n      </Grid>\n      <Grid container spacing={2}>\n        <GatheredInfoContext.Provider value={infoIdsState}>\n          <Grid item lg={3} md={2} sm={2}>\n            <Stepper activePage={activePage} pages={pages} setPages={setPages} setActivePage={setActivePage} key={activePage} />\n          </Grid>\n          <Grid item lg={6} md={8} sm={8}>\n            <Box mb={6}>\n              {React.cloneElement(pages[activePage].html, {\n                    pages: pages,\n                    setPages: setPages,\n                    activePage: activePage,\n                    setActivePage: setActivePage})}\n            </Box>\n            {DEV_MODE && (\n              <Typography>\n                {\"Scenarios:\"} <br/>\n                {scenarios.scenarioList && scenarios.scenarioList.map(scenario => {\n                  return (<>\n                    {Object.keys(scenario).map(key => ((<>{key}: {scenario[key]}<br/></>)))}\n                    <Button variant=\"contained\" disableElevation\n                    onClick={() => setScenarios(scenarios => {\n                      let newScenarios = {...scenarios};\n                      newScenarios.currentScenarioID = scenario.id;\n                      return newScenarios;\n                    })}>\n                      set as current scenario\n                    </Button>\n                    <br/> <br/>\n                  </>)\n                })}\n              </Typography>)}\n          </Grid>\n          <Grid container item lg={3} md={2} sm={2}>\n            <Grid item lg={12}>\n              <InfoGatheredList pages={pages}/>\n            </Grid>\n            <Grid item lg={12}>\n\n            </Grid>\n          </Grid>\n        </GatheredInfoContext.Provider>\n      </Grid>\n    </div>\n  );\n}\n\nexport default SimulationWindow;\n","import React from \"react\";\n\nimport Summary from \"./pages/summary\";\nimport Home from \"./pages/home\";\nimport RadarTest from \"./pages/chartTest\";\nimport Dashboard from \"./pages/sim_dashboard\";\n\nimport {\n  ThemeProvider,\n  createMuiTheme,\n  makeStyles,\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  IconButton,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport SimulationWindow from \"./pages/simulationWindow\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    backgroundColor: \"#ced4da\",\n  },\n  title: {\n    flexGrow: 1,\n    color: \"#FFF\",\n  },\n  link: {\n    \"&:hover\": {\n      color: \"#000000\",\n      textDecoration: \"none\",\n    },\n  },\n}));\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#881c1c\",\n    },\n  },\n  background: {\n    color: '#444e58'\n  }\n});\n\nconst menuItems = [\n  {\n    listText: \"Home\",\n    listPath: \"/\",\n  },\n  {\n    listText: \"Summary\",\n    listPath: \"/summary\",\n  },\n  {\n    listText: \"Simulation Window\",\n    listPath: \"/simulation\",\n  },\n  {\n    listText: \"Chart\",\n    listPath: \"/chartTest\",\n  },\n];\n\nexport const ScenariosContext = React.createContext();\n\nfunction Nav() {\n  const classes = useStyles();\n  const scenariosState = React.useState({});\n\n  return (\n    <div className={classes.root}>\n      <Router basename=\"/simulator\">\n        <div>\n          <ThemeProvider theme={theme}>\n            <AppBar position=\"static\" color=\"primary\">\n              <Toolbar>\n                <IconButton\n                  edge=\"start\"\n                  className={classes.menuButton}\n                  color=\"inherit\"\n                  aria-label=\"menu\"\n                >\n                <MenuIcon />\n                </IconButton>\n                <Typography variant=\"h6\" className={classes.title}>\n                  <Link className={classes.link} to=\"/\">\n                    <Button className={classes.title} color=\"inherit\">\n                      Home\n                    </Button>\n                  </Link>\n                  {/* <Link className={classes.link} to=\"/summary\">\n                    <Button className={classes.title} color=\"inherit\">\n                    Summary\n                    </Button>\n                  </Link> */}\n                  <Link className={classes.link} to=\"/simulation\">\n                    <Button className={classes.title} color=\"inherit\">\n                      Simulation Window\n                    </Button>\n                  </Link>\n                  {/* <Link className={classes.link} to=\"/chartTest\">\n                    <Button className={classes.title} color=\"inherit\">\n                      Chart\n                    </Button>\n                  </Link> */}\n                </Typography>\n                <Button color=\"inherit\">LogOut</Button>\n              </Toolbar>\n            </AppBar>\n\n          {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n          <Switch>\n            <Route path=\"/summary\" exact>\n              <Summary />\n            </Route>\n            <Route path=\"/scenarios\" exact>\n              <ScenariosContext.Provider value={scenariosState}>\n                <SimulationWindow />\n              </ScenariosContext.Provider>\n            </Route>\n            <Route path=\"/chartTest\" exact>\n              <RadarTest />\n            </Route>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n          </Switch>\n          </ThemeProvider>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default Nav;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport playerReducer from './redux/reducers';\nimport './index.css';\nimport './pages/components/suneditor.min.css';\nimport Nav from './Nav';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(playerReducer, undefined,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Nav />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}